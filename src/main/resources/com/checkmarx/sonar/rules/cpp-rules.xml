<?xml version="1.0" encoding="UTF-8" standalone="yes"?><rules><rule><key>checkmarx_209</key><name>Unvalidated_Arguments_Of_Public_Methods</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;div class="definitions" id="TableWithRules"&gt;&lt;table border="0" cellspacing="0" cellpadding="0" width="100%"&gt;&lt;tbody&gt;&lt;tr class="header"&gt;&lt;th valign="top" width="100%" colspan="2"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold; "&gt;Unvalidated Arguments Of Public Methods&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;CWE ID&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;10004&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;Using unvalidated arguments of public methods may cause a null reference exception to be thrown.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Likelihood of Exploit&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;Low&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Common Consequences&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;An externally visible method may dereferences one of it's unvalidated reference arguments causing an exception to be thrown.&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Potential Mitigations&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;Validate each reference argument against null.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Demonstrative&lt;br&gt;Examples&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;The following code shows a method that does not validates it's argument before using it.&lt;/p&gt;&lt;div style="height:10px; width:100%;"&gt;&lt;/div&gt;&lt;p style="font-weight:bold;"&gt;C# Example:&lt;/p&gt;&lt;div id="ExampleCode"&gt;&lt;div class="shadow"&gt;&lt;div class="top"&gt;...&lt;br&gt;
public void myPublicMethod(object input)&lt;br&gt;
      {&lt;br&gt;
            Console.WriteLine(input.ToString());&lt;br&gt;
      }&lt;br&gt;
...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style="height:10px; width:100%;"&gt;&lt;/div&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Applicable Platforms&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;All&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;/div&gt;
&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1561</key><name>Unused_Variable</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Unused Variable&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;563&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Variant)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_563_Description" id="oc_563_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The variable's value is assigned but never used, making it a
dead store.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;It is likely that the variable is simply vestigial, but it is also
possible that the unused variable points out a bug.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_563_Time of Introduction" id="oc_563_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_563_Demonstrative Examples" id="oc_563_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code excerpt assigns to the variable r and then
overwrites the value without using it.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;r = getName();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;r = getNewBuffer(buf);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_563_Potential Mitigations" id="oc_563_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Remove unused variables from the code.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_563_Other Notes" id="oc_563_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;This variable's value is not used. After the assignment, the variable is
either assigned another value or goes out of scope.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_563_Relationships" id="oc_563_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;747&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=747" target="_blank"&gt;CERT C Secure Coding Section 49 - Miscellaneous (MSC)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_563_Taxonomy Mappings" id="oc_563_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Anonymous Tool Vendor (under NDA)&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MSC00-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Compile cleanly at high warning levels&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_563_Content History" id="oc_563_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Anonymous Tool Vendor (under NDA)&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description, Relationships, Other Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_333</key><name>Use_of_Zero_Initialized_Pointer</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Use of Uninitialized Variable&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;457&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Variant)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_457_Description" id="oc_457_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The code uses a variable that has not been initialized, leading
to unpredictable or unintended results.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;In some languages, such as C, an uninitialized variable contains contents
of previously-used memory. An attacker can sometimes control or read these
contents.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_457_Time of Introduction" id="oc_457_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_457_Applicable Platforms" id="oc_457_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C: &lt;span class="smaller" style="font-style:italic"&gt;(Sometimes)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;C++: &lt;span class="smaller" style="font-style:italic"&gt;(Sometimes)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Perl: &lt;span class="smaller" style="font-style:italic"&gt;(Often)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_457_Common Consequences" id="oc_457_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Initial variables usually contain junk, which can not be trusted for
consistency. This can lead to denial of service conditions, or modify
control flow in unexpected ways. In some cases, an attacker can
"pre-initialize" the variable using previous actions, which might enable
code execution. This can cause a race condition if a lock variable check
passes when it should not.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Authorization&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Strings that are not initialized are especially dangerous, since many
functions expect a null at the end -- and only at the end -- of a
string.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_457_Likelihood of Exploit" id="oc_457_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_457_Demonstrative Examples" id="oc_457_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following switch statement is intended to set the values of the
variables aN and bN, but in the default case, the programmer has
accidentally set the value of aN twice. As a result, bN will have an
undefined value.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;switch (ctl) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;case -1:&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;aN = 0;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;bN = 0;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;case 0:&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;aN = i;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;bN = -i;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;case 1:&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;aN = i + NEXT_SZ;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;bN = i - NEXT_SZ;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;default:&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;aN = -1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;aN = -1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;repaint(aN, bN);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Most uninitialized variable issues result in general software
reliability problems, but if attackers can intentionally trigger the use
of an uninitialized variable, they might be able to launch a denial of
service attack by crashing the program. Under the right circumstances,
an attacker may be able to control the value of an uninitialized
variable by affecting the values on the stack prior to the invocation of
the function.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;&lt;div class="indent "&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example Languages: &lt;/span&gt;C++ and Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int foo;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;void bar() {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;if (foo==0)&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/.../&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/../&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_457_Observed Examples" id="oc_457_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0081" target="_blank"&gt;CVE-2008-0081&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Uninitialized variable leads to code execution in
popular desktop application.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4682" target="_blank"&gt;CVE-2007-4682&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Crafted input triggers dereference of an
uninitialized object pointer.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-3468" target="_blank"&gt;CVE-2007-3468&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Crafted audio file triggers crash when an
uninitialized variable is used.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-2728" target="_blank"&gt;CVE-2007-2728&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Uninitialized random seed variable
used.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_457_Potential Mitigations" id="oc_457_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Assign all variables to an initial value.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Build and Compilation&lt;/p&gt;&lt;p&gt;Most compilers will complain about the use of uninitialized variables
if warnings are turned on.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p&gt;The choice could be made to use a language that is not susceptible to
these issues.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Mitigating technologies such as safe string libraries and container
abstractions could be introduced.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_457_Other Notes" id="oc_457_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Before variables are initialized, they generally contain junk data of what
was left in the memory that the variable takes up. This data is very rarely
useful, and it is generally advised to pre-initialize variables or set them
to their first values early. If one forgets -- in the C language -- to
initialize, for example a char *, many of the simple string libraries may
often return incorrect results as they expect the null termination to be at
the end of a string.&lt;/p&gt;
&lt;p&gt;Stack variables in C and C++ are not initialized by default. Their initial
values are determined by whatever happens to be in their location on the
stack at the time the function is invoked. Programs should never use the
value of an uninitialized variable. It is not uncommon for programmers to
use an uninitialized variable in code that handles errors or other rare and
exceptional circumstances. Uninitialized variable warnings can sometimes
indicate the presence of a typographic error in the code.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_457_Relationships" id="oc_457_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;456&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=456" target="_blank"&gt;Missing Initialization&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_457_Taxonomy Mappings" id="oc_457_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Uninitialized variable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Uninitialized Variable&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_457_White Box Definitions" id="oc_457_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. start statement that defines variable&lt;/p&gt;
&lt;p&gt;2. end statement that accesses the variable&lt;/p&gt;
&lt;p&gt;3. the code path does not contain a statement that assigns value to
the variable&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_457_References" id="oc_457_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;mercy. "Exploiting Uninitialized Data". Jan 2006. &amp;lt;&lt;a href="%0A%09%09%09%09%09%09http://www.felinemenace.org/~mercy/papers/UBehavior/UBehavior.zip" target="_blank"&gt;
http://www.felinemenace.org/~mercy/papers/UBehavior/UBehavior.zip&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Microsoft Security Vulnerability Research &amp;amp;
Defense. "MS08-014 : The Case of the Uninitialized Stack Variable
Vulnerability". 2008-03-11. &amp;lt;&lt;a href="http://blogs.technet.com/swi/archive/2008/03/11/the-case-of-the-uninitialized-stack-variable-vulnerability.aspx" target="_blank"&gt;http://blogs.technet.com/swi/archive/2008/03/11/the-case-of-the-uninitialized-stack-variable-vulnerability.aspx&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_457_Content History" id="oc_457_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Description, Relationships, Observed Example, Other Notes, References,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Demonstrative Examples,
Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Uninitialized
Variable&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_220</key><name>Format_String_Attack</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Allowing attackers to control format strings could enable them&amp;#160;to access areas of memory to which they should not have access, including reading other restricted variables, misrepresenting data, and possibly even overwriting unauthorized areas of memory. It is even possible this could further lead to buffer overflows and arbitrary code execution.&amp;#160;&lt;/div&gt;            
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application allows user input to influence the string argument used for formatted print functions. This family of functions expects the first argument to designate the relative format of dynamically constructed output string, including how to represent each of the other arguments, or special codes to access other areas of memory.&amp;#160;&lt;/div&gt;
&lt;div&gt;Allowing an external user or attacker to control this string, allows them to control the functioning of the printing function, and thus to access unexpected areas of memory.&amp;#160;&lt;/div&gt;            
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Do not allow user input or any other external data to influence the format strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Ensure that all string format functions are called with a static string as the format parameter, and that the correct number of arguments are passed to the function, according to the static format string.&amp;#160;&lt;/li&gt;
&lt;li&gt;Alternatively, validate all user input before using it in the format string parameter to print format functions, and ensure formatting tokens are not included in the input.&amp;#160;&lt;/li&gt;
&lt;li&gt;Enable compiler settings that check for unvalidated format strings.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Recommendations:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Do not include user input directly in the format string parameter (often the first or second argument) to formatting functions.&amp;#160;&lt;/li&gt;
&lt;li&gt;Alternatively, use only the input's size or length in the format string, but not the actual contents of the input itself.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;div&gt;&amp;#160;&lt;/div&gt;
&lt;/div&gt;            
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Improper use of formatting string&lt;/h4&gt;&lt;pre&gt;
printf(name + " has the following id: %d", id); 
&lt;/pre&gt;&lt;h4&gt;Safe use of formatting string&lt;/h4&gt;&lt;pre&gt;
printf("%s has the following id: %d", name, id); 
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4030</key><name>Plaintext_Storage_Of_A_Password</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application accesses the system database using a password. This password is stored in plaintext, without encryption. This could allow an attacker that gains access to the application storage to steal the application's database password, and connect directly to the database while&amp;#160;impersonating the application.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application retrieves the database password and uses it directly to open a connection to the database. The application does not decrypt the password before using it, since it is stored in plaintext.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Do not store any sensitive information, such as database passwords, in plain text.&lt;/li&gt;
&lt;li&gt;Safely&amp;#160;encrypt application passwords, using proper methods of encryption. If the original password must be retrievable, e.g. to connect to the database, use AES-CBC or GCM with a strong encryption key and random IV.&amp;#160;&lt;/li&gt;
&lt;li&gt;Implement proper key management, including dynamically generating random keys, protecting keys, and replacing keys as necessary.&amp;#160;&lt;/li&gt;
&lt;li&gt;Alternatively, encrypt the password using platform mechanisms or a hardware device.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Recommendations:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Decrypt application password before opening the database connection.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Plaintext Database Password&lt;/h4&gt;&lt;pre&gt;
public Connection createConnection(Properties connectionProperties) {

    string user = connectionProperties.getProperty("user");
    string password = connectionProperties.getProperty("password");
    
    Connection conn = DriverManager.getConnection(CONN_STRING, user, password);
    
    return conn; 
}&lt;/pre&gt;&lt;h4&gt;Encrypted Database Password&lt;/h4&gt;&lt;pre&gt;
public Connection createConnection(Properties connectionProperties) {

    string user = connectionProperties.getProperty("user");
    string password = connectionProperties.getProperty("password");
    
    // Call encryption framework to decrypt password with protected key
    password = decryptPassword(password); 
    
    try { 
        Connection conn = DriverManager.getConnection(CONN_STRING, 
                                                    user, password);
    }
    catch (SQLException e)  {
        handleException(e); 
    }
    
    return conn; 
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4070</key><name>Creation_of_chroot_Jail_without_Changing_Working_Directory</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Applications often use &lt;code&gt;chroot()&lt;/code&gt;&amp;#160;or &lt;code&gt;f&lt;span style="font-family: monospace;"&gt;chroot()&lt;/span&gt;&lt;/code&gt;&amp;#160;to constrain the program's view of the file system to a specific directory tree. However, there are various ways to escape the "chroot jail", if the program's working directory is currently outside the chroot jail. This would allow&amp;#160;a malicious program or user to continue to access files or directories outside of the chroot directory, if the working directory is not explictly changed into the chroot.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Most Unix/Linux systems do not automatically change the current working directory, when calling chroot, and rely on the calling application (or system administrator) to explicitly call &lt;code&gt;chdir()/fchdir()&lt;/code&gt; to change the working directory into the newly created chroot jail. However, the application does not change the working directory before calling &lt;code&gt;chroot()&lt;/code&gt;.&amp;#160;&lt;/div&gt;
&lt;div&gt;For example, if the current working directory is outside the chrooted directory tree, a malicious user can cause the program to change directory, e.g. via repeated&amp;#160;&lt;code&gt;chdir("..")&lt;/code&gt; calls, until reaching the real root directory. Once this has been done, the program can access any other directory as required, without being affected by the chroot limitation.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Ensure the application uses chroot correctly, including explictly changing the working directory.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer changing the working directory before calling chroot(), in order to minimize the risk of escaping the chroot jail before being constrained to it (e.g. via an error being thrown between the calls, or complex code flows).&amp;#160;&lt;/li&gt;
&lt;li&gt;Ensure the application calls setuid() to lower process privileges after calling chroot().&amp;#160;&lt;/li&gt;
&lt;li&gt;Close and release any open file descriptors when moving into a chroot environment.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not rely on chroot for security boundaries, or for a fully secure sandbox. Instead, consider more modern mechanisms, e.g. BSD jails or virtualized containers.&lt;/li&gt;
&lt;li&gt;Note that there are several additional issues that would allow a user or process to escape the chroot jail, including hard links, and moving the working directory outside the chroot.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Recommendations:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Call chdir() into the directory that will be chrooted, before calling chroot().&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Insecure chroot creation&lt;/h4&gt;&lt;pre&gt;int createChroot(const char *path)
{
    int res = 0; 
    if (path != NULL)
    {
        res = chroot(path);
        if (res != 0)
            handleError();
    }
    return res;
}&lt;/pre&gt;&lt;h4&gt;Create chroot with Working Directory&lt;/h4&gt;&lt;pre&gt;int createChroot(const char *path)
{
    int res = -1;  // Default to chroot not created securely
    if (path != NULL)
    {
        if (chdir(path) == 0)   // First change working dir to target dir
        {
            res = chroot(path);
            if (res != 0)
                handleError();
        }
        else 
            handleError();
    }
    return res;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_294</key><name>Integer_Overflow</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Assigning large data types into smaller data types, without proper checks and explicit casting, will&amp;#160;lead to undefined behavior and unintentional effects, such as data corruption (e.g. value wraparound, wherein maximum values become minimum values); system crashes; infinite loops; logic errors, such as bypassing of security mechanisms; or even buffer overflows leading to arbitrary code execution.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;This flaw can occur when&amp;#160;implicitly casting numerical data types of a larger size, into a variable with a data type of a smaller size. This forces the program to discard some bits of information from the number.&lt;/div&gt;
&lt;div&gt;Depending on how the numerical data types are stored in memory, this is often the bits with the highest value, causing substantial corruption of the stored number. Alternatively,&amp;#160;the sign bit of a signed integer could be lost, completely reversing the intention of the number.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Avoid casting larger data types to smaller types.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer promoting the target variable to a large enough data type.&amp;#160;&lt;/li&gt;
&lt;li&gt;If downcasting is necessary, always check that values are valid and in range of the target type, before casting&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Unsafe Downsize Casting&lt;/h4&gt;&lt;pre&gt;int unsafe_addition(short op1, int op2) { 

    // op2 gets forced from int into a short
    short total = op1 + op2; 
    
    return total;
}
&lt;/pre&gt;&lt;h4&gt;Safer Use of Proper Data Types&lt;/h4&gt;&lt;pre&gt;int safe_addition(short op1, int op2) { 

    // total variable is of type int, the largest type that is needed
    int total = 0; 

    // check if total will overflow available integer size 
    if (INT_MAX - abs(op2) &gt; op1) 
    {
        total = op1 + op2; 
    }
    else
    {
        // instead of overflow, saturate (but this is not always a good thing)
        total = INT_MAX
    }
    
    return total;
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_295</key><name>Long_Overflow</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Assigning large data types into smaller data types, without proper checks and explicit casting, will&amp;#160;lead to undefined behavior and unintentional effects, such as data corruption (e.g. value wraparound, wherein maximum values become minimum values); system crashes; infinite loops; logic errors, such as bypassing of security mechanisms; or even buffer overflows leading to arbitrary code execution.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;This flaw can occur when&amp;#160;implicitly casting numerical data types of a larger size, into a variable with a data type of a smaller size. This forces the program to discard some bits of information from the number.&lt;/div&gt;
&lt;div&gt;Depending on how the numerical data types are stored in memory, this is often the bits with the highest value, causing substantial corruption of the stored number. Alternatively,&amp;#160;the sign bit of a signed integer could be lost, completely reversing the intention of the number.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Avoid casting larger data types to smaller types.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer promoting the target variable to a large enough data type.&amp;#160;&lt;/li&gt;
&lt;li&gt;If downcasting is necessary, always check that values are valid and in range of the target type, before casting&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Unsafe Downsize Casting&lt;/h4&gt;&lt;pre&gt;int unsafe_addition(short op1, int op2) { 

    // op2 gets forced from int into a short
    short total = op1 + op2; 
    
    return total;
}
&lt;/pre&gt;&lt;h4&gt;Safer Use of Proper Data Types&lt;/h4&gt;&lt;pre&gt;int safe_addition(short op1, int op2) { 

    // total variable is of type int, the largest type that is needed
    int total = 0; 

    // check if total will overflow available integer size 
    if (INT_MAX - abs(op2) &gt; op1) 
    {
        total = op1 + op2; 
    }
    else
    {
        // instead of overflow, saturate (but this is not always a good thing)
        total = INT_MAX
    }
    
    return total;
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_292</key><name>Float_Overflow</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Assigning large data types into smaller data types, without proper checks and explicit casting, will&amp;#160;lead to undefined behavior and unintentional effects, such as data corruption (e.g. value wraparound, wherein maximum values become minimum values); system crashes; infinite loops; logic errors, such as bypassing of security mechanisms; or even buffer overflows leading to arbitrary code execution.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;This flaw can occur when&amp;#160;implicitly casting numerical data types of a larger size, into a variable with a data type of a smaller size. This forces the program to discard some bits of information from the number.&lt;/div&gt;
&lt;div&gt;Depending on how the numerical data types are stored in memory, this is often the bits with the highest value, causing substantial corruption of the stored number. Alternatively,&amp;#160;the sign bit of a signed integer could be lost, completely reversing the intention of the number.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Avoid casting larger data types to smaller types.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer promoting the target variable to a large enough data type.&amp;#160;&lt;/li&gt;
&lt;li&gt;If downcasting is necessary, always check that values are valid and in range of the target type, before casting&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Unsafe Downsize Casting&lt;/h4&gt;&lt;pre&gt;int unsafe_addition(short op1, int op2) { 

    // op2 gets forced from int into a short
    short total = op1 + op2; 
    
    return total;
}
&lt;/pre&gt;&lt;h4&gt;Safer Use of Proper Data Types&lt;/h4&gt;&lt;pre&gt;int safe_addition(short op1, int op2) { 

    // total variable is of type int, the largest type that is needed
    int total = 0; 

    // check if total will overflow available integer size 
    if (INT_MAX - abs(op2) &gt; op1) 
    {
        total = op1 + op2; 
    }
    else
    {
        // instead of overflow, saturate (but this is not always a good thing)
        total = INT_MAX
    }
    
    return total;
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_290</key><name>Boolean_Overflow</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Assigning large data types into smaller data types, without proper checks and explicit casting, will&amp;#160;lead to undefined behavior and unintentional effects, such as data corruption (e.g. value wraparound, wherein maximum values become minimum values); system crashes; infinite loops; logic errors, such as bypassing of security mechanisms; or even buffer overflows leading to arbitrary code execution.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;This flaw can occur when&amp;#160;implicitly casting numerical data types of a larger size, into a variable with a data type of a smaller size. This forces the program to discard some bits of information from the number.&lt;/div&gt;
&lt;div&gt;Depending on how the numerical data types are stored in memory, this is often the bits with the highest value, causing substantial corruption of the stored number. Alternatively,&amp;#160;the sign bit of a signed integer could be lost, completely reversing the intention of the number.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Avoid casting larger data types to smaller types.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer promoting the target variable to a large enough data type.&amp;#160;&lt;/li&gt;
&lt;li&gt;If downcasting is necessary, always check that values are valid and in range of the target type, before casting&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Unsafe Downsize Casting&lt;/h4&gt;&lt;pre&gt;int unsafe_addition(short op1, int op2) { 

    // op2 gets forced from int into a short
    short total = op1 + op2; 
    
    return total;
}
&lt;/pre&gt;&lt;h4&gt;Safer Use of Proper Data Types&lt;/h4&gt;&lt;pre&gt;int safe_addition(short op1, int op2) { 

    // total variable is of type int, the largest type that is needed
    int total = 0; 

    // check if total will overflow available integer size 
    if (INT_MAX - abs(op2) &gt; op1) 
    {
        total = op1 + op2; 
    }
    else
    {
        // instead of overflow, saturate (but this is not always a good thing)
        total = INT_MAX
    }
    
    return total;
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_296</key><name>Short_Overflow</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Assigning large data types into smaller data types, without proper checks and explicit casting, will&amp;#160;lead to undefined behavior and unintentional effects, such as data corruption (e.g. value wraparound, wherein maximum values become minimum values); system crashes; infinite loops; logic errors, such as bypassing of security mechanisms; or even buffer overflows leading to arbitrary code execution.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;This flaw can occur when&amp;#160;implicitly casting numerical data types of a larger size, into a variable with a data type of a smaller size. This forces the program to discard some bits of information from the number.&lt;/div&gt;
&lt;div&gt;Depending on how the numerical data types are stored in memory, this is often the bits with the highest value, causing substantial corruption of the stored number. Alternatively,&amp;#160;the sign bit of a signed integer could be lost, completely reversing the intention of the number.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Avoid casting larger data types to smaller types.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer promoting the target variable to a large enough data type.&amp;#160;&lt;/li&gt;
&lt;li&gt;If downcasting is necessary, always check that values are valid and in range of the target type, before casting&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Unsafe Downsize Casting&lt;/h4&gt;&lt;pre&gt;int unsafe_addition(short op1, int op2) { 

    // op2 gets forced from int into a short
    short total = op1 + op2; 
    
    return total;
}
&lt;/pre&gt;&lt;h4&gt;Safer Use of Proper Data Types&lt;/h4&gt;&lt;pre&gt;int safe_addition(short op1, int op2) { 

    // total variable is of type int, the largest type that is needed
    int total = 0; 

    // check if total will overflow available integer size 
    if (INT_MAX - abs(op2) &gt; op1) 
    {
        total = op1 + op2; 
    }
    else
    {
        // instead of overflow, saturate (but this is not always a good thing)
        total = INT_MAX
    }
    
    return total;
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_300</key><name>Use_of_Obsolete_Functions</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Referencing deprecated modules can cause an application to be exposed to known vulnerabilities, that have been publicly reported and already fixed. A common attack technique is to scan applications for these known vulnerabilities, and then exploit the application through these deprecated versions.&lt;/div&gt;
&lt;div&gt;Note that the actual&amp;#160;risk involved depends on the specifics of any known vulnerabilities in older versions.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application references code elements that have been declared as deprecated. This could include functions, methods, properties, modules, or obsolete&amp;#160;library versions that are out of date. It is likely that the code that references the obsolete element was developed before it was declared as obsolete, and in the meantime the referenced code was updated.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always prefer to use the most updated versions of libraries, packages, and other dependancies.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not use or reference any method, function, property, or other element that has been declared deprecated.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Using Deprecated Methods for Security Checks&lt;/h4&gt;&lt;pre&gt;
private void checkPermissions(InetAddress address) { 

    SecurityManager secManager = System.getSecurityManager();
    
    if (secManager != null) {
        secManager.checkMulticast(address, 0)
    }

}&lt;/pre&gt;&lt;h4&gt;A Replacement Security Check&lt;/h4&gt;&lt;pre&gt;
private void checkPermissions(InetAddress address) { 

    SecurityManager secManager = System.getSecurityManager();
    
    if (secManager != null) {
        SocketPermission permission = new SocketPermission(address.getHostAddress(), "accept,connect");
        
        secManager.checkPermission(permission)
    }

}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2708</key><name>Use_Of_Deprecated_Class</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Referencing deprecated modules can cause an application to be exposed to known vulnerabilities, that have been publicly reported and already fixed. A common attack technique is to scan applications for these known vulnerabilities, and then exploit the application through these deprecated versions.&lt;/div&gt;
&lt;div&gt;Note that the actual&amp;#160;risk involved depends on the specifics of any known vulnerabilities in older versions.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application references code elements that have been declared as deprecated. This could include functions, methods, properties, modules, or obsolete&amp;#160;library versions that are out of date. It is likely that the code that references the obsolete element was developed before it was declared as obsolete, and in the meantime the referenced code was updated.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always prefer to use the most updated versions of libraries, packages, and other dependancies.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not use or reference any method, function, property, or other element that has been declared deprecated.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Using Deprecated Methods for Security Checks&lt;/h4&gt;&lt;pre&gt;
private void checkPermissions(InetAddress address) { 

    SecurityManager secManager = System.getSecurityManager();
    
    if (secManager != null) {
        secManager.checkMulticast(address, 0)
    }

}&lt;/pre&gt;&lt;h4&gt;A Replacement Security Check&lt;/h4&gt;&lt;pre&gt;
private void checkPermissions(InetAddress address) { 

    SecurityManager secManager = System.getSecurityManager();
    
    if (secManager != null) {
        SocketPermission permission = new SocketPermission(address.getHostAddress(), "accept,connect");
        
        secManager.checkPermission(permission)
    }

}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4026</key><name>Cleartext_Transmission_Of_Sensitive_Information</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Sensitive and personal details, such as passwords, social security numbers, credit card data, and other forms of PII (Personally Identifiable Information), must always be protected when being transmitted over the network. Sending this private data over the unencrypted network, without using SSL/TLS or other form of encryption, can reveal the users' secret information, and expose them&amp;#160;to risks of impersonation, identity theft, and financial fraud.&amp;#160;&lt;/div&gt;
&lt;div&gt;If the SSL/TLS channel is terminated on a front-end webserver, reverse proxy, or the like, this issue can be ignored.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application handles sensitive and private information&amp;#160;in several ways. At a certain point, this secret data is sent over the network, however the application does not use SSL/TLS, or any other secure protocol, and does not ensure the data is encrypted before sending it over the unprotected channel.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always protect all PII and other sensitive data, especially when it is being sent over the network.&amp;#160;&lt;/li&gt;
&lt;li&gt;Use SSL/TLS whenever transmitting sensitive data. Alternatively, other encrypted protocols, such as IPsec or SSH, can also be used.&amp;#160;&lt;/li&gt;
&lt;li&gt;Reconsider if the application absolutely requires these personal details. Data that is not received cannot be exposed.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Recommendations:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;In web applications, do not output personal info directly to the response without verifying the channel is secured with SSL.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not write personal info directly to a standard socket either. Instead, always use SSLSocket to ensure your channel makes use of SSL/TLS.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Using Standard Socket (No Encryption)&lt;/h4&gt;&lt;pre&gt;public void runServer() {
    ServerSocket server = new ServerSocket(PORT);
    Socket client;
    
    while (true) {
        client = server.accept(); 
        MyUser user = handleRequest(client.getInputStream());
        
        PrintWriter output = new PrintWriter(server.getOutputStream());
        output.println(user.AccountId);
        output.flush();
    }
}&lt;/pre&gt;&lt;h4&gt;Using Encrypted SSLSocket&lt;/h4&gt;&lt;pre&gt;public void runServer() {
    try { 
        SSLServerSocketFactory factory = 
            (SSLServerSocketFactory) SSLServerSocketFactory.getDefault();
        
        ServerSocket server = factory.createServerSocket(PORT);
        Socket client;
        
        while (true) {
            client = server.accept(); 
            MyUser user = handleRequest(client.getInputStream());
            
            PrintWriter output = new PrintWriter(server.getOutputStream());
            output.println(user.AccountId);
            output.flush();
        }
    }
    catch (IOException ex) {
        handleException(ex);
    }
    finally {
        if (output != null) output.close(); 
        if (client != null) 
            if (!client.isClosed()) client.close(); 
        if (server != null) 
            if (!server.isClosed()) server.close();
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_285</key><name>Command_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could run arbitrary system-level OS commands on the application server host. Depending on the application&amp;rsquo;s OS permissions, these could include:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;File actions (read / create / modify / delete)&lt;/li&gt;
&lt;li&gt;Open a network connection to the attacker&amp;rsquo;s server&lt;/li&gt;
&lt;li&gt;Start and stop system services&lt;/li&gt;
&lt;li&gt;Complete server takeover&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application runs an OS system-level command to complete it's task, rather than via application code. The command includes untrusted data, that may be controllable by an attacker. This untrusted string may contain malicious, system-level commands engineered by an attacker, which would be executed as though the attacker were running commands directly on the application server.&lt;/div&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Refactor the code to avoid any direct shell command execution. Instead, use platform provided APIs or library calls.&lt;/li&gt;
&lt;li&gt;If it is impossible to remove the command execution, execute only static commands that do not include dynamic, user-controlled data.&lt;/li&gt;
&lt;li&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified format, rather than rejecting bad patterns (blacklist). Parameters should be limited to an allowed character set, and non-validated input should be dropped. In addition to characters, check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;In order to minimize damage as a measure of defense in depth, configure the application to run using a restricted user account that has no unnecessary OS privileges.&lt;/li&gt;
&lt;li&gt;If possible, isolate all OS commands to use a separate, dedicated user account that has minimal privileges only for the specific commands and files used by the application, according to the Principle of Least Privilege.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_214</key><name>Buffer_Overflow_cpycat</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1392</key><name>Buffer_Overflow_Indexes</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3645</key><name>Buffer_Size_Literal_Overflow</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_213</key><name>Buffer_Overflow_cin</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_217</key><name>Buffer_Overflow_scanf</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2353</key><name>Buffer_Overflow_StrcpyStrcat</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_275</key><name>Heuristic_Buffer_Overflow_read</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_271</key><name>Heuristic_2nd_Order_Buffer_Overflow_malloc</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_272</key><name>Heuristic_2nd_Order_Buffer_Overflow_read</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_274</key><name>Heuristic_Buffer_Overflow_malloc</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_287</key><name>Process_Control</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Change the command that the program executes or change the environment in which the command executes.&amp;#160;&lt;/li&gt;
&lt;li&gt;Execute code contained in the native libraries, which often contain calls that are susceptible to other security problems, such as buffer overflows or command injection.&lt;/li&gt;
&lt;li&gt;Affect program parameters, which are part of execution environment, and/or affect the execution flow&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Please note that if the application runs with elevated privileges, the content of the attacker's library will now be run with elevated privileges, possibly giving them complete control of the system.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Process control vulnerabilities occur when data enters the application from an untrusted source and is later used as, or as part of, a string representing a command that is executed in the application, using the Load-Library method. By controlling the name or path of the loaded library, an attacker&amp;#160;can load and execute a malicious library instead of the intended one. This may lead to executing malicious commands (and payloads) on behalf of an attacker.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Libraries that are loaded should come from a trusted source.&amp;#160;If the library does not come from a trusted source, review its&amp;#160;source code.&lt;/li&gt;
&lt;li&gt;All native libraries should be validated to determine if the application requires the use of the library.&lt;/li&gt;
&lt;li&gt;Run the application with the least-privilege principle in order to reduce the impact in case of a successful attack.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;strong&gt;Secure-Code Approach&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Sanitize all inputs which influence the library calls in order to avoid malicious content.&lt;/li&gt;
&lt;li&gt;Use absolute path when calling the&amp;#160;library in order to avoid calls to unwanted libraries.&lt;/li&gt;
&lt;li&gt;Validate all inputs&amp;#160;to native calls in order to avoid buffer overflows.&lt;/li&gt;
&lt;li&gt;Use System.load, instead of System.loadLibrary, which is more secured.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;Using the application configuration property to load a native library, allowing an attacker to load a library or an executable and potentially execute arbitrary code:&lt;/h4&gt;&lt;pre&gt;string lib = ConfigurationManager.AppSettings["APPHOME"];
Environment.ExitCode = AppDomain.CurrentDomain.ExecuteAssembly(lib);&lt;/pre&gt;&lt;h4&gt;Validating the configuration property before loading a native library:&lt;/h4&gt;&lt;pre&gt;string lib = ConfigurationManager.AppSettings["APPHOME"];
if ( isValidHomePath(lib) )
{
    Environment.ExitCode = AppDomain.CurrentDomain.ExecuteAssembly(lib);
} 
else
{ 
    Console.WriteLine("Action denied.");
}&lt;/pre&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Using an invalidated registry entry to determine the directory in which it is installed and loads a library file, allowing an attacker to load an arbitrary library:&lt;/h4&gt;&lt;pre&gt;RegQueryValueEx(hkey, "APPHOME", 0, 0, (BYTE*)home, &amp;size);
char* lib=(char*)malloc(strlen(home)+strlen(INITLIB));
if (lib) {
    strcpy(lib,home);
    strcat(lib,INITCMD);
    LoadLibrary(lib);
}&lt;/pre&gt;&lt;h4&gt;Loading the library from its absolute path:&lt;/h4&gt;&lt;pre&gt;std::string apphome = 
"HKEY_LOCAL_MACHINE\\SOFTWARE\MICROSOFT\\WINDOWS NT\\CurrentVersion\\ProfileList\\Default\\";
RegQueryValueEx(hkey, apphone, 0, 0, (BYTE*)home, &amp;size);
char* lib=(char*)malloc(strlen(home)+strlen(INITLIB));
if (lib) {
    strcpy(lib,home);
    strcat(lib,INITCMD);
    LoadLibrary(lib);
}&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Loading a library from the default Java library path, without validating it:&lt;/h4&gt;&lt;pre&gt;System.loadLibrary("crypto.so");&lt;/pre&gt;&lt;h4&gt;Using an invalidated system property to determine the directory in which it is installed and loads a library file, allowing an attacker to load an arbitrary library:&lt;/h4&gt;&lt;pre&gt;String property = System.getProperty("java.library.path");
System.loadLibrary(property);&lt;/pre&gt;&lt;h4&gt;Loading the library from its absolute path using System.load:&lt;/h4&gt;&lt;pre&gt;String path = "/path/to/lib/";
String lib = "crypto.so";
System.load(path + lib);&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_280</key><name>Heuristic_Parameter_Tampering</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;A malicious user could access other users&amp;#8217; information. By requesting information directly, such as by an account number, authorization may be bypassed and the attacker could steal confidential or restricted information (for example, a bank account balance), using a direct object reference.&amp;#160;&lt;/div&gt;
&lt;/div&gt;            
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;The application provides user information without filtering by user ID. For example, it may provide information solely by a submitted account ID. The application concatenates the user input directly into the SQL query string, without any additional filtering. The application also does not perform any validation on the input, nor constrain it to a pre-computed list of acceptable values.&amp;#160;&lt;/div&gt;
&lt;/div&gt;            
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&amp;#160;&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Enforce authorization checks before providing any access to sensitive data, including the specific object reference.&amp;#160;&lt;/li&gt;
&lt;li&gt;Explicitly block access to any unauthorized data, especially to other users&amp;#8217; data.&lt;/li&gt;
&lt;li&gt;If possible, avoid allowing the user to request arbitrary data by simply sending a record ID. For example, instead of having the user send an account ID, the application should look up the account ID for the current authenticated user session.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Mitigation:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Do not concatenate user input directly into SQL queries.&amp;#160;&lt;/li&gt;
&lt;li&gt;Include a user-specific identifier as a filter in the WHERE clause of the SQL query.&amp;#160;&lt;/li&gt;
&lt;li&gt;Map the user input to an indirect reference, e.g. via a prepared list of allowable values.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;            
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Unfiltered Direct Object Reference&lt;/h4&gt;&lt;pre&gt;public ResultSet getAccountInfo(request req)  {
    int accountId = Integer.parseInt(req.getParameter("accountId"));
    
    string sql = "select * from [Accounts] where [AccountId] = " 
                        + accountId.toString();
                        
    Statement stmt = conn.createStatement();
    ResultSet accountRS = stmt.executeQuery(sql); 
    
    return accountRS;
}&lt;/pre&gt;&lt;h4&gt;Record References are Now Filtered and Indirect&lt;/h4&gt;&lt;pre&gt;public ResultSet getAccountInfo(request req)  {
    int accountIndex = Integer.parseInt(req.getParameter("accountIndex"));
    int realAccountId = userAccountList.get(accountIndex);
    
    int userId = req.getSession().getAttribute("userId"); 
    
    string sql = "select * from [Accounts] where [AccountId] = " 
                        + realAccountId.toString() 
                        + " and [UserId] = " + userId.toString();
                        
    Statement stmt = conn.createStatement();
    ResultSet accountRS = stmt.executeQuery(sql); 
    
    return accountRS;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_277</key><name>Heuristic_DB_Parameter_Tampering</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;A malicious user could access other users&amp;#8217; personal information, by simply altering the reference parameter sent to the server. Thus, the malicious user could bypass access controls and access unauthorized records, such as other users accounts,&amp;#160;stealing confidential or restricted information.&amp;#160;&lt;/div&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;The application accesses&amp;#160;user information without filtering by user ID. For example, it may provide information solely by a submitted account ID. The application uses the user input to filter specific records from database tables, which contain sensitive personal information (e.g. user accounts or payment details). Since the application does not filter the records according to any user identifier, nor&amp;#160;constrain it to a pre-computed list of acceptable values, a malicious user can easily modify the submitted reference identifier, and thus access unauthorized records.&amp;#160;&lt;/div&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&amp;#160;&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Enforce authorization checks before providing any access to sensitive data, including the specific object reference.&amp;#160;&lt;/li&gt;
&lt;li&gt;Explicitly block access to any unauthorized data, especially to other users&amp;#8217; data.&lt;/li&gt;
&lt;li&gt;If possible, avoid allowing the user to request arbitrary data by simply sending a record ID. For example, instead of having the user send an account ID, the application should look up the account ID for the current authenticated user session.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Mitigation:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Filter the database query according to&amp;#160;a user-specific identifier, such as the customer number.&amp;#160;&lt;/li&gt;
&lt;li&gt;Map the user input to an indirect reference, e.g. via a prepared list of allowable values.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Unfiltered Direct Object Reference&lt;/h4&gt;&lt;pre&gt;public ResultSet getAccountInfo(request req){
    int accountId = Integer.parseInt(req.getParameter("accountId"));    
    PreparedStatement stmt = connection.PreparedStatement("SELECT * from Accounts where AccountId = ?");
    
    stmt.setInt(1, accountId);   
    ResultSet accountRS = stmt.executeQuery();                 
    
    return accountRS;
}&lt;/pre&gt;&lt;h4&gt;Record References are Now Filtered and Indirect&lt;/h4&gt;&lt;pre&gt;    public ResultSet getAccountInfo(request req){
    int accountIndex = Integer.parseInt(req.getParameter("accountId"));
    int realAccountId = userAccountList.get(accountIndex);
    int userId = req.getSession().getAttribute("userId"); 
    PreparedStatement stmt = connection.PreparedStatement("SELECT * from Accounts where AccountId = ? AND UserId = ?");
    
    stmt.setInt(1, realAccountId);   
    stmt.setInt(2, userId);
    ResultSet accountRS = stmt.executeQuery();                 
    
    return accountRS;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_317</key><name>DB_Parameter_Tampering</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;A malicious user could access other users&amp;#8217; personal information, by simply altering the reference parameter sent to the server. Thus, the malicious user could bypass access controls and access unauthorized records, such as other users accounts,&amp;#160;stealing confidential or restricted information.&amp;#160;&lt;/div&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;The application accesses&amp;#160;user information without filtering by user ID. For example, it may provide information solely by a submitted account ID. The application uses the user input to filter specific records from database tables, which contain sensitive personal information (e.g. user accounts or payment details). Since the application does not filter the records according to any user identifier, nor&amp;#160;constrain it to a pre-computed list of acceptable values, a malicious user can easily modify the submitted reference identifier, and thus access unauthorized records.&amp;#160;&lt;/div&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&amp;#160;&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Enforce authorization checks before providing any access to sensitive data, including the specific object reference.&amp;#160;&lt;/li&gt;
&lt;li&gt;Explicitly block access to any unauthorized data, especially to other users&amp;#8217; data.&lt;/li&gt;
&lt;li&gt;If possible, avoid allowing the user to request arbitrary data by simply sending a record ID. For example, instead of having the user send an account ID, the application should look up the account ID for the current authenticated user session.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Mitigation:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Filter the database query according to&amp;#160;a user-specific identifier, such as the customer number.&amp;#160;&lt;/li&gt;
&lt;li&gt;Map the user input to an indirect reference, e.g. via a prepared list of allowable values.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Unfiltered Direct Object Reference&lt;/h4&gt;&lt;pre&gt;public ResultSet getAccountInfo(request req){
    int accountId = Integer.parseInt(req.getParameter("accountId"));    
    PreparedStatement stmt = connection.PreparedStatement("SELECT * from Accounts where AccountId = ?");
    
    stmt.setInt(1, accountId);   
    ResultSet accountRS = stmt.executeQuery();                 
    
    return accountRS;
}&lt;/pre&gt;&lt;h4&gt;Record References are Now Filtered and Indirect&lt;/h4&gt;&lt;pre&gt;    public ResultSet getAccountInfo(request req){
    int accountIndex = Integer.parseInt(req.getParameter("accountId"));
    int realAccountId = userAccountList.get(accountIndex);
    int userId = req.getSession().getAttribute("userId"); 
    PreparedStatement stmt = connection.PreparedStatement("SELECT * from Accounts where AccountId = ? AND UserId = ?");
    
    stmt.setInt(1, realAccountId);   
    stmt.setInt(2, userId);
    ResultSet accountRS = stmt.executeQuery();                 
    
    return accountRS;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_327</key><name>Parameter_Tampering</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;A malicious user could access other users&amp;#8217; information. By requesting information directly, such as by an account number, authorization may be bypassed and the attacker could steal confidential or restricted information (for example, a bank account balance), using a direct object reference.&amp;#160;&lt;/div&gt;
&lt;/div&gt;            
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;The application provides user information without filtering by user ID. For example, it may provide information solely by a submitted account ID. The application concatenates the user input directly into the SQL query string, without any additional filtering. The application also does not perform any validation on the input, nor constrain it to a pre-computed list of acceptable values.&amp;#160;&lt;/div&gt;
&lt;/div&gt;            
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&amp;#160;&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Enforce authorization checks before providing any access to sensitive data, including the specific object reference.&amp;#160;&lt;/li&gt;
&lt;li&gt;Explicitly block access to any unauthorized data, especially to other users&amp;#8217; data.&lt;/li&gt;
&lt;li&gt;If possible, avoid allowing the user to request arbitrary data by simply sending a record ID. For example, instead of having the user send an account ID, the application should look up the account ID for the current authenticated user session.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Mitigation:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Do not concatenate user input directly into SQL queries.&amp;#160;&lt;/li&gt;
&lt;li&gt;Include a user-specific identifier as a filter in the WHERE clause of the SQL query.&amp;#160;&lt;/li&gt;
&lt;li&gt;Map the user input to an indirect reference, e.g. via a prepared list of allowable values.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;            
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Unfiltered Direct Object Reference&lt;/h4&gt;&lt;pre&gt;public ResultSet getAccountInfo(request req)  {
    int accountId = Integer.parseInt(req.getParameter("accountId"));
    
    string sql = "select * from [Accounts] where [AccountId] = " 
                        + accountId.toString();
                        
    Statement stmt = conn.createStatement();
    ResultSet accountRS = stmt.executeQuery(sql); 
    
    return accountRS;
}&lt;/pre&gt;&lt;h4&gt;Record References are Now Filtered and Indirect&lt;/h4&gt;&lt;pre&gt;public ResultSet getAccountInfo(request req)  {
    int accountIndex = Integer.parseInt(req.getParameter("accountIndex"));
    int realAccountId = userAccountList.get(accountIndex);
    
    int userId = req.getSession().getAttribute("userId"); 
    
    string sql = "select * from [Accounts] where [AccountId] = " 
                        + realAccountId.toString() 
                        + " and [UserId] = " + userId.toString();
                        
    Statement stmt = conn.createStatement();
    ResultSet accountRS = stmt.executeQuery(sql); 
    
    return accountRS;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1861</key><name>R16_05_Function_Prototype_Declaration_Without_Parameters</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 16-5&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11049&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Functions that receive no paramaters shall be declared with paramater type
            &amp;#39;void&amp;#39;.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1412</key><name>Buffer_Overflow_AddressOfLocalVarReturned</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_303</key><name>Hardcoded_Absolute_Path</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Generally, hardcoding absolute paths makes the application brittle, and will prevent the program from operating properly in some environments that do not have the identical file system structure. This will also cause software maintenance problems in future versions of the application, if the design or requirements were to change.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Additionally, if the application uses this path to read or write data, this can cause a breach of confidentiality or&amp;nbsp;allow malicious input into the program. In some situations, this vulnerability might even allow a malicious user to override the expected functionality, and cause the application to run any arbitrary program and execute any code the attacker deploys to the server.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Hardcoded paths are less flexible, and do not allow the application to account for changes in the environment. For example, the program might be installed in a different directory than the default. Likewise, different system languages and OS architectures can change the names of the system folders; for example, in a Spanish Windows machine there could&amp;nbsp;be&amp;nbsp;"&lt;code&gt;C:\Archivos de programa (x86)\&lt;/code&gt;" instead of "&lt;code&gt;C:\Program Files\&lt;/code&gt;".&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Moreover, on Windows by default all directories and files created outside of the system folders and outside the user's profile, will be allow full read and write access to any authenticated user. An unauthorized, malicious user could access any sensitive data in these folders, despite the application assuming they are protected. Even worse, an attacker&amp;nbsp;could overwrite existing programs in these unprotected folders and plant malicious code, which&amp;nbsp;will be activated by the application.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Do not hardcode absolute paths into the application.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Instead, store the absolute paths in an external configuration file, that can be modified as required for each environment.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Alternatively, use paths relative to the current application, if the target file is in a subdirectory of the application's root.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Do not assume a specific file system structure, outside of the application's subdirectories. On Windows, use the built-in expandable variables, such as &lt;code&gt;%WINDIR%&lt;/code&gt;, &lt;code&gt;%PROGRAMFILES%,&lt;/code&gt; and &lt;code&gt;%TEMP%&lt;/code&gt;.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;On Linux and other OS where available, implement a system jail (chroot) for the application, and store&amp;nbsp;all programs and data files there only.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Prefer storing all executables under the protected program directory (under "&lt;code&gt;C:\Program Files\&lt;/code&gt;" by default on Windows).&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Do not store sensitive data or configuration files in arbitrary folders. Likewise, do not store data files in the program directory. Instead, use the designated folders as intended, i.e. &lt;code&gt;%PROGRAMDATA%&lt;/code&gt; and &lt;code&gt;%APPDATA%&lt;/code&gt;&amp;nbsp;on Windows, respectively.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Configure hardened permissions to the most restricted as possible, according to the Principle of Least Privilege. Consider implementing this automatically in the installation and setup routines.&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Hardcoded Path to Data File&lt;/h4&gt;&lt;pre&gt;public File getLogFile() { 
	String filename = "C:\Logs\myapp.log";
	File logFile = new File(filename); 

  	return logFile; 
}&lt;/pre&gt;&lt;h4&gt;Configured Path for Data File&lt;/h4&gt;&lt;pre&gt;public File getLogFile() { 
	Properties props = this.Properties; 
  	String filename = (String)props.get("logDirectory") + (String)props.get("logFilename");
  
	File logFile = new File(filename); 

  	return logFile; 
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1565</key><name>MemoryFree_on_StackVariable</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;&lt;span id="docs-internal-guid-d6a3859c-8d99-7cac-92f9-abb47e6147c0"&gt;&lt;span style="font-family: Arial; vertical-align: baseline; white-space: pre-wrap;"&gt;Undefined Behavior may result with a crash. Crashes may give an attacker valuable information about the system and the program internals. Furthermore, it may leave unprotected files (e.g memory) that may be exploited.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;&lt;span id="docs-internal-guid-d6a3859c-8d5b-3fcb-15df-890d19563402"&gt;&lt;span style="font-family: Arial; vertical-align: baseline; white-space: pre-wrap;"&gt;Calling free() on a variable that was not dynamically allocated (e.g. malloc) will result with an Undefined Behavior.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;p&gt;&lt;span id="docs-internal-guid-d6a3859c-8d5b-c04d-8f05-31cced3fafb5"&gt;&lt;span style="font-family: Arial; vertical-align: baseline; white-space: pre-wrap;"&gt;Use free() only on dynamically allocated variables in order to prevent unexpected behavior from the compiler.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Bad - Calling free() on a static variable&lt;/h4&gt;&lt;pre&gt;void clean_up(){
  char temp[256];
  do_something();
  free(tmp);
  return;
}&lt;/pre&gt;&lt;h4&gt;Good - Calling free() only on variables that were dynamically allocated&lt;/h4&gt;&lt;pre&gt;void clean_up(){
  char *buff;
  buff = (char*) malloc(1024);
  free(buff);
  return;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_283</key><name>CGI_Reflected_XSS</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;&lt;span id="docs-internal-guid-c71b5d0e-9d84-dd53-9c94-64e8de600bd5"&gt;&lt;span style="font-family: Arial; vertical-align: baseline; white-space: pre-wrap;"&gt;Special crafted HTTP requests might retrieve system information and exploit the system through CGI (Common Gateway Interface).&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p dir="ltr" style="line-height: 1.7142866666666667; margin-top: 0pt; margin-bottom: 0pt;"&gt;&lt;span style="font-family: Arial; color: #000000; background-color: #ffffff; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The CGI specification provides opportunities to read files, acquire shell access, and corrupt file systems on server machines and their attached hosts. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p dir="ltr" style="line-height: 1.7142866666666667; margin-top: 0pt; margin-bottom: 0pt;"&gt;&lt;span style="font-family: Arial; color: #000000; background-color: #ffffff; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Means of gaining access include: exploiting assumptions of the script, exploiting weaknesses in the server environment, and exploiting weaknesses in other programs and system calls. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p dir="ltr" style="line-height: 1.7142866666666667; margin-top: 0pt; margin-bottom: 0pt;"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p dir="ltr" style="line-height: 1.7142866666666667; margin-top: 0pt; margin-bottom: 0pt;"&gt;&lt;span style="font-family: Arial; color: #000000; background-color: #ffffff; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;The primary weakness in CGI scripts is insufficient input validation.&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;p dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"&gt;&lt;span style="font-family: Arial; color: #000000; background-color: #ffffff; font-weight: 400; font-style: normal; font-variant: normal; text-decoration: none; vertical-align: baseline; white-space: pre-wrap;"&gt;Refrain from binding user input to system variables if not necessary.&lt;/span&gt;&lt;/p&gt;
&lt;p dir="ltr" style="line-height: 1.38; margin-top: 0pt; margin-bottom: 0pt;"&gt;&lt;span id="docs-internal-guid-c71b5d0e-9d95-efa3-1ca7-894d4af475fb"&gt;&lt;span style="font-family: Arial; vertical-align: baseline; white-space: pre-wrap;"&gt;Validate and encode all user input.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Perl&lt;/h3&gt;&lt;h4&gt;Bad - The script blindly prints out the submitted comment&lt;/h4&gt;&lt;pre&gt;#!/usr/bin/perl
use CGI;

my $cgi = CGI-&gt;new();
my $text = $cgi-&gt;param('comment');

print $cgi-&gt;header();
print "You entered $text";&lt;/pre&gt;&lt;h4&gt;Good - The comment is being encoded before printed out&lt;/h4&gt;&lt;pre&gt;#!/usr/bin/perl
use CGI;
use HTML::Entities;

my $cgi = CGI-&gt;new();
my $text = $cgi-&gt;param('comment');

print $cgi-&gt;header();
print "You entered ", HTML::Entities::encode($text);&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_276</key><name>Heuristic_CGI_Stored_XSS</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;&lt;span style="color: rgba(0, 0, 0, 0.870588); font-family: Arial; line-height: 25.7143px; white-space: pre-wrap;"&gt;Stored malicious data might retrieve system information and exploit the system through CGI (Common Gateway Interface).&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p dir="ltr" style="box-sizing: border-box; margin: 0pt 0px; color: rgba(0, 0, 0, 0.870588); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.71429;"&gt;&lt;span style="box-sizing: border-box; font-family: Arial; color: #000000; vertical-align: baseline; white-space: pre-wrap;"&gt;The CGI specification provides opportunities to read files, acquire shell access, and corrupt file systems on server machines and their attached hosts. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p dir="ltr" style="box-sizing: border-box; margin: 0pt 0px; color: rgba(0, 0, 0, 0.870588); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.71429;"&gt;&lt;span style="box-sizing: border-box; font-family: Arial; color: #000000; vertical-align: baseline; white-space: pre-wrap;"&gt;Means of gaining access include: exploiting assumptions of the script, exploiting weaknesses in the server environment, and exploiting weaknesses in other programs and system calls. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p dir="ltr" style="box-sizing: border-box; margin: 0pt 0px; color: rgba(0, 0, 0, 0.870588); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.71429;"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p dir="ltr" style="box-sizing: border-box; margin: 0pt 0px; color: rgba(0, 0, 0, 0.870588); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.71429;"&gt;&lt;span style="box-sizing: border-box; font-family: Arial; color: #000000; vertical-align: baseline; white-space: pre-wrap;"&gt;The primary weakness in CGI scripts is insufficient input validation.&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;p dir="ltr" style="box-sizing: border-box; margin: 0pt 0px; color: rgba(0, 0, 0, 0.870588); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.38;"&gt;&lt;span style="box-sizing: border-box; font-family: Arial; color: #000000; vertical-align: baseline; white-space: pre-wrap;"&gt;Do not provide unnecessary file permissions.&lt;/span&gt;&lt;/p&gt;
&lt;p dir="ltr" style="box-sizing: border-box; margin: 0pt 0px; color: rgba(0, 0, 0, 0.870588); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.38;"&gt;&lt;span id="docs-internal-guid-c71b5d0e-9d95-efa3-1ca7-894d4af475fb" style="box-sizing: border-box;"&gt;&lt;span style="box-sizing: border-box; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;"&gt;Validate and encode all DB output.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Perl&lt;/h3&gt;&lt;h4&gt;Bad - Printing out data from BD without encoding&lt;/h4&gt;&lt;pre&gt;#!/usr/bin/perl
use CGI;
use DBI;

my $cgi = CGI-&gt;new();

$dbh = DBI-&gt;connect('dbi:mysql:perltest','root','password')
  or die "Connection Error: $DBI::errstr\n";
$sql = "select * from samples";
$sth = $dbh-&gt;prepare($sql);
$sth-&gt;execute
  or die "SQL Error: $DBI::errstr\n";

my @row = $sth-&gt;fetchrow_array;

print $cgi-&gt;header();
	$cgi-&gt;start_html(),
	$cgi-&gt;p("The result from DB is: ", @row),
	$cgi-&gt;end_html;&lt;/pre&gt;&lt;h4&gt;Good - Printing out from DB after encoding&lt;/h4&gt;&lt;pre&gt;#!/usr/bin/perl
use CGI;
use DBI;
use HTML::Entities;

my $cgi = CGI-&gt;new();

$dbh = DBI-&gt;connect('dbi:mysql:perltest','root','password')
  or die "Connection Error: $DBI::errstr\n";
$sql = "select * from samples";
$sth = $dbh-&gt;prepare($sql);
$sth-&gt;execute
  or die "SQL Error: $DBI::errstr\n";

my @row = $sth-&gt;fetchrow_array;

print $cgi-&gt;header();
	$cgi-&gt;start_html(),
	$cgi-&gt;p("The result from DB is: ", HTML::Entities::encode(@row)),
	$cgi-&gt;end_html;&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_284</key><name>CGI_Stored_XSS</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;&lt;span style="color: rgba(0, 0, 0, 0.870588); font-family: Arial; line-height: 25.7143px; white-space: pre-wrap;"&gt;Stored malicious data might retrieve system information and exploit the system through CGI (Common Gateway Interface).&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p dir="ltr" style="box-sizing: border-box; margin: 0pt 0px; color: rgba(0, 0, 0, 0.870588); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.71429;"&gt;&lt;span style="box-sizing: border-box; font-family: Arial; color: #000000; vertical-align: baseline; white-space: pre-wrap;"&gt;The CGI specification provides opportunities to read files, acquire shell access, and corrupt file systems on server machines and their attached hosts. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p dir="ltr" style="box-sizing: border-box; margin: 0pt 0px; color: rgba(0, 0, 0, 0.870588); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.71429;"&gt;&lt;span style="box-sizing: border-box; font-family: Arial; color: #000000; vertical-align: baseline; white-space: pre-wrap;"&gt;Means of gaining access include: exploiting assumptions of the script, exploiting weaknesses in the server environment, and exploiting weaknesses in other programs and system calls. &amp;nbsp;&lt;/span&gt;&lt;/p&gt;
&lt;p dir="ltr" style="box-sizing: border-box; margin: 0pt 0px; color: rgba(0, 0, 0, 0.870588); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.71429;"&gt;&amp;nbsp;&lt;/p&gt;
&lt;p dir="ltr" style="box-sizing: border-box; margin: 0pt 0px; color: rgba(0, 0, 0, 0.870588); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.71429;"&gt;&lt;span style="box-sizing: border-box; font-family: Arial; color: #000000; vertical-align: baseline; white-space: pre-wrap;"&gt;The primary weakness in CGI scripts is insufficient input validation.&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;p dir="ltr" style="box-sizing: border-box; margin: 0pt 0px; color: rgba(0, 0, 0, 0.870588); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.38;"&gt;&lt;span style="box-sizing: border-box; font-family: Arial; color: #000000; vertical-align: baseline; white-space: pre-wrap;"&gt;Do not provide unnecessary file permissions.&lt;/span&gt;&lt;/p&gt;
&lt;p dir="ltr" style="box-sizing: border-box; margin: 0pt 0px; color: rgba(0, 0, 0, 0.870588); font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; line-height: 1.38;"&gt;&lt;span id="docs-internal-guid-c71b5d0e-9d95-efa3-1ca7-894d4af475fb" style="box-sizing: border-box;"&gt;&lt;span style="box-sizing: border-box; font-family: Arial; vertical-align: baseline; white-space: pre-wrap;"&gt;Validate and encode all DB output.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Perl&lt;/h3&gt;&lt;h4&gt;Bad - Printing out data from BD without encoding&lt;/h4&gt;&lt;pre&gt;#!/usr/bin/perl
use CGI;
use DBI;

my $cgi = CGI-&gt;new();

$dbh = DBI-&gt;connect('dbi:mysql:perltest','root','password')
  or die "Connection Error: $DBI::errstr\n";
$sql = "select * from samples";
$sth = $dbh-&gt;prepare($sql);
$sth-&gt;execute
  or die "SQL Error: $DBI::errstr\n";

my @row = $sth-&gt;fetchrow_array;

print $cgi-&gt;header();
	$cgi-&gt;start_html(),
	$cgi-&gt;p("The result from DB is: ", @row),
	$cgi-&gt;end_html;&lt;/pre&gt;&lt;h4&gt;Good - Printing out from DB after encoding&lt;/h4&gt;&lt;pre&gt;#!/usr/bin/perl
use CGI;
use DBI;
use HTML::Entities;

my $cgi = CGI-&gt;new();

$dbh = DBI-&gt;connect('dbi:mysql:perltest','root','password')
  or die "Connection Error: $DBI::errstr\n";
$sql = "select * from samples";
$sth = $dbh-&gt;prepare($sql);
$sth-&gt;execute
  or die "SQL Error: $DBI::errstr\n";

my @row = $sth-&gt;fetchrow_array;

print $cgi-&gt;header();
	$cgi-&gt;start_html(),
	$cgi-&gt;p("The result from DB is: ", HTML::Entities::encode(@row)),
	$cgi-&gt;end_html;&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4022</key><name>LDAP_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could arbitrarily engineer the application&amp;#8217;s LDAP queries. Depending on how the application is using LDAP, the attacker could potentially do any of the following:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Log in as another user&lt;/li&gt;
&lt;li&gt;Escalate privileges&lt;/li&gt;
&lt;li&gt;Steal information&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application communicates with an LDAP server, such as Active Directory, by sending a textual LDAP query or command. The application creates the query by simply concatenating strings including the user's input. Since the user input is neither checked for data type validity nor subsequently sanitized, the input could contain LDAP commands that would be interpreted as such by the LDAP server.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
The application uses the "user" field string from an HttpRequest to communicate with an LDAP server
      &lt;/h4&gt;&lt;pre&gt;

public class LDAPInjection
{
        public void foo(HttpRequest Request, DirectorySearcher searcher)
        {
                string userName = Request.QueryString["user"];
                searcher.Filter = "(&amp;(samAccountName=" + userName + "))";
        }
}



      &lt;/pre&gt;&lt;h4&gt;
Potentially hazardous characters in the "user" string are removed
      &lt;/h4&gt;&lt;pre&gt;

public class LDAPInjectionFixed
{
        public void foo(HttpRequest Request, DirectorySearcher searcher)
        {
                string userName = Request.QueryString["user"];
                userName = Regex.Replace(userName, "^\\d{3}-\\d{3}-\\d{4}$", "");
                searcher.Filter = "(&amp;(samAccountName=" + userName + "))";
        }
}





      &lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_302</key><name>Improper_Resource_Shutdown_or_Release</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Unreleased resources can cause a drain of those available for system use, eventually causing general reliability and availability problems, such as performance degradation, process bloat, and system instability. If a resource leak&amp;nbsp;can be intentionally exploited by an attacker, it may be possible to cause a widespread DoS (Denial of Service) attack. This might even expose sensitive information between unprivileged users, if the resource continues to retain&amp;nbsp;data or user id&amp;nbsp;between subsequent allocations.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;The application code allocates resource objects, but does not ensure these are always closed and released in a timely manner. This can include database connections, file handles, network sockets, or any other resource that needs to be released.&amp;nbsp;In some cases,&amp;nbsp;these might be released - but only if everything works as planned; if there is any runtime exception during the normal course of system operations, resources start to leak.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Note that even in managed-memory languages such as Java, these resources must be explicitly released. Many types of resource are not released even when the Garbage Collector runs; and even if the the object would eventually release the resource, we have no control over when the Garbage Collector does&amp;nbsp;run.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Always close and release all resources.&lt;/li&gt;
&lt;li&gt;Ensure resources are released (along with&amp;nbsp;any other necessary cleanup) in a &lt;code&gt;finally { }&lt;/code&gt; block. Do not close resources in a &lt;code&gt;catch { }&lt;/code&gt; block, since this is not ensured to be called.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Explicitly call .close() on any instance of a class that implements the &lt;code&gt;Closable&lt;/code&gt; or &lt;code&gt;AutoClosable&lt;/code&gt; interfaces.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Alternatively, an even better solution is to use the try-with-resources idiom, in order to automatically close any defined&amp;nbsp;&lt;code&gt;AutoClosable&lt;/code&gt;&amp;nbsp;instances.&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Unreleased Database Connection&lt;/h4&gt;&lt;pre&gt;private MyObject getDataFromDb(int id)  {
	MyObject data = null;
  
  	try {
		Connection con = DriverManager.getConnection(CONN_STRING);
      	
      	data = queryDb(con, id); 
	}
	catch ( SQLException e ) {
		handleError(e);
	}
}  &lt;/pre&gt;&lt;h4&gt;Explicit Release of Database Connection&lt;/h4&gt;&lt;pre&gt;private MyObject getDataFromDb(int id)  {
	MyObject data = null;
  
  	try {
		Connection con = DriverManager.getConnection(CONN_STRING);
      	
      	data = queryDb(con, id); 
	}
	catch ( SQLException e ) {
		handleError(e);
	}
  	finally {
      	if ((con != null) &amp;&amp; (! con.isClosed())) {
          	con.close();
        }
    }
}  &lt;/pre&gt;&lt;h4&gt;Automatic Implicit Release Using Try-With-Resources&lt;/h4&gt;&lt;pre&gt;private MyObject getDataFromDb(int id)  {
	MyObject data = null;
  
  	try (Connection con = DriverManager.getConnection(CONN_STRING)) {
      	data = queryDb(con, id); 
	}
	catch ( SQLException e ) {
		handleError(e);
	}
}  &lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1215</key><name>Use_of_Sizeof_On_a_Pointer_Type</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Use of sizeof() on a Pointer Type&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;467&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Variant)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_467_Description" id="oc_467_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The code calls sizeof() on a malloced pointer type, which
always returns the wordsize/8. This can produce an unexpected result if the
programmer intended to determine how much memory has been
allocated.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_467_Time of Introduction" id="oc_467_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_467_Applicable Platforms" id="oc_467_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_467_Common Consequences" id="oc_467_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;This error can often cause one to allocate a buffer that is much
smaller than what is needed, leading to resultant weaknesses such as
buffer overflows.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_467_Likelihood of Exploit" id="oc_467_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_467_Demonstrative Examples" id="oc_467_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;Care should be taken to ensure sizeof returns the size of the data
structure itself, and not the size of the pointer to the data
structure.&lt;/p&gt;&lt;p&gt;In this example, sizeof(foo) returns the size of the pointer.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example Languages: &lt;/span&gt;C and C++&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;double *foo;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;foo = (double *)malloc(sizeof(foo));&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;In this example, sizeof(*foo) returns the size of the data structure
and not the size of the pointer.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example Languages: &lt;/span&gt;C and C++&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;double *foo;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;foo = (double *)malloc(sizeof(*foo));&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;This example defines a fixed username and password. The
AuthenticateUser() function is intended to accept a username and a password
from an untrusted user, and check to ensure that it matches the username and
password. If the username and password match, AuthenticateUser() is intended
to indicate that authentication succeeded.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;/* Ignore CWE-259 (hard-coded password) and CWE-309 (use of
password system for authentication) for this example. */&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char *username = "admin";&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char *pass = "password";&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int AuthenticateUser(char *inUser, char *inPass) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;printf("Sizeof username = %d\n", sizeof(username));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("Sizeof pass = %d\n", sizeof(pass));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (strncmp(username, inUser, sizeof(username))) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;printf("Auth failure of username using sizeof\n");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return(AUTH_FAIL);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/* Because of CWE-467, the sizeof returns 4 on many platforms
and architectures. */&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (! strncmp(pass, inPass, sizeof(pass))) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;printf("Auth success of password using sizeof\n");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return(AUTH_SUCCESS);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;else {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;printf("Auth fail of password using sizeof\n");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return(AUTH_FAIL);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int main (int argc, char **argv)&lt;/div&gt;&lt;div style="font-size:90%;"&gt;{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;int authResult;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt; if (argc &amp;lt; 3) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ExitError("Usage: Provide a username and
password");&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;authResult = AuthenticateUser(argv[1], argv[2]);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (authResult != AUTH_SUCCESS) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ExitError("Authentication failed");&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;else {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;DoAuthenticatedTask(argv[1]);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;In AuthenticateUser(), because sizeof() is applied to a parameter with
an array type, the sizeof() call might return 4 on many modern
architectures. As a result, the strncmp() call only checks the first
four characters of the input password, resulting in a partial comparison
(CWE-187), leading to improper authentication (CWE-287).&lt;/p&gt;&lt;p&gt;Because of the partial comparison, any of these passwords would still
cause authentication to succeed for the "admin" user:&lt;/p&gt;&lt;div class="indent Attack"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Attack)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;pass5&lt;/div&gt;&lt;div style="font-size:90%;"&gt;passABCDEFGH&lt;/div&gt;&lt;div style="font-size:90%;"&gt;passWORD&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Because only 4 characters are checked, this significantly reduces the
search space for an attacker, making brute force attacks more
feasible.&lt;/p&gt;&lt;p&gt;The same problem also applies to the username, so values such as
"adminXYZ" and "administrator" will succeed for the username.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_467_Potential Mitigations" id="oc_467_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Use expressions such as "sizeof(*pointer)" instead of
"sizeof(pointer)", unless you intend to run sizeof() on a pointer type
to gain some platform independence or if you are allocating a variable
on the stack.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_467_Other Notes" id="oc_467_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;The use of sizeof() on a pointer can sometimes generate useful
information. An obvious case is to find out the wordsize on a platform. More
often than not, the appearance of sizeof(pointer) indicates a bug.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_467_Weakness Ordinalities" id="oc_467_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Primary&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness exists independent of other weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_467_Relationships" id="oc_467_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;465&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=465" target="_blank"&gt;Pointer Issues&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;682&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=682" target="_blank"&gt;Incorrect Calculation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;737&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=737" target="_blank"&gt;CERT C Secure Coding Section 03 - Expressions (EXP)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;740&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=740" target="_blank"&gt;CERT C Secure Coding Section 06 - Arrays (ARR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard&lt;/span&gt;734&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;131&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=131" target="_blank"&gt;Incorrect Calculation of Buffer Size&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_467_Taxonomy Mappings" id="oc_467_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Use of sizeof() on a pointer type&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;ARR01-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Do not apply the sizeof operator to a pointer when taking the
size of an array&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;EXP01-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Do not take the size of a pointer to determine the size of the
pointed-to type&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_467_White Box Definitions" id="oc_467_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. end statement that passes an identity of a dynamically allocated
memory resource to a sizeof operator&lt;/p&gt;
&lt;p&gt;2. start statement that allocates the dynamically allocated memory
resource&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_467_References" id="oc_467_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Robert Seacord. "EXP01-A. Do not take the sizeof a pointer to determine the size
of a type". &amp;lt;&lt;a href="https://www.securecoding.cert.org/confluence/display/seccode/EXP01-A.+Do+not+take+the+sizeof+a+pointer+to+determine+the+size+of+a+type" target="_blank"&gt;https://www.securecoding.cert.org/confluence/display/seccode/EXP01-A.+Do+not+take+the+sizeof+a+pointer+to+determine+the+size+of+a+type&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_467_Content History" id="oc_467_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Relationships, Other Notes, Taxonomy Mappings,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_291</key><name>Char_Overflow</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Assigning large data types into smaller data types, without proper checks and explicit casting, will&amp;#160;lead to undefined behavior and unintentional effects, such as data corruption (e.g. value wraparound, wherein maximum values become minimum values); system crashes; infinite loops; logic errors, such as bypassing of security mechanisms; or even buffer overflows leading to arbitrary code execution.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;This flaw can occur when&amp;#160;implicitly casting numerical data types of a larger size, into a variable with a data type of a smaller size. This forces the program to discard some bits of information from the number.&lt;/div&gt;
&lt;div&gt;Depending on how the numerical data types are stored in memory, this is often the bits with the highest value, causing substantial corruption of the stored number. Alternatively,&amp;#160;the sign bit of a signed integer could be lost, completely reversing the intention of the number.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Avoid casting larger data types to smaller types.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer promoting the target variable to a large enough data type.&amp;#160;&lt;/li&gt;
&lt;li&gt;If downcasting is necessary, always check that values are valid and in range of the target type, before casting&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Unsafe Downsize Casting&lt;/h4&gt;&lt;pre&gt;int unsafe_addition(short op1, int op2) { 

    // op2 gets forced from int into a short
    short total = op1 + op2; 
    
    return total;
}
&lt;/pre&gt;&lt;h4&gt;Safer Use of Proper Data Types&lt;/h4&gt;&lt;pre&gt;int safe_addition(short op1, int op2) { 

    // total variable is of type int, the largest type that is needed
    int total = 0; 

    // check if total will overflow available integer size 
    if (INT_MAX - abs(op2) &gt; op1) 
    {
        total = op1 + op2; 
    }
    else
    {
        // instead of overflow, saturate (but this is not always a good thing)
        total = INT_MAX
    }
    
    return total;
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_306</key><name>Improper_Transaction_Handling</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Database transactions that are abandoned (if their associated connection is closed, before the transaction is committed or rolled back) can have several different results, depending on implementation and specific technologies in use. While in some scenarios the database will automatically roll back the transaction if the connection is closed, more often it will either automatically commit the transaction in its abortive state, or leave the transaction open indefinitely (depending on its configured timeout value).&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In the first case, a transaction that is committed after a runtime exception is likely to be in an inconsistent state, incompatible with the current runtime conditions. This would result in situation detrimental to the system's integrity and possibly even stability.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In the second case, a transaction that is kept active&amp;nbsp;indefinitely would cause the database server to retain its locks on all records and tables affected by the transaction. This could cause general reliability and availability problems, leading to delays, degraded performance, or even deadlocks as one thread waits for the locks to be released.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In either case this results in unexpected state, and is dependent on external factors such that the application is not controlling the result.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;The application creates a connection to the database, and explicitly manages the database transaction by committing it when appropriate. However, the code does not explicitly roll back failed transactions, for example in the case of exceptions. This causes the application to rely on implementation-specific behavior, depending on the specific combination of technologies (such as the database server) and resultant configuration.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Always open database connections and begin transactions within a &lt;code&gt;try { }&lt;/code&gt; block.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Ensure there are no active uncommitted transactions before closing a database connection.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Always rollback active transactions in the case of exceptions.&lt;/li&gt;
&lt;li&gt;After handling the exception, ensure the transaction is rolled back in the &lt;code&gt;catch { }&lt;/code&gt; block, or possibly in the &lt;code&gt;finally { }&lt;/code&gt; block. &amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Implicit Failed Transaction Handling&lt;/h4&gt;&lt;pre&gt;public void updateValues(int id, String value) {
	Connection con; 
	PreparedStatement orderStmt = null;
	PreparedStatement custStmt = null; 
 
    try {
		con = DriverManager.getConnection(CONN_STRING);
        con.setAutoCommit(false);

      	String orderSql = "update ORDERS set DESCRIPTION = ? where CUSTID = ?";
        orderStmt = con.prepareStatement(orderSql);
      	orderStmt.setString(1, value);
      	orderStmt.setInt(2, id); 
      	orderStmt.executeUpdate(); 
      
      	String custSql = "update CUSTOMERS set TOTAL = TOTAL + 1 where ID = ?"
        custStmt = con.prepareStatement(custSql);
      	custStmt.setInt(1, id); 
      	custStmt.executeUpdate();
      
      	con.commit();
    } catch (SQLException e ) {
        handleException(e);
    } finally {
        if (orderStmt != null)
            orderStmt.close();
        if (custStmt != null)
            custStmt.close();
        if (con != null)
			con.close();  // In case of exception, transaction might be rolled back, might not... 
    }
}&lt;/pre&gt;&lt;h4&gt;Explicit Rollback of Failed Transaction&lt;/h4&gt;&lt;pre&gt;public void updateValues(int id, String value) {
	Connection con; 
	PreparedStatement orderStmt = null;
	PreparedStatement custStmt = null; 
 
    try {
		con = DriverManager.getConnection(CONN_STRING);
        con.setAutoCommit(false);

      	String orderSql = "update ORDERS set DESCRIPTION = ? where CUSTID = ?";
        orderStmt = con.prepareStatement(orderSql);
      	orderStmt.setString(1, value);
      	orderStmt.setInt(2, id); 
      	orderStmt.executeUpdate(); 
      
      	String custSql = "update CUSTOMERS set TOTAL = TOTAL + 1 where ID = ?"
        custStmt = con.prepareStatement(custSql);
      	custStmt.setInt(1, id); 
      	custStmt.executeUpdate();
      
      	con.commit();
    } catch (SQLException e ) {
        handleException(e);
		if (con != null) {
			try {
              	// Explicitly rollback active transaction in case of exception
				con.rollback(); 
            } catch (SQLException innerEx) {
				handleException(innerEx); 
            }
		}
    } finally {
        if (orderStmt != null)
            orderStmt.close();
        if (custStmt != null)
            custStmt.close();
        if (con != null)
			con.close();
    }
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_219</key><name>Buffer_Overflow_unbounded</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_308</key><name>Leaving_Temporary_Files</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Applications often create temporary files containing sensitive business data or personal information, in order to handle the file generation process in&amp;nbsp;several steps, or even as the output of an automatic process. These files, if left exposed&amp;nbsp;on disk for an indeterminate period of time, could leak the secret data to unauthorized users.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;It is very common for applications to use temporary files, as intermediate storage and to aid with processing large amounts of data or long-running calculations. Applications require such files so frequently that most operating systems allocate a dedicated area for temporary files, such as a TEMP directory, and several different mechanisms for creating them exist in most platforms. However, by default these temporary files are not deleted automatically, and will remain on disk indefinitely. If the program does not explicitly and proactively delete the temporary files when it is finished processing them, they might be accessbile to other users of the computer.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Always explicitly delete any temporary file created. Ensure temp file deletion will occur by wrapping it in a &lt;code&gt;finally { }&lt;/code&gt; block, or call &lt;code&gt;File.deleteOnExit()&lt;/code&gt; to ensure eventual deletion.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Additionally, to ensure that all temporary files will eventually be deleted, consider implementing additional functionality that will periodically scrape and delete all unused, existing temporary files.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Ensure all existing file handles or references are closed before attempting deletion.&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Leaving Temporary Report File&lt;/h4&gt;&lt;pre&gt;private byte[] generateData(int key) {
	File tempFile = File.createTempFile(TEMP_PREFIX, ".txt");   

  	FileOutputStream writer = new FileOutputStream(tempFile); 
  	ReportGenerator.writeHugeReportToFileStream(writer, key); 
  
  	FileInputStream reader = new FileInputStream(tempFile); 
  	int length = reader.available(); 
  	if (length &gt; 0) {
  		byte[] reportData = new byte[length];
		reader.read(reportData);
      
      	return reportData;
    }
  	else {
      	return null; 
    }
}&lt;/pre&gt;&lt;h4&gt;Cleaning Up Temporary Report File&lt;/h4&gt;&lt;pre&gt;private byte[] generateData(int key) {
  	byte[] reportData = null; 
  	File tempFile = null;
	FileOutputStream writer = null;
	FileInputStream reader = null;
	
  	try { 
      tempFile = File.createTempFile(TEMP_PREFIX, ".txt");

      writer = new FileOutputStream(tempFile); 
      ReportGenerator.writeHugeReportToFileStream(writer, key); 

      reader = new FileInputStream(tempFile); 
      int length = reader.available(); 
      if (length &gt; 0) {
		  reportData = new byte[length];
          reader.read(reportData);
      }
    }
  	catch (IOException e) {
      	handleError(e); 
    }
  	finally { 
		if (reader != null) {
          	try {
        		reader.close(); 
            }
      		catch (IOException e) {
      			handleError(e); 
    		}
        }
      
      	if (writer != null) {
          	try {
          		writer.close(); 
            }
            catch (IOException e) {
                handleError(e); 
            }
        }

      	if (tempFile != null) {
          	try { 
            	tempFile.delete(); 
            }
            catch (IOException e) {
                handleError(e); 
            }
        }
    }
  	return reportData;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2124</key><name>Reliance_on_DNS_Lookups_in_a_Decision</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Relying on reverse DNS records, without verifying domain ownership via cryptographic certificates or protocols, is not a sufficient authentication mechanism. Basing&amp;nbsp;any&amp;nbsp;security decisions on the registered hostname&amp;nbsp;could allow an external attacker to control the application flow. The attacker could possibly perform restricted operations, bypass access controls, and&amp;nbsp;even spoof the user's identity, inject a bogus hostname into the security log, and possibly other logic attacks.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;The application performs a reverse DNS resolution, based on the remote IP address, and performs a security check based on the returned hostname. However, it is relatively easy to spoof DNS names, or cause them to be misreported, depending on the context of the specific environment. If the remote server is controlled by the attacker, it can be configured to report a bogus hostname. Additionally, the attacker could also spoof the hostname if she controls the associated DNS server, or by attacking the legitimate DNS server, or by poisoning the server's DNS cache, or by modifying unprotected DNS traffic to the server. Regardless of the vector, a remote attacker can alter the detected network address, faking&amp;nbsp;the authentication details.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Do not rely on DNS records, network addresses, or system hostnames as a form of authentication, or any other security-related decision.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Do not perform reverse DNS resolution over an unprotected protocol without record validation.&lt;/li&gt;
&lt;li&gt;Implement a proper authentication mechanism, such as passwords, cryptographic certificates, or public key digital signatures.&lt;/li&gt;
&lt;li&gt;Consider using proposed protocol&amp;nbsp;extensions to cryptographically protect DNS, e.g. DNSSEC (though note the limited support and other drawbacks).&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Using Reverse DNS as Authentication&lt;/h4&gt;&lt;pre&gt;private boolean isInternalEmployee(ServletRequest req) {
  	boolean isCompany = false; 
  
	String ip = req.getRemoteAddr();
 	InetAddress address = InetAddress.getByName(ip);
  	
  	if (address.getHostName().endsWith(COMPANYNAME)) {
      	isCompany = true;
    }
  	return isCompany;
}&lt;/pre&gt;&lt;h4&gt;Verify Authenticated User's Identity&lt;/h4&gt;&lt;pre&gt;private boolean isInternalEmployee(ServletRequest req) {
  	boolean isCompany = false; 
  
	Principal user = req.getUserPrincipal();
  	if (user != null) {
    	if (user.getName().startsWith(COMPANYDOMAIN + "\\")) {
          	isCompany = true;
        }
    }
  	return isCompany;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1211</key><name>Use_of_Insufficiently_Random_Values</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Random values are often used as a mechanism to prevent malicious users from guessing a value, such as a password, encryption key, or session identifier. Depending on what&amp;#160;this random value is used for, an attacker would be able to predict&amp;#160;the next numbers generated, or previously generated values. This could enable the attacker to hijack another user's session, impersonate another user, or crack an encryption key (depending on what&amp;#160;the pseudo-random value was used for).&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application uses a weak method of generating pseudo-random values, such that other numbers could be determined from a relatively small sample size. Since the pseudo-random number generator used is designed for statistically uniform distribution of values, it is approximately deterministic. Thus, after collecting a few generated values (e.g. by creating a few individual sessions, and collecting the sessionids), it would be possible for an attacker to calculate another sessionid.&amp;#160;&lt;br /&gt;Specifically, if this&amp;#160;pseudo-random value is used in any security context, such as passwords, keys, or secret identifiers, an attacker would be able to predict&amp;#160;the next numbers generated, or previously generated values.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;Generic Guidance:&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Whenever unpredicatable numbers are required in a security context, use a cryptographically strong random number generator, instead of a statistical pseudo-random generator.&amp;#160;&lt;/li&gt;
&lt;li&gt;Use the cryptorandom generator that is built-in to your language or platform, and ensure it is securely seeded. Do not seed the generator with a weak, non-random seed. (In most cases, the default is securely random).&amp;#160;&lt;/li&gt;
&lt;li&gt;Ensure you use a long enough random value, to make brute-force attacks unfeasible.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;div&gt;
&lt;div&gt;&amp;#160;&lt;/div&gt;
&lt;div&gt;Specific Recommendations:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Do not use the statistical pseudo-random number generator, use the cryptorandom generator instead. In Java, this is the SecureRandom class.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Swift&lt;/h3&gt;&lt;h4&gt;Use of a weak pseudo-random number generator&lt;/h4&gt;&lt;pre&gt;let sessNum = rand();
let sessionId = String(format:"%ld", sessNum)&lt;/pre&gt;&lt;h4&gt;Cryptographically secure random number generator&lt;/h4&gt;&lt;pre&gt;var sessBytes: UInt32 = 0
withUnsafeMutablePointer(&amp;sessBytes, { (sessBytesPointer) -&gt; Void in
    let castedPointer = unsafeBitCast(sessBytesPointer, UnsafeMutablePointer&lt;UInt8&gt;.self)
    SecRandomCopyBytes(kSecRandomDefault, sizeof(UInt32), castedPointer)
})
    
let sessionId = String(format:"%llu", sessBytes)&lt;/pre&gt;&lt;h3&gt;Objc&lt;/h3&gt;&lt;h4&gt;Use of a weak pseudo-random number generator&lt;/h4&gt;&lt;pre&gt;long sessNum = rand();
NSString* sessionId = [NSString stringWithFormat:@"%ld", sessNum];&lt;/pre&gt;&lt;h4&gt;Cryptographically secure random number generator&lt;/h4&gt;&lt;pre&gt;UInt32 sessBytes;
SecRandomCopyBytes(kSecRandomDefault, sizeof(sessBytes), (uint8_t*)&amp;sessBytes);
    
NSString* sessionId = [NSString stringWithFormat:@"%llu", sessBytes];&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Use of a weak pseudo-random number generator&lt;/h4&gt;&lt;pre&gt;
Random random = new Random();

long sessNum = random.nextLong();

String sessionId = sessNum.toString();
&lt;/pre&gt;&lt;h4&gt;Cryptographically secure random number generator&lt;/h4&gt;&lt;pre&gt;
SecureRandom random = new SecureRandom();

byte sessBytes[] = new byte[32];

random.nextBytes(sessBytes);

String sessionId = new String(sessBytes);
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_324</key><name>Heap_Inspection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;All variables stored by the application in unencrypted memory can potentially be retrieved by an unauthorized user, with privlieged access to the&amp;#160;machine. For example, a privileged attacker could attach a debugger to the running process, or retrieve the process's memory from the swapfile or crash dump file.&amp;#160;&lt;/div&gt;
&lt;div&gt;Once the attacker&amp;#160;finds the user passwords in memory, these can be reused to easily impersonate the user to the system.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;String variables are immutable - in other words, once a string variable is assigned, its value cannot be changed or removed. Thus, these strings may remain&amp;#160;around in memory, possibly in multiple locations, for an indefinite period of time until the garbage collector happens to remove it. Sensitive data, such as passwords, will remain exposed in memory as plaintext with no control over their lifetime.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Do not store senstiive data, such as passwords or encryption keys, in memory in plaintext, even for a short period of time.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use specialized classes that store&amp;#160;encrypted memory.&amp;#160;&lt;/li&gt;
&lt;li&gt;Alternatively, store secrets temporarily in mutable data types, such as byte arrays, and then promptly zeroize the&amp;#160;memory locations.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Recommendations - Java:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Instead of storing passwords in immutable strings, prefer to use an encrypted memory&amp;#160;object, such as SealedObject. &amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;div&gt;
&lt;div&gt;Specific Recommendations - .NET:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Instead of storing passwords in immutable strings, prefer to use an encrypted memory&amp;#160;object, such as&amp;#160;SecureString or ProtectedData.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Vulnerable C code&lt;/h4&gt;&lt;pre&gt;/* Vulnerable to heap inspection */

#include &lt;stdio.h&gt;


void somefunc(){
	printf("Yea, I'm just being called for the heap of it..\n");
}

void authfunc(){
        char* password = (char *) malloc(256);
        char ch;
        ssize_t k;
		int i=0;
        while(k = read(0, &amp;ch, 1) &gt; 0)
        {
                if (ch == '\n'){
                        password[i]='\0';
                        break;
                } else{
                        password[i++]=ch;
                        fflush(0);
                }
        }
        printf("Password: %s\n",&amp;password[0]);
}

int main()
{
    printf("Please enter a password:\n");

	authfunc();
	printf("You can now dump memory to find this password!");
	somefunc();
	gets();

}
&lt;/pre&gt;&lt;h4&gt;Safe C code&lt;/h4&gt;&lt;pre&gt;/* Pesumably safe heap */

#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

#define STDIN_FILENO 0

void somefunc(){
        printf("Yea, I'm just being called for the heap of it..\n");
}

void authfunc(){
	char* password = (char*) malloc(256);
	int i=0;
	char ch;
	ssize_t k;
	while(k = read(STDIN_FILENO, &amp;ch, 1) &gt; 0)
	{
		if (ch == '\n'){
			password[i]='\0';
			break;
		} else{
			password[i++]=ch;
			fflush(0);
		}
	}
	i=0;
	memset(password,'\0',256);
}

int main()
{
	printf("Please enter a password:\n");
	authfunc();
	somefunc();
	char ch;
	while(read(STDIN_FILENO, &amp;ch, 1) &gt; 0)
	{
		if (ch == '\n')
			break;
	}
}
&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Plaintext Password in Immutable String&lt;/h4&gt;&lt;pre&gt;
class Heap_Inspection 
{
  private string password;
	
  void setPassword()
  {	
	password = System.console().readLine("Enter your password: ");
  }
}
&lt;/pre&gt;&lt;h4&gt;Password Protected in Memory&lt;/h4&gt;&lt;pre&gt;class Heap_Inspection_Fixed 
{
  private SealedObject password;
	
  void setPassword()
  {	
	byte[] sKey = getKeyFromConfig();
	Cipher c = Cipher.getInstance("AES");
	c.init(Cipher.ENCRYPT_MODE, sKey);

	char[] input = System.console().readPassword("Enter your password: ");
	password = new SealedObject(Arrays.asList(input), c);
  }
}

&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_322</key><name>Use_of_Hard_coded_Cryptographic_Key</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Static, unchangeable encryption keys in the source code can be stolen by an attacker with access to the source code or the application binaries. Once the attacker has the encryption key, this can be used to gain access to any encrypted secret data, thus violating the confidentiality of the data. Furthermore, it would be impossible to replace the encryption key once stolen. Note that if this is&amp;#160;a product that can be installed numerous times, the encryption key will always be the same, allowing an attacker to break all instances at the same cost.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application code uses an encryption key to encrypt and decrypt sensitive data. While it is important to create this encryption key randomly and keep it secret, the application has a single, static key embedded in plain text in the source code.&amp;#160;&lt;/div&gt;
&lt;div&gt;An attacker could gain access to the source code - whether in the source control system, developer workstations, or the server filesystem or product binaries themselves. Once the attacker has gained access to the source code, it is trivial to retrieve the plain text encryption key and use it to decrypt the sensitive data that the application was protecting.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Do not store any sensitive information, such as encryption keys, in plain text.&lt;/li&gt;
&lt;li&gt;Never&amp;#160;hardcode encryption keys in the application source code.&amp;#160;&lt;/li&gt;
&lt;li&gt;Implement proper key management, including dynamically generating random keys, protecting keys, and replacing keys as necessary.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Recommendations:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Remove the hardcoded encryption key from the application source code. Instead, retrieve the key from an external, protected store.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Common example of hardcoded encryption key&lt;/h4&gt;&lt;pre&gt;
//Generate a key
string encryptionKey = "EncryptionKey123"

//Encrypt the data
SecretKeySpec keySpec = new SecretKeySpec(encryptionKey.getBytes(), "AES");
Cipher cipher = Cipher.getInstance("AES/CBC/PKCS7Padding");
cipher.init(Cipher.ENCRYPT_MODE, keySpec);
output = cipher.doFinal(input)
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_293</key><name>Get_Right_Assignment</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Integer Overflow or Wraparound&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;190&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_190_Description" id="oc_190_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software performs a calculation that can produce an integer
overflow or wraparound, when the logic assumes that the resulting value will
always be larger than the original value. This can introduce other weaknesses
when the calculation is used for resource management or execution
control.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;An integer overflow or wraparound occurs when an integer value is
incremented to a value that is too large to store in the associated
representation. When this occurs, the value may wrap to become a very small
or negative number. While this may be intended behavior in circumstances
that rely on wrapping, it can have security consequences if the wrap is
unexpected. This is especially the case if the integer overflow can be
triggered using user-supplied inputs. This becomes security-critical when
the result is used to control looping, make a security decision, or
determine the offset or size in behaviors such as memory allocation,
copying, concatenation, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Terminology Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Terminology Notes&lt;/div&gt;&lt;div name="oc_190_Terminology Notes" id="oc_190_Terminology Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;"Integer overflow" is sometimes used to cover several types of errors,
including signedness errors, or buffer overflows that involve manipulation
of integer data types instead of characters. Part of the confusion results
from the fact that 0xffffffff is -1 in a signed context. Other confusion
also arises because of the role that integer overflows have in
chains.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_190_Time of Introduction" id="oc_190_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_190_Applicable Platforms" id="oc_190_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Language-independent&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_190_Common Consequences" id="oc_190_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Integer overflows generally lead to undefined behavior and therefore
crashes. In the case of overflows involving loop index variables, the
likelihood of infinite loops is also high.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;If the value in question is important to data (as opposed to flow),
simple data corruption has occurred. Also, if the integer overflow has
resulted in a buffer overflow condition, data corruption will most
likely take place.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Access Control&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Instruction processing: Integer overflows can sometimes trigger buffer
overflows which can be used to execute arbitrary code. This is usually
outside the scope of a program's implicit security policy.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_190_Likelihood of Exploit" id="oc_190_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Medium&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Detection Methods"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Detection Methods&lt;/div&gt;&lt;div name="oc_190_Detection Methods" id="oc_190_Detection Methods" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Static Analysis&lt;/p&gt;&lt;p&gt;This weakness can often be detected using automated static analysis
tools. Many modern tools use data flow analysis or constraint-based
techniques to minimize the number of false positives.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: High&lt;/i&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Black Box&lt;/p&gt;&lt;p&gt;Sometimes, evidence of this weakness can be detected using dynamic
tools and techniques that interact with the software using large test
suites with many diverse inputs, such as fuzz testing (fuzzing),
robustness testing, and fault injection. The software's operation may
slow down, but it should not become unstable, crash, or generate
incorrect results.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Moderate&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;Without visibility into the code, black box methods may not be able to
sufficiently distinguish this weakness from others, requiring follow-up
manual methods to diagnose the underlying problem. &lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Manual Analysis&lt;/p&gt;&lt;p&gt;This weakness can be detected using tools and techniques that require
manual (human) analysis, such as penetration testing, threat modeling,
and interactive tools that allow the tester to record and modify an
active session. &lt;/p&gt;&lt;p&gt;Specifically, manual static analysis is useful for evaluating the
correctness of allocation calculations. This can be useful for detecting
overflow conditions (CWE-190) or similar weaknesses that might have
serious security impacts on the program.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: High&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt; These may be more effective than strictly automated techniques. This
is especially the case with weaknesses that are related to design and
business rules.&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_190_Demonstrative Examples" id="oc_190_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code excerpt from OpenSSH 3.3 demonstrates a classic
case of integer overflow:&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;nresp = packet_get_int();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (nresp &amp;gt; 0) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;response = xmalloc(nresp*sizeof(char*));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;for (i = 0; i &amp;gt; nresp; i++) response[i] =
packet_get_string(NULL);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If nresp has the value 1073741824 and sizeof(char*) has its typical
value of 4, then the result of the operation nresp*sizeof(char*)
overflows, and the argument to xmalloc() will be 0. Most malloc()
implementations will happily allocate a 0-byte buffer, causing the
subsequent loop iterations to overflow the heap buffer response.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;Integer overflows can be complicated and difficult to detect. The
following example is an attempt to show how an integer overflow may lead to
undefined looping behavior:&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;short int bytesRec = 0;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char buf[SOMEBIGNUM];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;while(bytesRec &amp;lt; MAXGET) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;bytesRec += getFromInput(buf+bytesRec);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;In the above case, it is entirely possible that bytesRec may overflow,
continuously creating a lower number than MAXGET and also overwriting
the first MAXGET-1 bytes of buf.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_190_Observed Examples" id="oc_190_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0391" target="_blank"&gt;CVE-2002-0391&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Integer overflow via a large number of
arguments.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0639" target="_blank"&gt;CVE-2002-0639&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Integer overflow in OpenSSH as listed in the
demonstrative examples.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-1141" target="_blank"&gt;CVE-2005-1141&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Image with large width and height leads to integer
overflow.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0102" target="_blank"&gt;CVE-2005-0102&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Length value of -1 leads to allocation of 0 bytes
and resultant heap overflow.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2013" target="_blank"&gt;CVE-2004-2013&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Length value of -1 leads to allocation of 0 bytes
and resultant heap overflow.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_190_Potential Mitigations" id="oc_190_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p&gt; Ensure that all protocols are strictly defined, such that all
out-of-bounds behavior can be identified simply, and require strict
conformance to the protocol.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Language Selection&lt;/p&gt;&lt;p&gt;Use a language that does not allow this weakness to occur or provides
constructs that make this weakness easier to avoid.&lt;/p&gt;&lt;p&gt;If possible, choose a language or compiler that performs automatic
bounds checking.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Libraries or Frameworks&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to
occur or provides constructs that make this weakness easier to
avoid.&lt;/p&gt;&lt;p&gt;Use libraries or frameworks that make it easier to handle numbers
without unexpected consequences.&lt;/p&gt;&lt;p&gt;Examples include safe integer handling packages such as SafeInt (C++)
or IntegerLib (C or C++).&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Input Validation&lt;/p&gt;&lt;p&gt;Perform input validation on any numeric input by ensuring that it is
within the expected range. Enforce that the input meets both the minimum
and maximum requirements for the expected range.&lt;/p&gt;&lt;p&gt;Use unsigned integers where possible. This makes it easier to perform
sanity checks for integer overflows. If you must use signed integers,
make sure that your range check includes minimum values as well as
maximum values.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Understand your programming language's underlying representation and
how it interacts with numeric calculation. Pay close attention to byte
size discrepancies, precision, signed/unsigned distinctions, truncation,
conversion and casting between types, "not-a-number" calculations, and
how your language handles numbers that are too large or too small for
its underlying representation.&lt;/p&gt;&lt;p&gt;Also be careful to account for 32-bit, 64-bit, and other potential
differences that may affect the numeric representation.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Examine compiler warnings closely and eliminate potentially security
critical problems, such as signed / unsigned mismatch. Even if the
weakness is rarely exploitable, a single failure may lead to the
compromise of the entire system.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_190_Relationships" id="oc_190_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Named Chain(s) this relationship pertains
to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;189&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=189" target="_blank"&gt;Numeric Errors&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts&lt;/span&gt;699&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;682&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=682" target="_blank"&gt;Incorrect Calculation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;738&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=738" target="_blank"&gt;CERT C Secure Coding Section 04 - Integers (INT)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;742&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=742" target="_blank"&gt;CERT C Secure Coding Section 08 - Memory Management (MEM)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard&lt;/span&gt;734&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;802&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=802" target="_blank"&gt;2010 Top 25 - Risky Resource Management&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Integer Overflow to Buffer Overflow&lt;/span&gt;680&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;StartsChain&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Compound Element: Chain&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;680&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=680" target="_blank"&gt;Integer Overflow to Buffer Overflow&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Named Chains&lt;/span&gt;709&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Integer Overflow to Buffer Overflow&lt;/span&gt;680&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;128&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=128" target="_blank"&gt;Wrap-around Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_190_Relationship Notes" id="oc_190_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Integer overflows can be primary to buffer overflows.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Functional Areas"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Functional Areas&lt;/div&gt;&lt;div name="oc_190_Functional Areas" id="oc_190_Functional Areas" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Number processing&lt;/li&gt;
&lt;li&gt;Memory management&lt;/li&gt;
&lt;li&gt;Non-specific, counters&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_190_Taxonomy Mappings" id="oc_190_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Integer overflow (wrap or wraparound)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Integer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Integer overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;INT03-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Use a secure integer library&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;INT30-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Ensure that unsigned integer operations do not
wrap&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;INT32-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Ensure that operations on signed integers do not result in
overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;INT35-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Evaluate integer expressions in a larger size before comparing
or assigning to that size&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM07-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Ensure that the arguments to calloc(), when multiplied, can be
represented as a size t&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM35-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Allocate sufficient memory for an object&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;WASC&lt;/td&gt;&lt;td valign="top"&gt;3&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Integer Overflows &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_190_Related Attack Patterns" id="oc_190_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org92.html" target="_blank"&gt;92&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Forced Integer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_190_References" id="oc_190_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Yves Younan. "An overview of common programming security vulnerabilities and
possible solutions". Student thesis section 5.4.3. August 2003. &amp;lt;&lt;a href="http://fort-knox.org/thesis.pdf" target="_blank"&gt;http://fort-knox.org/thesis.pdf&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;blexim. "Basic Integer Overflows". Phrack - Issue 60, Chapter 10. &amp;lt;&lt;a href="http://www.phrack.org/archives/60/p60-0x0a.txt" target="_blank"&gt;http://www.phrack.org/archives/60/p60-0x0a.txt&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-11] M. Howard and
D. LeBlanc. "Writing Secure Code". Chapter 20, "Integer Overflows" Page 620. 2nd Edition. Microsoft. 2002. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-17] Michael Howard, David LeBlanc
and John Viega. "24 Deadly Sins of Software Security". "Sin 7: Integer Overflows." Page 119. McGraw-Hill. 2010. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-18] David LeBlanc and
Niels Dekker. "SafeInt". &amp;lt;&lt;a href="http://safeint.codeplex.com/" target="_blank"&gt;http://safeint.codeplex.com/&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_190_Content History" id="oc_190_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Relationships,
Relationship Notes, Taxonomy Mappings,
Terminology Notes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Description,
Potential Mitigations, Terminology Notes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description, Name&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Detection Factors,
Functional Areas, Observed Examples, Potential Mitigations, References,
Related Attack Patterns, Relationships, Taxonomy Mappings,
Terminology Notes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-04-05&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples, Detection Factors, Potential Mitigations, References, Related Attack Patterns&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Integer Overflow (Wrap or
Wraparound)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2441</key><name>NULL_Pointer_Dereference</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;NULL Pointer Dereference&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;476&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_476_Description" id="oc_476_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;A NULL pointer dereference occurs when the application
dereferences a pointer that it expects to be valid, but is NULL, typically
causing a crash or exit.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_476_Time of Introduction" id="oc_476_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_476_Applicable Platforms" id="oc_476_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;p&gt;Java&lt;/p&gt;
&lt;p&gt;.NET&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_476_Common Consequences" id="oc_476_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;NULL pointer dereferences usually result in the failure of the process
unless exception handling (on some platforms) is available and
implemented. Even when exception handling is being used, it can still be
very difficult to return the software to a safe state of
operation.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;In very rare circumstances and environments, code execution is
possible.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_476_Likelihood of Exploit" id="oc_476_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Medium&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_476_Demonstrative Examples" id="oc_476_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;NULL pointer dereference issue can occur through a number of flaws,
including race conditions, and simple programming omissions. While there are
no complete fixes aside from conscientious programming, the following steps
will go a long way to ensure that NULL pointer dereferences do not occur.
Before using a pointer, ensure that it is not equal to NULL:&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;if (pointer1 != NULL) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;/* make use of pointer1 */&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/* ... */&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;When freeing pointers, ensure they are not set to NULL, and be sure to
set them to NULL once they are freed:&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;if (pointer1 != NULL) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;free(pointer1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;pointer1 = NULL;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If you are working with a multi-threaded or otherwise asynchronous
environment, ensure that proper locking APIs are used to lock before the
if statement; and unlock when it has finished.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;This example takes an IP address from a user, verifies that it is
well formed and then looks up the hostname and copies it into a
buffer.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;void host_lookup(char *user_supplied_addr){&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;struct hostent *hp;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;in_addr_t *addr;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char hostname[64];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;in_addr_t inet_addr(const char *cp);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/*routine that ensures user_supplied_addr is in the right
format for conversion */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;validate_addr_form(user_supplied_addr);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;addr = inet_addr(user_supplied_addr);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;hp = gethostbyaddr( addr, sizeof(struct in_addr),
AF_INET);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcpy(hostname, hp-&amp;gt;h_name);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If an attacker provides an address that appears to be well-formed, but
the address does not resolve to a hostname, then the call to
gethostbyaddr() will return NULL. Since the code does not check the
return value from gethostbyaddr (CWE-252), a NULL pointer dereference
would then occur in the call to strcpy(). &lt;/p&gt;&lt;p&gt;Note that this example is also vulnerable to a buffer overflow (see
CWE-119).&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;In the following code, the programmer assumes that the system always
has a property named "cmd" defined. If an attacker can control the program's
environment so that "cmd" is not defined, the program throws a NULL pointer
exception when it attempts to call the trim() method.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;String cmd = System.getProperty("cmd");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;cmd = cmd.trim();&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_476_Observed Examples" id="oc_476_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3274" target="_blank"&gt;CVE-2005-3274&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;race condition causes a table to be corrupted if a
timer activates while it is being modified, leading to resultant NULL
dereference; also involves locking.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1912" target="_blank"&gt;CVE-2002-1912&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;large number of packets leads to NULL
dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0772" target="_blank"&gt;CVE-2005-0772&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;packet with invalid error status value triggers
NULL dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0079" target="_blank"&gt;CVE-2004-0079&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0365" target="_blank"&gt;CVE-2004-0365&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1013" target="_blank"&gt;CVE-2003-1013&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1000" target="_blank"&gt;CVE-2003-1000&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0389" target="_blank"&gt;CVE-2004-0389&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0119" target="_blank"&gt;CVE-2004-0119&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0458" target="_blank"&gt;CVE-2004-0458&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0401" target="_blank"&gt;CVE-2002-0401&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_476_Potential Mitigations" id="oc_476_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;If all pointers that could have been modified are sanity-checked
previous to use, nearly all NULL pointer dereferences can be
prevented.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p&gt;The choice could be made to use a language that is not susceptible to
these issues.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Check the results of all functions that return a value and verify that
the value is non-null before acting upon it.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Moderate&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;Checking the return value of the function will typically be
sufficient, however beware of race conditions (CWE-362) in a concurrent
environment.&lt;/p&gt;
&lt;p&gt;This solution does not handle the use of improperly initialized
variables (CWE-665).&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Identify all variables and data stores that receive information from
external sources, and apply input validation to make sure that they are
only initialized to expected values.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Explicitly initialize all your variables and other data stores, either
during declaration or just before the first usage.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Use automated static analysis tools that target this type of weakness.
Many modern techniques use data flow analysis to minimize the number of
false positives. This is not a perfect solution, since 100% accuracy and
coverage are not feasible.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Use dynamic tools and techniques that interact with the software using
large test suites with many diverse inputs, such as fuzz testing
(fuzzing), robustness testing, and fault injection. The software's
operation may slow down, but it should not become unstable, crash, or
generate incorrect results.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Identify error conditions that are not likely to occur during normal
usage and trigger them. For example, run the program under low memory
conditions, run with insufficient privileges or permissions, interrupt a
transaction before it is completed, or disable connectivity to basic
network services such as DNS. Monitor the software for any unexpected
behavior. If you trigger an unhandled exception or similar error that
was discovered and handled by the application's environment, it may
still indicate unexpected conditions that were not handled by the
application itself.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_476_Weakness Ordinalities" id="oc_476_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Resultant&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;NULL pointer dereferences are frequently resultant from rarely
encountered error conditions, since these are most likely to escape
detection during the testing phases.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_476_Relationships" id="oc_476_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Named Chain(s) this relationship pertains
to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;730&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=730" target="_blank"&gt;OWASP Top Ten 2004 Category A9 - Denial of Service&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;737&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=737" target="_blank"&gt;CERT C Secure Coding Section 03 - Expressions (EXP)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;742&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=742" target="_blank"&gt;CERT C Secure Coding Section 08 - Memory Management (MEM)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard&lt;/span&gt;734&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;808&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=808" target="_blank"&gt;2010 Top 25 - Weaknesses On the Cusp&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;373&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=373" target="_blank"&gt;State Synchronization Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;252&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=252" target="_blank"&gt;Unchecked Return Value&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Unchecked Return Value to NULL Pointer Dereference&lt;/span&gt;690&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;789&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=789" target="_blank"&gt;Uncontrolled Memory Allocation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_476_Taxonomy Mappings" id="oc_476_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null Dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null-pointer dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null Dereference (Null Pointer Dereference)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A9&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Denial of Service&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;EXP34-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Ensure a null pointer is not dereferenced&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM32-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Detect and handle memory allocation errors&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_476_White Box Definitions" id="oc_476_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. start statement that assigns a null value to the pointer&lt;/p&gt;
&lt;p&gt;2. end statement that dereferences a pointer&lt;/p&gt;
&lt;p&gt;3. the code path does not contain any other statement that assigns
value to the pointer&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_476_Content History" id="oc_476_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Relationships, Other Notes, Taxonomy Mappings,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Demonstrative Examples,
Other Notes, Potential Mitigations,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_297</key><name>Arithmenic_Operation_On_Boolean</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Indicator of Poor Code Quality&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;398&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Class)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_398_Description" id="oc_398_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The code has features that do not directly introduce a weakness
or vulnerability, but indicate that the product has not been carefully developed
or maintained.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Programs are more likely to be secure when good development practices are
followed. If a program is complex, difficult to maintain, not portable, or
shows evidence of neglect, then there is a higher likelihood that weaknesses
are buried in the code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_398_Time of Introduction" id="oc_398_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_398_Relationships" id="oc_398_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;18&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=18" target="_blank"&gt;Source Code&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;710&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=710" target="_blank"&gt;Coding Standards Violation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;107&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=107" target="_blank"&gt;Struts: Unused Validation Form&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;110&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=110" target="_blank"&gt;Struts: Validator Without Form Field&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;399&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=399" target="_blank"&gt;Resource Management Errors&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;401&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=401" target="_blank"&gt;Failure to Release Memory Before Removing Last Reference ('Memory Leak')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;404&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=404" target="_blank"&gt;Improper Resource Shutdown or Release&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts&lt;/span&gt;699&lt;/span&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;415&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=415" target="_blank"&gt;Double Free&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;416&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=416" target="_blank"&gt;Use After Free&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;457&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=457" target="_blank"&gt;Use of Uninitialized Variable&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;474&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=474" target="_blank"&gt;Use of Function with Inconsistent Implementations&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;475&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=475" target="_blank"&gt;Undefined Behavior for Input to API&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;476&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=476" target="_blank"&gt;NULL Pointer Dereference&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;477&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=477" target="_blank"&gt;Use of Obsolete Functions&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;478&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=478" target="_blank"&gt;Missing Default Case in Switch Statement&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;479&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=479" target="_blank"&gt;Unsafe Function Call from a Signal Handler&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;483&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=483" target="_blank"&gt;Incorrect Block Delimitation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;484&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=484" target="_blank"&gt;Omitted Break Statement in Switch&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;546&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=546" target="_blank"&gt;Suspicious Comment&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;547&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=547" target="_blank"&gt;Use of Hard-coded, Security-relevant Constants&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;561&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=561" target="_blank"&gt;Dead Code&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;562&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=562" target="_blank"&gt;Return of Stack Variable Address&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;563&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=563" target="_blank"&gt;Unused Variable&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;569&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=569" target="_blank"&gt;Expression Issues&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;585&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=585" target="_blank"&gt;Empty Synchronized Block&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;586&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=586" target="_blank"&gt;Explicit Call to Finalize()&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;617&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=617" target="_blank"&gt;Reachable Assertion&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;676&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=676" target="_blank"&gt;Use of Potentially Dangerous Function&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;700&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=700" target="_blank"&gt;Seven Pernicious Kingdoms&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_398_Taxonomy Mappings" id="oc_398_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Code Quality&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_398_Content History" id="oc_398_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description, Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Code
Quality&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1850</key><name>R14_08_Not_Compound_Switch_Or_Iteration_Statement</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 14-8&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 14-8&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11038&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Every &amp;#39;switch&amp;#39; or iteration statement shall have a compound { ... } body.&lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_319</key><name>Double_Free</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Double Free&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;415&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Variant)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_415_Description" id="oc_415_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The product calls free() twice on the same memory address,
potentially leading to modification of unexpected memory
locations.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;When a program calls free() twice with the same argument, the program's
memory management data structures become corrupted. This corruption can
cause the program to crash or, in some circumstances, cause two later calls
to malloc() to return the same pointer. If malloc() returns the same value
twice and the program later gives the attacker control over the data that is
written into this doubly-allocated memory, the program becomes vulnerable to
a buffer overflow attack.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_415_Alternate Terms" id="oc_415_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Double-free&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_415_Time of Introduction" id="oc_415_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_415_Applicable Platforms" id="oc_415_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_415_Common Consequences" id="oc_415_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Access Control&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Doubly freeing memory may result in a write-what-where condition,
allowing an attacker to execute arbitrary code.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_415_Likelihood of Exploit" id="oc_415_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Low to Medium&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_415_Demonstrative Examples" id="oc_415_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code shows a simple example of a double free
vulnerability.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char* ptr = (char*)malloc (SIZE);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (abrt) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;free(ptr);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;free(ptr);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Double free vulnerabilities have two common (and sometimes
overlapping) causes:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Error conditions and other exceptional circumstances&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Confusion over which part of the program is responsible for
freeing the memory&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Although some double free vulnerabilities are not much more
complicated than the previous example, most are spread out across
hundreds of lines of code or even different files. Programmers seem
particularly susceptible to freeing global variables more than
once.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;While contrived, this code should be exploitable on Linux
distributions which do not ship with heap-chunk check summing turned
on.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;#define BUFSIZE1 512&lt;/div&gt;&lt;div style="font-size:90%;"&gt;#define BUFSIZE2 ((BUFSIZE1/2) - 8)&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int main(int argc, char **argv) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char *buf1R1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char *buf2R1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char *buf1R2;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;buf1R1 = (char *) malloc(BUFSIZE2);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;buf2R1 = (char *) malloc(BUFSIZE2);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;free(buf1R1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;free(buf2R1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;buf1R2 = (char *) malloc(BUFSIZE1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(buf1R2, argv[1], BUFSIZE1-1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;free(buf2R1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;free(buf1R2);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_415_Observed Examples" id="oc_415_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0642" target="_blank"&gt;CVE-2004-0642&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Double free resultant from certain error
conditions.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0772" target="_blank"&gt;CVE-2004-0772&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Double free resultant from certain error
conditions.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-1689" target="_blank"&gt;CVE-2005-1689&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Double free resultant from certain error
conditions.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0545" target="_blank"&gt;CVE-2003-0545&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Double free from invalid ASN.1
encoding.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1048" target="_blank"&gt;CVE-2003-1048&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Double free from malformed
GIF.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0891" target="_blank"&gt;CVE-2005-0891&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Double free from malformed
GIF.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0059" target="_blank"&gt;CVE-2002-0059&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Double free from malformed compressed
data.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_415_Potential Mitigations" id="oc_415_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Choose a language that provides automatic memory management.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Ensure that each allocation is freed only once. After freeing a chunk,
set the pointer to NULL to ensure the pointer cannot be freed again. In
complicated error conditions, be sure that clean-up routines respect the
state of allocation properly. If the language is object oriented, ensure
that object destructors delete each chunk of memory only once.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Use a static analysis tool to find double free instances.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_415_Relationships" id="oc_415_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;399&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=399" target="_blank"&gt;Resource Management Errors&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;633&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=633" target="_blank"&gt;Weaknesses that Affect Memory&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;666&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=666" target="_blank"&gt;Operation on Resource in Wrong Phase of Lifetime&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;675&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=675" target="_blank"&gt;Duplicate Operations on Resource&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;742&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=742" target="_blank"&gt;CERT C Secure Coding Section 08 - Memory Management (MEM)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;123&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=123" target="_blank"&gt;Write-what-where Condition&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;416&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=416" target="_blank"&gt;Use After Free&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts&lt;/span&gt;699&lt;/span&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;364&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=364" target="_blank"&gt;Signal Handler Race Condition&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_415_Relationship Notes" id="oc_415_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;This is usually resultant from another weakness, such as an unhandled
error or race condition between threads. It could also be primary to
weaknesses such as buffer overflows.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Affected Resources"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Affected Resources&lt;/div&gt;&lt;div name="oc_415_Affected Resources" id="oc_415_Affected Resources" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_415_Taxonomy Mappings" id="oc_415_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;DFREE - Double-Free Vulnerability&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Double Free&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Doubly freeing memory&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM00-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Allocate and free memory in the same module, at the same level
of abstraction&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM01-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Store a new value in pointers immediately after
free()&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM31-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Free dynamically allocated memory exactly
once&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_415_White Box Definitions" id="oc_415_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. start statement that relinquishes a dynamically allocated memory
resource&lt;/p&gt;
&lt;p&gt;2. end statement that relinquishes the dynamically allocated memory
resource&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Maintenance Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Maintenance Notes&lt;/div&gt;&lt;div name="oc_415_Maintenance Notes" id="oc_415_Maintenance Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;It could be argued that Double Free would be most appropriately located as
a child of "Use after Free", but "Use" and "Release" are considered to be
distinct operations within vulnerability theory, therefore this is more
accurately "Release of a Resource after Expiration or Release", which
doesn't exist yet.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_415_Content History" id="oc_415_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Description, Maintenance Notes, Relationships, Other Notes,
Relationship Notes, Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Other Notes&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_328</key><name>Setting_Manipulation</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;If an external user can control the application configuration or environment settings, she can disrupt application service, or cause the application to behave unexpectedly, possibly creating&amp;#160;additional vulnerabilities in the application, or even causing the application to perform malicious actions.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application receives unvalidated input from the user, and directly sets that value to the application configuration or environment settings, without properly sanitizing or constraining the input.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Do not allow user&amp;#160;input,&amp;#160;or otherwise untrusted data, to control sensitive values, particularly configuration or environment settings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Always validate data received from users, before using it for any internal use.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;User Input Controlling System Properties&lt;/h4&gt;&lt;pre&gt;public void init() {
    string dbUrl = request.getParameter("dbUrl");
    string remoteWsUrl = request.getParameter("wsUrl");
    
    Properties props = System.getProperties();
    props.setProperty("dbUrl", dbUrl);
    props.setProperty("wsUrl", remoteWsUrl);
    
}&lt;/pre&gt;&lt;h4&gt;Read Properties from Configuration File&lt;/h4&gt;&lt;pre&gt;public void init() {
    Properties props = new Properties(System.getProperties());
    props.loadFromXml(new FileInputStream(CONFIG_FILE_PATH));

}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3880</key><name>Inadequate_Encryption_Strength</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Using weak or outdated cryptography does not provide sufficient protection for sensitive data. An attacker that gains access to the encrypted data would likely be able to break the encryption, using either cryptanalysis or brute force attacks. Thus, the attacker would be able to steal user passwords and other personal data. This could lead to user impersonation or identity theft.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application uses a weak algorithm, that is considered obselete since it is relatively easy to break. These obselete algorithms are vulnerable to several different kinds of attacks, including brute force.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Always use strong, modern algorithms for encryption, hashing, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not use weak, outdated, or obsolete algorithms.&amp;#160;&lt;/li&gt;
&lt;li&gt;Ensure you select the correct cryptographic mechanism according to the specific requirements.&amp;#160;&lt;/li&gt;
&lt;li&gt;Passwords should be protected with a dedicated password protection scheme, such as bcrypt, scrypt, PBKDF2, or Argon2.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Recommendations:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Do not use SHA-1, MD5, or any other weak hash algorithm to protect passwords or personal data. Instead, use a stronger hash such as SHA-256&amp;#160;when a secure hash is required.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not use DES, Triple-DES, RC2, or any other weak&amp;#160;encryption algorithm&amp;#160;to protect passwords or personal data. Instead, use a stronger encryption algorithm&amp;#160;such as AES&amp;#160;to protect personal data.&amp;#160;&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not use weak encryption modes such as ECB, or rely on insecure defaults. Explicitly specify a stronger encryption mode, such as GCM.&amp;#160;&lt;/li&gt;
&lt;li&gt;For symmetric encryption, use&amp;#160;a key length&amp;#160;of&amp;#160;at least 256 bits.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;div&gt;&amp;#160;&lt;/div&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Weakly Hashed PII&lt;/h4&gt;&lt;pre&gt;string protectSSN(HttpServletRequest req) {
    string socialSecurityNum = req.getParameter("SocialSecurityNo");
    
    return DigestUtils.md5Hex(socialSecurityNum);
}&lt;/pre&gt;&lt;h4&gt;Stronger Hash for PII&lt;/h4&gt;&lt;pre&gt;string protectSSN(HttpServletRequest req) {
    string socialSecurityNum = req.getParameter("SocialSecurityNo");
    
    return DigestUtils.sha256Hex(socialSecurityNum);
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_304</key><name>Use_Of_Hardcoded_Password</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Hardcoded passwords expose the application to password leakage. If an attacker gains access to the source code, she will be able to steal the embedded passwords, and use them to impersonate a valid user. This could include impersonating end users to the application, or impersonating the application to a remote system, such as a database or a remote web service.&amp;#160;&lt;/div&gt;
&lt;div&gt;Once the attacker succeeds in impersonating the user or application, she will have full access to the system, and be able to do anything the impersonated identity could do.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application codebase&amp;#160;has string literal passwords embedded in the source code. This hardcoded value is used either to compare to user-provided credentials, or to authenticate downstream to a remote system (such as a database or a remote web service). &amp;#160;&lt;/div&gt;
&lt;div&gt;An attacker only needs to gain access to the source code to reveal the hardcoded password. Likewise, the attacker can reverse engineer the compiled application binaries, and easily retrieve the embedded password. Once found, the attacker can easily use the password in impersonation attacks, either directly on the application or to the remote system.&amp;#160;&lt;/div&gt;
&lt;div&gt;Furthermore, once stolen, this password cannot be easily changed to prevent further misuse, unless a new version of the application is compiled. Moreover, if this application is distributed to numerous systems, stealing the password from one system automatically allows a class break in to all the deployed systems.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Do not hardcode any secret data in source code, especially not passwords.&amp;#160;&lt;/li&gt;
&lt;li&gt;In particular, user passwords should be stored in a&amp;#160;database or directory service, and protected with a strong password hash (e.g. bcrypt, scrypt, PBKDF2, or Argon2). Do not compare user passwords with a hardcoded value.&amp;#160;&lt;/li&gt;
&lt;li&gt;Sytem passwords should be stored in a configuration file or the database, and protected with strong encryption (e.g. AES-256). Encryption keys should be securely managed, and not hardcoded.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Hardcoded Admin Password&lt;/h4&gt;&lt;pre&gt;bool isAdmin(String username, String password) {
    bool isMatch = false; 
    
    if (username.equals("admin")) {
        if (password.equals("P@ssw0rd"))
            return isMatch = true;
    }
    
    return isMatch;
}&lt;/pre&gt;&lt;h4&gt;No Hardcoded Credentials&lt;/h4&gt;&lt;pre&gt;bool isAdmin(String username, String password) {
    bool adminPrivs = false;
    
    if (authenticateUser(username, password)) { 
        UserPrivileges privs = getUserPrivilieges(username);
        
        if (privs.isAdmin)
            adminPrivs = true;
    }
    
    return adminPrivs;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3644</key><name>Buffer_Size_Literal_Condition</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3093</key><name>Buffer_Size_Literal</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3893</key><name>Use_of_a_One_Way_Hash_without_a_Salt</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;If an attacker gains access to the hashed passwords, she would likely be able to reverse the hash due to this weakness, and retrieve the original password. Once the passwords are discovered, the attacker can impersonate the users, and take full advantage of their privileges and access their personal data. Furthermore, this would likely not be discovered, as the attacker is being identified solely by the victims' credentials.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Typical cryptographic hashes, such as SHA-1 and MD5, are incredibly fast. Combined with attack techniques such as precomputed Rainbow Tables, it is relatively easy for attackers to reverse the hashes, and discover the original passwords. Lack of a unique, random salt added to the password makes brute force attacks even simpler.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Generic Guidance:&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- Always use strong, modern algorithms for encryption, hashing, and so on.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- Do not use weak, outdated, or obsolete algorithms.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;-&amp;nbsp;Ensure you select the correct cryptographic mechanism according to the specific requirements.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Specific Recommendations:&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- Passwords should be protected using a password hashing algorithm, instead of a general cryptographic hash. This includes adaptive hashes such as bcrypt, scrypt, PBKDF2 and Argon2.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- Tune the work factor, or cost, of the adaptive hash function according to the designated environment and risk profile.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- Do not use a regular cryptographic hash, such as SHA-1 or MD5,&amp;nbsp;to protect passwords, as these are too fast.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- If it is necessary to use a common hash to protect passwords, add several bytes of unique, random data ("salt") to the password before hashing it. Store the salt with the hashed password, and do not reuse the same salt for multiple passwords.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Unsalted Hashed Password&lt;/h4&gt;&lt;pre&gt;private String protectPassword(String password) {
	byte[] data = password.getBytes();
  	byte[] hash = null; 
  
  	MessageDigest md = MessageDigest.getInstance("MD5");
  	hash = md.digest(data);
  
  	return Base64.getEncoder().encodeToString(hash); 
}&lt;/pre&gt;&lt;h4&gt;Fast Hash with Salt&lt;/h4&gt;&lt;pre&gt;private String protectPassword(String password) {
	byte[] data = password.getBytes("UTF-8");
  	byte[] hash = null; 
  	  
  	try { 
	  	MessageDigest md = MessageDigest.getInstance("SHA-1");
  	
      	SecureRandom rand = new SecureRandom();
      	byte[] salt = new byte[32];
      	rand.nextBytes(salt); 
      
  		md.update(salt);
      	md.update(data); 
      
      	hash = md.digest();
    }
  	catch (GeneralSecurityException gse) {
      	handleCryptoErrors(gse);
    }
  	finally {
      	Arrays.fill(data, 0);
    }
  
  	return Base64.getEncoder().encodeToString(hash); 
}&lt;/pre&gt;&lt;h4&gt;Slow, Adaptive Password Hash&lt;/h4&gt;&lt;pre&gt;private String protectPassword(String password) {
	byte[] data = password.getBytes("UTF-8");
  	byte[] hash = null; 
  
  	try { 
      	SecureRandom rand = new SecureRandom();
      	byte[] salt = new byte[32];
      	rand.nextBytes(salt); 

      	SecretKeyFactory skf = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA512");
      	PBEKeySpec spec = new PBEKeySpec(data, salt, ITERATION_COUNT, KEY_LENGTH);
      	// ITERATION_COUNT should be configured by environment, KEY_LENGTH should be 256
      	SecretKey key = skf.generateSecret(spec);
      
      	hash = key.getEncoded(); 
    }
	catch (GeneralSecurityException gse) {
      	handleCryptoErrors(gse);
    }
  	finally {
      	Arrays.fill(data, 0);
    }
  
  	return Base64.getEncoder().encodeToString(hash); 
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_309</key><name>Leftover_Debug_Code</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Tests and debugging code are not intended to be deployed to the production environment, and can create unintended entry points, thus increasing the application's attack surface. Furthermore, this code is often not properly tested or maintained, and can retain historic vulnerabilities that were fixed in other parts of the codebase. Often, debug code will contain a functional "back door", by enabling the programmer to bypass operational security mechanisms, such as authentication or access controls.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;During application development, it is common for programmers to implement specialized code, in order to ease debugging and testing. Often the programmer will even&amp;nbsp;enable the debug code to bypass security mechanisms, so as to focus the tests on the specific functionality and isolate it from the security architecture.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;This debug or test code is not removed from the codebase, and is then included in the software build and deployed to the production environment.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;p&gt;&amp;nbsp;- Remove all debug code before deploying or building the application. Ensure the configuration settings are not defined to enable debug mode.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- Implement all test code via a dedicated test framework, which can isolate the test case code from the rest of the application.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- Avoid implementing special "test code", "debugging-time" functionality, or "secret" interfaces or parameters in the application code itself.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- Define and implement a standard and automatic build / deployment process, using dedicated CI / CD tools, that can automatically configure the deployed application, exclude all temporary code, and include only intended application code.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Ruby&lt;/h3&gt;&lt;h4&gt;Internal Test Method&lt;/h4&gt;&lt;pre&gt;class AppClass
	def run_app
      # Run the app
    end
  	def test_app
      # Test and debug the app
    end
end&lt;/pre&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;Debug Configuration&lt;/h4&gt;&lt;pre&gt;&lt;configuration&gt;
	&lt;system.web&gt;
    	&lt;compilation debug="false" /&gt;
    &lt;/system.web&gt;
&lt;/configuration&gt;&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Main in Servlet&lt;/h4&gt;&lt;pre&gt;public class AppServlet extends HttpServlet { 
	protected void doGet(HttpServletRequest request, HttpServletResponse response) 
      				throws ServletException, IOException {
      	// handle request
    }
  
  	private static String MODE = "";
  	public static void main(String[] args) {
      	// initialize app for debugging and testing
      	MODE = "DEBUGGING";
    }
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1214</key><name>Unchecked_Return_Value</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;A program that does not check function return values could cause the application to enter an undefined state. This could lead to unexpected behavior and unintended consequences, including inconsistent data, system crashes or other error-based exploits.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;The application calls a system function, but does not receive or check the result of this funciton. These functions often return error codes in the result, or share other status codes with it's caller. The application simply ignores this result value, losing this vital information.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;p&gt;&amp;nbsp;- Always check the result of any called function that returns a value, and verify the result is an expected value.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- Ensure the calling function responds to all possible return values.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- Expect runtime errors and handle them gracefully. Explicitly define a mechanism for handling unexpected errors.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Unchecked Memory Allocation&lt;/h4&gt;&lt;pre&gt;buff = (char*) malloc(size);
strncpy(buff, source, size);&lt;/pre&gt;&lt;h4&gt;Safer Memory Allocation&lt;/h4&gt;&lt;pre&gt;buff = (char*) malloc(size+1);
if (buff==NULL) exit(1);

strncpy(buff, source, size);
buff[size] = '\0';&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1255</key><name>Heuristic_Unchecked_Return_Value</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;A program that does not check function return values could cause the application to enter an undefined state. This could lead to unexpected behavior and unintended consequences, including inconsistent data, system crashes or other error-based exploits.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;The application calls a system function, but does not receive or check the result of this funciton. These functions often return error codes in the result, or share other status codes with it's caller. The application simply ignores this result value, losing this vital information.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;p&gt;&amp;nbsp;- Always check the result of any called function that returns a value, and verify the result is an expected value.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- Ensure the calling function responds to all possible return values.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;- Expect runtime errors and handle them gracefully. Explicitly define a mechanism for handling unexpected errors.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Unchecked Memory Allocation&lt;/h4&gt;&lt;pre&gt;buff = (char*) malloc(size);
strncpy(buff, source, size);&lt;/pre&gt;&lt;h4&gt;Safer Memory Allocation&lt;/h4&gt;&lt;pre&gt;buff = (char*) malloc(size+1);
if (buff==NULL) exit(1);

strncpy(buff, source, size);
buff[size] = '\0';&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_288</key><name>Resource_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could open a backdoor enabling the attacker to connect directly to the application server, potentially leading to server takeover or other direct attacks.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application opens a network socket, for listening to incoming network connections. However, the application uses user input to define the socket, enabling an attacker to control it.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Don&amp;#8217;t allow a user to define parameters of network sockets.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
The application opens a network socket using a port number inputed by the user
      &lt;/h4&gt;&lt;pre&gt;

class ResourceInjection
{
            public void foo(TextBox textBox1)
        {
                        long address = Convert.ToInt32(textBox1.Text);
            IPEndPoint endpoint = new IPEndPoint(address, port);
            Socket socket = new Socket(endpoint.AddressFamily, SocketType.Stream, ProtocolType.Tcp);
            socket.Connect(endpoint);
        }
}



      &lt;/pre&gt;&lt;h4&gt;
The application opens a hard-coded port number and does receive it from the user
      &lt;/h4&gt;&lt;pre&gt;

class ResourceInjection
{
            public void foo(TextBox textBox1, long address)
        {
            IPEndPoint endpoint = new IPEndPoint(address, 15551);
            Socket socket = new Socket(endpoint.AddressFamily, SocketType.Stream, ProtocolType.Tcp);
            socket.Connect(endpoint);
        }
}



      &lt;/pre&gt;&lt;h3&gt;Python&lt;/h3&gt;&lt;h4&gt;The application opens a network socket using a host name inputed by the user&lt;/h4&gt;&lt;pre&gt;from sys import stdin
import socket
import sys

userInput = stdin.readline()

HOST = userInput 
PORT = 8888 # Arbitrary non-privileged port
	 
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print 'Socket created'
	 
#Bind socket to local host and port
try:
    s.bind((HOST, PORT))
except socket.error as msg:
    print 'Bind failed. Error Code : ' + str(msg[0]) + ' Message ' + msg[1]
    sys.exit()
print 'Socket bind complete'&lt;/pre&gt;&lt;h4&gt;The application opens a hard-coded host name and does receive it from the user&lt;/h4&gt;&lt;pre&gt;import socket
import sys

HOST = ''   # Symbolic name, meaning all available interfaces
PORT = 8888 # Arbitrary non-privileged port
	 
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print 'Socket created'
	 
#Bind socket to local host and port
try:
    s.bind((HOST, PORT))
except socket.error as msg:
    print 'Bind failed. Error Code : ' + str(msg[0]) + ' Message ' + msg[1]
    sys.exit()
print 'Socket bind complete'&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;The application opens a network socket using a port number inputed by the user&lt;/h4&gt;&lt;pre&gt;public class ResourceInjection {
	public static void main(String[] args) {
		Scanner userInputScanner = new Scanner(System.in);
		System.out.print("\nEnter port number: ");
		int portNumber = Integer.parseInt(userInputScanner.nextLine());
		try {
			ServerSocket serverSocket = new ServerSocket(portNumber);
		} catch (Exception e) {
			System.err.println("Caught Exception: " + e.getMessage());
		}

	}
}&lt;/pre&gt;&lt;h4&gt;The application opens a hard-coded port number according to the user input&lt;/h4&gt;&lt;pre&gt;public class ResourceInjectionFixed {
	public static void main(String[] args) {
		Scanner userInputScanner = new Scanner(System.in);
		System.out.print("\nEnter port name: ");
		String portName = userInputScanner.nextLine();
		int portNum;
		switch (portName) {
		case "ftps":
			portNum = 989;
			break;
		case "ftp":
			portNum = 20;
			break;
		case "smtp":
			portNum = 25;
			break;
		default:
			portNum = 80;
		}
		try {
			ServerSocket serverSocket = new ServerSocket(portNum);
		} catch (Exception e) {
			System.err.println("Caught Exception: " + e.getMessage());
		}
	}
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_301</key><name>Deprecated_CRT_Functions_VS2005</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Referencing deprecated modules can cause an application to be exposed to known vulnerabilities, that have been publicly reported and already fixed. A common attack technique is to scan applications for these known vulnerabilities, and then exploit the application through these deprecated versions.&lt;/div&gt;
&lt;div&gt;Note that the actual&amp;#160;risk involved depends on the specifics of any known vulnerabilities in older versions.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application references code elements that have been declared as deprecated. This could include functions, methods, properties, modules, or obsolete&amp;#160;library versions that are out of date. It is likely that the code that references the obsolete element was developed before it was declared as obsolete, and in the meantime the referenced code was updated.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always prefer to use the most updated versions of libraries, packages, and other dependancies.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not use or reference any method, function, property, or other element that has been declared deprecated.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Using Deprecated Methods for Security Checks&lt;/h4&gt;&lt;pre&gt;
private void checkPermissions(InetAddress address) { 

    SecurityManager secManager = System.getSecurityManager();
    
    if (secManager != null) {
        secManager.checkMulticast(address, 0)
    }

}&lt;/pre&gt;&lt;h4&gt;A Replacement Security Check&lt;/h4&gt;&lt;pre&gt;
private void checkPermissions(InetAddress address) { 

    SecurityManager secManager = System.getSecurityManager();
    
    if (secManager != null) {
        SocketPermission permission = new SocketPermission(address.getHostAddress(), "accept,connect");
        
        secManager.checkPermission(permission)
    }

}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_326</key><name>Memory_Leak</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Failure to Release Memory Before Removing Last Reference ('Memory Leak')&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;401&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_401_Description" id="oc_401_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software does not sufficiently track and release allocated
memory after it has been used, which slowly consumes remaining
memory.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;This is often triggered by improper handling of malformed data or
unexpectedly interrupted sessions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Terminology Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Terminology Notes&lt;/div&gt;&lt;div name="oc_401_Terminology Notes" id="oc_401_Terminology Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;"memory leak" has sometimes been used to describe other kinds of issues,
e.g. for information leaks in which the contents of memory are inadvertently
leaked (CVE-2003-0400 is one such example of this terminology
conflict).&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_401_Time of Introduction" id="oc_401_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_401_Applicable Platforms" id="oc_401_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Modes of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Modes of Introduction&lt;/div&gt;&lt;div name="oc_401_Modes of Introduction" id="oc_401_Modes of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Memory leaks have two common and sometimes overlapping causes:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;&lt;p&gt;Error conditions and other exceptional circumstances&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Confusion over which part of the program is responsible for freeing
the memory&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_401_Common Consequences" id="oc_401_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Most memory leaks result in general software reliability problems, but
if an attacker can intentionally trigger a memory leak, the attacker
might be able to launch a denial of service attack (by crashing or
hanging the program) or take advantage of other unexpected program
behavior resulting from a low memory condition.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_401_Likelihood of Exploit" id="oc_401_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Medium&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_401_Demonstrative Examples" id="oc_401_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following C function leaks a block of allocated memory if the
call to read() fails to return the expected number of bytes:&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char* getBlock(int fd) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char* buf = (char*) malloc(BLOCK_SIZE);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (!buf) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;return NULL;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (read(fd, buf, BLOCK_SIZE) != BLOCK_SIZE) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return NULL;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return buf;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;Here the problem is that every time a connection is made, more
memory is allocated. So if one just opened up more and more connections,
eventually the machine would run out of memory.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;bar connection(){&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;foo = malloc(1024);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return foo;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;endConnection(bar foo) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;free(foo);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int main() {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;while(1) //thread 1&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;//On a connection&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;foo=connection(); //thread 2&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;//When the connection ends&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;endConnection(foo)&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_401_Observed Examples" id="oc_401_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3119" target="_blank"&gt;CVE-2005-3119&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Memory leak because function does not free() an
element of a data structure.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0427" target="_blank"&gt;CVE-2004-0427&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Memory leak when counter variable is not
decremented.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0574" target="_blank"&gt;CVE-2002-0574&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Memory leak when counter variable is not
decremented.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3181" target="_blank"&gt;CVE-2005-3181&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Kernel uses wrong function to release a data
structure, preventing data from being properly tracked by other
code.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0222" target="_blank"&gt;CVE-2004-0222&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Memory leak via unknown manipulations as part of
protocol test suite.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0136" target="_blank"&gt;CVE-2001-0136&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Memory leak via a series of the same
command.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_401_Potential Mitigations" id="oc_401_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Pre-design: Use a language or compiler that performs automatic bounds
checking.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Use an abstraction library to abstract away risky APIs. Not a complete
solution.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Pre-design through Build: The Boehm-Demers-Weiser Garbage Collector or
valgrind can be used to detect leaks in code. This is not a complete
solution as it is not 100% effective.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_401_Relationships" id="oc_401_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;399&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=399" target="_blank"&gt;Resource Management Errors&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;633&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=633" target="_blank"&gt;Weaknesses that Affect Memory&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;730&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=730" target="_blank"&gt;OWASP Top Ten 2004 Category A9 - Denial of Service&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;772&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=772" target="_blank"&gt;Missing Release of Resource after Effective Lifetime&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;390&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=390" target="_blank"&gt;Detection of Error Condition Without Action&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_401_Relationship Notes" id="oc_401_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;This is often a resultant weakness due to improper handling of malformed
data or early termination of sessions.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Affected Resources"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Affected Resources&lt;/div&gt;&lt;div name="oc_401_Affected Resources" id="oc_401_Affected Resources" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Functional Areas"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Functional Areas&lt;/div&gt;&lt;div name="oc_401_Functional Areas" id="oc_401_Functional Areas" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory management&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_401_Taxonomy Mappings" id="oc_401_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Memory leak&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Memory Leak&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Failure to deallocate data&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A9&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Denial of Service&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_401_White Box Definitions" id="oc_401_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. start statement that allocates dynamically allocated memory
resource&lt;/p&gt;
&lt;p&gt;2. end statement that loses identity of the dynamically allocated
memory resource creating situation where dynamically allocated memory
resource is never relinquished&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Where "loses" is defined through the following scenarios:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. identity of the dynamic allocated memory resource never
obtained&lt;/p&gt;
&lt;p&gt;2. the statement assigns another value to the data element that stored
the identity of the dynamically allocated memory resource and there are
no aliases of that data element&lt;/p&gt;
&lt;p&gt;3. identity of the dynamic allocated memory resource obtained but
never passed on to function for memory resource release&lt;/p&gt;
&lt;p&gt;4. the data element that stored the identity of the dynamically
allocated resource has reached the end of its scope at the statement and
there are no aliases of that data element&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_401_References" id="oc_401_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;J. Whittaker and
H. Thompson. "How to Break Software Security". Addison Wesley. 2003. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_401_Content History" id="oc_401_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-15&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Veracode&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Suggested OWASP Top Ten 2004
mapping&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Relationships, Other Notes, References, Relationship Notes,
Taxonomy Mappings, Terminology Notes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Other Notes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Name&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-17&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Improved the White Box Definition&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated White Box Definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Modes of Introduction,
Other Notes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Memory
Leak&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Failure to Release Memory
Before Removing Last Reference (aka 'Memory Leak')&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4016</key><name>Exposure_of_System_Data_to_Unauthorized_Control_Sphere</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;System data can provide attackers with valuable insights on systems and services they are targeting - any type of system data, from service version to operating system fingerprints, can assist&amp;nbsp;attackers to hone their attack, correlate data with known vulnerabilities or focus efforts&amp;nbsp;on developing new attacks against specific technologies.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;System data is read and subsequently exposed where it might be read by untrusted entities.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Consider the implications of exposure of the specified input,&amp;nbsp;and expected level of access to the specified output. If not required, consider removing this code, or modifying exposed information to exclude potentially sensitive system data.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Leaking Environment Variables in JSP Web-Page&lt;/h4&gt;&lt;pre&gt;  String envVarValue = System.getenv(envVar);
  if (envVarValue == null) {
      out.println("Environment variable is not defined:"); 
      out.println(System.getenv());
  } else {
      //[..]
  };&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3898</key><name>Download_of_Code_Without_Integrity_Check</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;At best, code that fails an integrity check may be damaged, altered or may not match the intended code that it originally was, resulting in unexpected behavior. At worst, attackers who are able to compromise the loaded code, such as locally or via a Man-in-the-Middle attack, may alter the loaded code either at storage or in transit, which may result in malicious code execution and significant system compromise.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Integrity signatures, as derived from any data set, can allow a recepient to identify that the received data set is the one they intended to obtain. For externally loaded code this is particularly important, as such code can be compromised via access to local storage, Man-in-the-Middle attacks and more.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Perform strict integrity checks to ensure code obtained from external sources&amp;nbsp;is verified, and has a known and trusted signature.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Calculate Hash of File And Compare to Trusted Hash&lt;/h4&gt;&lt;pre&gt;byte[] dataBytes = new byte[1024];
MessageDigest md = MessageDigest.getInstance("SHA-256");
int nread = 0;

//Create byte hash from file
FileInputStream fis = new FileInputStream(file);
while ((nread = fis.read(dataBytes)) != -1) {
	md.update(dataBytes, 0, nread);
};
fis.close();

//Convert bytes to hex
byte[] mdbytes = md.digest();
StringBuffer sb = new StringBuffer();
for (int i = 0; i &lt; mdbytes.length; i++) {
	sb.append(Integer.toString((mdbytes[i] &amp; 0xff) + 0x100, 16).substring(1));
}
String sha256ofFile = sb.toString();

if (sha256ofFile.equals(TRUSTED_SHA256_OF_FILE)) {
	// Handle trusted files here
}
else {
	// Handle untrusted files here
}&lt;/pre&gt;&lt;h4&gt;Class Function Loaded From Untested External File&lt;/h4&gt;&lt;pre&gt;private void LoadClass (File file) {
	URL url = file.toURI().toURL();
	URL[] urls = new URL[]{url};
	ClassLoader cl = new URLClassLoader(urls);
	Class cls = cl.loadClass("com.packagename.classname");
	Constructor cons = cls.getConstructor();
	Object simpleClassObj = cons.newInstance();
	Method method = cls.getMethod("functionname");
	method.invoke(simpleClassObj);
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4017</key><name>TOCTOU</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;At best, a Race Condition may&amp;nbsp;cause errors in accuracy, overidden values or unexpected behavior that may result in denial-of-service. At worst, it may allow attackers to retrieve data or bypass security processes by replaying a controllable Race Condition until it plays out in their favor.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Race Conditions occur when a public, single instance of a resource is used by multiple concurrent logical processes. If the these logical processes attempt to retrieve and update the resource without a timely management system, such as a lock, a Race Condition will occur.&lt;/p&gt;
&lt;p&gt;An example for when a Race Condition occurs is a resource that may return a certain value to a process for further editing, and then updated by a second&amp;nbsp;process, resulting in the original process' data no longer being valid. Once the original process edits and updates the incorrect value back into the resource, the second process' update has been overwritten and lost.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;p&gt;When sharing resources between concurrent processes across the application ensure that these resources are&amp;nbsp;either thread-safe, or implement a locking mechanism to ensure expected concurrent activity.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Different Threads Increment and Decrement The Same Counter Repeatedly, Resulting in a Race Condition&lt;/h4&gt;&lt;pre&gt;	public static int counter = 0;	
	public static void start() throws InterruptedException { 
		incrementCounter ic;
		decrementCounter dc;
		while(counter == 0) {
			counter = 0;
			ic = new incrementCounter();
			dc = new decrementCounter();
			ic.start();
			dc.start();
			ic.join();
			dc.join();
		}
		System.out.println(counter); //Will stop and return either -1 or 1 due to race condition over counter
	}
	
	public static class incrementCounter extends Thread {
	    public void run() {
    		counter++;
	    }
	}
	
	public static class decrementCounter extends Thread {
	    public void run() {
    		counter--;
	    }
	}&lt;/pre&gt;&lt;h4&gt;Different Threads Increment and Decrement The Same Thread-Safe Counter Repeatedly, Never Resulting in a Race Condition&lt;/h4&gt;&lt;pre&gt;	public static int counter = 0;
	public static Object lock = new Object();
	
	public static void start() throws InterruptedException {
		incrementCounter ic;
		decrementCounter dc;
		while(counter == 0) { // because of proper locking, this condition is never false
			counter = 0;
			ic = new incrementCounter();
			dc = new decrementCounter();
			ic.start();
			dc.start();
			ic.join();
			dc.join();
		}
		System.out.println(counter); // Never reached
	}
	
	public static class incrementCounter extends Thread {
	    public void run() {
	    	synchronized (lock) {
	    		counter++;
	    	}
	    }
	}
	
	public static class decrementCounter extends Thread {
	    public void run() {
	    	synchronized (lock) {
	    		counter--;
	    	}
	    }
	}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4129</key><name>Buffer_Overflow_IndexFromInput</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1202</key><name>Buffer_Overflow_LowBound</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_216</key><name>Buffer_Overflow_Loops</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1201</key><name>Buffer_Overflow_LongString</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1204</key><name>Buffer_Overflow_OutOfBound</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_223</key><name>Off_by_One_Error_in_Loops</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Off-by-one Error&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;193&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_193_Description" id="oc_193_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;A product calculates or uses an incorrect maximum or minimum
value that is 1 more, or 1 less, than the correct value.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_193_Alternate Terms" id="oc_193_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;off-by-five:&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;p&gt;An "off-by-five" error was reported for sudo in 2002 (CVE-2002-0184),
but that is more like a "length calculation" error.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_193_Time of Introduction" id="oc_193_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_193_Applicable Platforms" id="oc_193_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_193_Demonstrative Examples" id="oc_193_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code allocates memory for a maximum number of widgets.
It then gets a user-specified number of widgets, making sure that the user
does not request too many. It then initializes the elements of the array
using InitializeWidget(). Because the number of widgets can vary for each
request, the code inserts a NULL pointer to signify the location of the last
widget.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int i;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;unsigned int numWidgets;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Widget **WidgetList;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;numWidgets = GetUntrustedSizeValue();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if ((numWidgets == 0) || (numWidgets &amp;gt; MAX_NUM_WIDGETS))
{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ExitError("Incorrect number of widgets requested!");&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;WidgetList = (Widget **)malloc(numWidgets * sizeof(Widget
*));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;printf("WidgetList ptr=%p\n", WidgetList);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;numWidgets; i++) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;WidgetList[i] = InitializeWidget();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;WidgetList[numWidgets] = NULL;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;showWidgets(WidgetList);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, this code contains an off-by-one calculation error. It
allocates exactly enough space to contain the specified number of
widgets, but it does not include the space for the NULL pointer. As a
result, the allocated buffer is smaller than it is supposed to be
(CWE-131). So if the user ever requests MAX_NUM_WIDGETS, there is an
off-by-one buffer overflow when the NULL is assigned. Depending on the
environment and compilation settings, this could cause memory
corruption.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following C/C++ example demonstrates the Off-by-one error in the
main method of a pattern matching utility that looks for a specific pattern
within a specific file. The main method uses the string copy method,
strncpy, to copy the command line user input file name and pattern to the
Filename and Pattern character arrays respectively. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int main(int argc, char **argv)&lt;/div&gt;&lt;div style="font-size:90%;"&gt;{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char Filename[256];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char Pattern[32];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* Validate number of parameters and ensure valid content
*/&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy filename parameter to variable, may cause
off-by-one overflow */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(Filename, argv[1], sizeof(Filename));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy pattern parameter to variable, may cause off-by-one
overflow */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(Pattern, argv[2], sizeof(Pattern));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("Searching file: %s for the pattern: %s\n", Filename,
Pattern);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;Scan_File(Filename, Pattern);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the calls to strncpy use the sizeof method call for the size
parameter that does not take into account that the strncpy will add a
null terminator to each character array. Therefore if a user enters a
filename or pattern that are the same size as (or larger than) their
respective character arrays a null terminator will be added beyond the
end of the buffer for the character arrays creating an off-by-one buffer
overflow. In addition to creating a buffer overflow that may cause a
memory address to be overwritten, if the character arrays are output to
the user through the printf method the memory addresses at the overflow
location may be output to the user.&lt;/p&gt;&lt;p&gt;To fix this problem, be sure to subtract 1 from the sizeof() call to
allow room for the null byte to be added.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy filename parameter to variable, no off-by-one overflow
*/&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncpy(Filename, argv[2], sizeof(Filename)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy pattern parameter to variable, no off-by-one overflow
*/&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncpy(Pattern, argv[3], sizeof(Pattern)-1);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;Similarly, this example uses the strncat and snprintf functions
incorrectly, failing to account for the null character function will
add.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char lastname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char firstname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char name[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char fullname[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, firstname, sizeof(name));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, lastname, sizeof(name));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;snprintf(fullname, sizeof(fullname), "%s", name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;By leaving a free byte at the end of the buffers for a null character
to be added, the off-by-one weakness is avoided.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char lastname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char firstname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char name[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char fullname[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, firstname, sizeof(name)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, lastname, sizeof(name)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;snprintf(fullname, sizeof(fullname)-1), "%s", name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 4&lt;/p&gt;&lt;p&gt;The Off-by-one error can also be manifested when reading characters
of a character array using a for loop that has the incorrect size as a
continuation condition and attempts to read beyond the end of the buffer for
the character array as shown in the following example. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#define PATH_SIZE 60&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char filename[PATH_SIZE];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;=PATH_SIZE; i++) {&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char c = getc();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (c == 'EOF') {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;filename[i] = '\0';&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;filename[i] = getc();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;PATH_SIZE; i++) {&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 5&lt;/p&gt;&lt;p&gt;As another example the Off-by-one error can occur when using the
sprintf library function to copy a string variable to a formatted string
variable and the original string variable comes from an untrusted source. As
in the following example where a local function, setFilename is used to
store the value of a filename to a database but first uses sprintf to format
the filename. The setFilename function includes an input parameter with the
name of the file that is used as the copy source in the sprintf function.
The sprintf function will copy the file name to a char array of size 20 and
specifies the format of the new variable as 16 characters followed by the
file extension .dat.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int setFilename(char *filename) { &lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char name[20]; &lt;/div&gt;
&lt;div style="font-size:90%;"&gt;sprintf(name, "%16s.dat", filename);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int success = saveFormattedFilenameToDB(name);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt; return success; &lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;} &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However this will cause an Off-by-one error if the original filename
is exactly 16 characters or larger because the format of 16 characters
with the file extension is exactly 20 characters and does not take into
account the required null terminator that will be placed at the end of
the string.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_193_Observed Examples" id="oc_193_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0252" target="_blank"&gt;CVE-2003-0252&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1391" target="_blank"&gt;CVE-2001-1391&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0083" target="_blank"&gt;CVE-2002-0083&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0653" target="_blank"&gt;CVE-2002-0653&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0844" target="_blank"&gt;CVE-2002-0844&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1568" target="_blank"&gt;CVE-1999-1568&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0346" target="_blank"&gt;CVE-2004-0346&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0005" target="_blank"&gt;CVE-2004-0005&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0356" target="_blank"&gt;CVE-2003-0356&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1496" target="_blank"&gt;CVE-2001-1496&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0342" target="_blank"&gt;CVE-2004-0342&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;This is an interesting example that might not be
an off-by-one.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0609" target="_blank"&gt;CVE-2001-0609&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;An off-by-one enables a terminating null to be
overwritten, which causes 2 strings to be merged and enable a format
string.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1745" target="_blank"&gt;CVE-2002-1745&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error allows source code disclosure of
files with 4 letter extensions that match an accepted 3-letter
extension.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1816" target="_blank"&gt;CVE-2002-1816&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one buffer
overflow.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1721" target="_blank"&gt;CVE-2002-1721&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error causes an snprintf call to
overwrite a critical internal variable with a null
value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0466" target="_blank"&gt;CVE-2003-0466&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error in function used in many products
leads to a buffer overflow during pathname management, as demonstrated using
multiple commands in an FTP server.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0625" target="_blank"&gt;CVE-2003-0625&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error allows read of sensitive memory
via a malformed request.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4574" target="_blank"&gt;CVE-2006-4574&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: security monitoring product has an
off-by-one error that leads to unexpected length values, triggering an
assertion.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_193_Potential Mitigations" id="oc_193_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt; When copying character arrays or using character manipulation
methods, the correct size parameter must be used to account for the null
terminator that needs to be added at the end of the array. Some examples
of functions susceptible to this weakness in C include strcpy(),
strncpy(), strcat(), strncat(), printf(), sprintf(), scanf() and
sscanf(). &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_193_Relationships" id="oc_193_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;682&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=682" target="_blank"&gt;Incorrect Calculation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;741&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=741" target="_blank"&gt;CERT C Secure Coding Section 07 - Characters and Strings (STR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;170&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=170" target="_blank"&gt;Improper Null Termination&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;617&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=617" target="_blank"&gt;Reachable Assertion&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_193_Relationship Notes" id="oc_193_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;This is not always a buffer overflow. For example, an off-by-one error
could be a factor in a partial comparison, a read from the wrong memory
location, an incorrect conditional, etc.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Research Gaps"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Research Gaps&lt;/div&gt;&lt;div name="oc_193_Research Gaps" id="oc_193_Research Gaps" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Under-studied. It requires careful code analysis or black box testing,
where inputs of excessive length might not cause an error. Off-by-ones are
likely triggered by extensive fuzzing, with the attendant diagnostic
problems.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_193_Taxonomy Mappings" id="oc_193_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one Error&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR31-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Guarantee that storage for strings has sufficient space for
character data and the null terminator&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_193_References" id="oc_193_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Halvar Flake. "Third Generation Exploits". presentation at Black Hat Europe
2001. &amp;lt;&lt;a href="http://www.blackhat.com/presentations/bh-europe-01/halvar-flake/bh-europe-01-halvarflake.ppt" target="_blank"&gt;http://www.blackhat.com/presentations/bh-europe-01/halvar-flake/bh-europe-01-halvarflake.ppt&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Steve Christey. "Off-by-one errors: a brief explanation". Secprog and SC-L mailing list
posts. 2004-05-05. &amp;lt;&lt;a href="http://marc.theaimsgroup.com/?l=secprog&amp;amp;m=108379742110553&amp;amp;w=2" target="_blank"&gt;http://marc.theaimsgroup.com/?l=secprog&amp;amp;m=108379742110553&amp;amp;w=2&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;klog. "The Frame Pointer Overwrite". Phrack Issue 55, Chapter 8. 1999-09-09. &amp;lt;&lt;a href="http://kaizo.org/mirrors/phrack/phrack55/P55-08" target="_blank"&gt;http://kaizo.org/mirrors/phrack/phrack55/P55-08&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;G. Hoglund and
G. McGraw. "Exploiting Software: How to Break Code (The buffer overflow
chapter)". Addison-Wesley. February 2004. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_193_Content History" id="oc_193_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Common Consequences,
Relationships, Observed Example, Relationship Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples,
Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4019</key><name>Information_Exposure_Through_Comments</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Information Leak Through Comments&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;615&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Variant)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_615_Description" id="oc_615_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;While adding general comments is very useful, some programmers
tend to leave important data, such as: filenames related to the web application,
old links or links which were not meant to be browsed by users, old code
fragments, etc.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;An attacker who finds these comments can map the application's structure
and files, expose hidden parts of the site, and study the fragments of code
to reverse engineer the application, which may help develop further attacks
against the site.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_615_Time of Introduction" id="oc_615_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_615_Demonstrative Examples" id="oc_615_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following comment, embedded in a JSP, will be displayed in the
resulting HTML output.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example Languages: &lt;/span&gt;HTML and JSP&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;&amp;lt;!-- FIXME: calling this with more than 30 args kills the
JDBC server --&amp;gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_615_Observed Examples" id="oc_615_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6197" target="_blank"&gt;CVE-2007-6197&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Version numbers and internal hostnames leaked in
HTML comments.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4072" target="_blank"&gt;CVE-2007-4072&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;CMS places full pathname of server in HTML
comment.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2431" target="_blank"&gt;CVE-2009-2431&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;blog software leaks real username in HTML
comment.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_615_Potential Mitigations" id="oc_615_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Remove comments which have sensitive information about the
design/implementation of the application. Some of the comments may be
exposed to the user and affect the security posture of the
application.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_615_Relationships" id="oc_615_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;540&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=540" target="_blank"&gt;Information Leak Through Source Code&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_615_Content History" id="oc_615_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Anonymous Tool Vendor (under NDA)&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Sean Eidemiller&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated demonstrative
examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Observed Examples,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1216</key><name>Divide_By_Zero</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;When a program divides a number by zero, an exception will be raised. If this exception is not handled by the application, unexpected results may occur, including crashing the application. This can be considered a DoS (Denial of Service) attack, if an external user has control of the value of the denominator or can cause this error to occur.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;The program receives an unexpected value, and uses it for division without filtering, validation, or verifying that the value is not zero. The application&amp;nbsp;does not explicitly handle this error or prevent division by zero from occuring.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Before dividing by an unknown value, validate the number and explicitly ensure it does not evaluate to zero.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Validate all untrusted input from all sources, in particular verifying that it is not zero before dividing with it.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Verify output of methods, calculations, dictionary lookups, and so on, and ensure it is not zero before dividing with the result.&amp;nbsp;&lt;/li&gt;
&lt;li&gt;Ensure divide-by-zero errors are caught and handled appropriately.&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Divide by Zero&lt;/h4&gt;&lt;pre&gt;public float getAverage(HttpServletRequest req) {
	int total = Integer.parseInt(req.getParameter("total"));
  	int count = Integer.parseInt(req.getParameter("count")); 
  
  	return total / count;
}&lt;/pre&gt;&lt;h4&gt;Checked Division&lt;/h4&gt;&lt;pre&gt;public float getAverage(HttpServletRequest req) {
	int total = Integer.parseInt(req.getParameter("total"));
  	int count = Integer.parseInt(req.getParameter("count")); 
  
  	if (count &gt; 0)
  		return total / count;
  	else 
      	return 0;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1851</key><name>R14_09_Not_Compound_If_Or_Else</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 14-9&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 14-9&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11039&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Every &amp;#39;if&amp;#39; statement shall have a compound { ... } body. Every &amp;#39;else statement
            shall have a compound body or an &amp;#39;if&amp;#39; statement as its body.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1391</key><name>Exposure_of_Resource_to_Wrong_Sphere</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;If a&amp;#160;class exposes an internal variable as a public field, without constraining access, the variable can be modified in unexpected ways, allowing an external consumer of the class to set arbitrary, unallowed values to the field. This could cause&amp;#160;to unexpected behavior if the class (or other consumers) make assumptions about the value of that variable. This could even lead to additional vulnerabilities, depending on how this value is used.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;One of the application's classes exposes an internal variable as a public field, without constraining access, by exposing it as a property. Alternatively, public fields can be exposed without allowing their values to be externally modified.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Avoid exposing internal variables and specific implementation as public fields.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer exposing data as properties, and implement data validation and control in the property code as needed.&amp;#160;&lt;/li&gt;
&lt;li&gt;When exposing&amp;#160;a public field, constrain the value to be readonly via use of &lt;code&gt;final&lt;/code&gt; modifier.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Exposing Public Field&lt;/h4&gt;&lt;pre&gt;public class MyProduct {
    // This value can be modified by any external code
    public float price; 

    public MyProduct()  {
        this.price = ReadPriceFromDB("MyProduct");
    }
}&lt;/pre&gt;&lt;h4&gt;Exposing Read-Only Field&lt;/h4&gt;&lt;pre&gt;public class MyProduct {
    // This value can be read by external code, 
    //   but can only be modified by the constructor
    public final float price; 
    
    public MyProduct()  {
        this.price = ReadPriceFromDB("MyProduct");
    }
}&lt;/pre&gt;&lt;h4&gt;Wrapping with Properties&lt;/h4&gt;&lt;pre&gt;public class MyProduct {
    // This value can only be accessed by the class itself
    private float price; 
    
    // External code can only read the value by calling the accessor property
    public float getPrice() { 
        return price;
    }
    
    public MyProduct()  {
        this.price = ReadPriceFromDB("MyProduct");
    }
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_305</key><name>Improper_Exception_Handling</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;An attacker could maliciously cause an exception that could crash the application, potentially resulting in a denial of service (DoS).&lt;/li&gt;
&lt;li&gt;Inadvertent application crashes may occur.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application performs some operation, such as database or file access, that could throw an exception. Since the application is not designed to properly handle the exception, the application could crash.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Any method that could cause an exception should be wrapped in a try-catch block that:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Explicitly handles expected exceptions&lt;/li&gt;
&lt;li&gt;Includes a default solution to explicitly handle unexpected exceptions&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
Always catch exceptions explicitly.

      &lt;/h4&gt;&lt;pre&gt;


try
{
// Database access or other potentially dangerous function
}
catch (SqlException ex)
{
// Handle exception
}
catch (Exception ex)
{
// Default handler for unexpected exceptions
}



      &lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;
Always catch exceptions explicitly.

      &lt;/h4&gt;&lt;pre&gt;


try
{
// Database access or other potentially dangerous function
}
catch (SQLException ex)
{
// Handle exception
}
catch (Exception ex)
{
// Default handler for unexpected exceptions
}


      &lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_323</key><name>Hardcoded_password_in_Connection_String</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Hardcoded database passwords expose the application to password leakage, and the database to unauthorized access. If an attacker gains access to the source code (or can decompile the application binaries), she will be able to steal the embedded passwords, and use them to directly access the database. This would enable the attacker to steal secret information, modify sensitive records, or delete important data.&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;&lt;/div&gt;
&lt;div&gt;In addition, the password cannot be easily changed when required. In the eventual situation wherein it is a necessity to update the password, a new version of the application would need to be built and deployed to production systems.&amp;nbsp;&lt;/div&gt;


&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application has the database password hardcoded in the source code files, and uses this password in a connection string to the database or other server. This password is visible to anyone with access to source code, and cannot be changed without rebuilding or recompiling the application. Even after compilation or deployment, the password and connection string are still present in the binary program files or production environment.&lt;/div&gt;


&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;&amp;nbsp;- Never hardcode sensitive data, such as database passwords.&amp;nbsp;&lt;/div&gt;
&lt;div&gt;&amp;nbsp;- Prefer to avoid requiring an explicit database password at all, instead using OS-integrated system authentication.&lt;/div&gt;
&lt;div&gt;&amp;nbsp;- Alternatively, store the password in an encrypted configuration file, and implement a mechanism enabling administrators to change the password. Ensure the file permissions are configured to restrict access to administrators only.&amp;nbsp;&lt;/div&gt;

&lt;p&gt;&amp;nbsp;- In particular, if the database supports Integrated Authentication or Kerberos, prefer to use this over explicit credentials for the SQL user. If the driver supports it, configure the connection URL with "Integrated Security=SSPI;" or "Trusted_Connection=true;", as appropriate.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;- Alternatively, define the database password and connection parameters in an external configuration file. Protect this configuration file with appropriate permissions and encryption, as available.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Hard-Coded Database Password&lt;/h4&gt;&lt;pre&gt;sql::mysql::MySQL_Driver *m_driver;
sql::mysql::Connection *m_conn;

void openConnection() 
{
  	m_driver = get_driver_instance();
  	m_conn = m_driver-&gt;connect(CONN_STRING, "appUserId", "mypass");
    m_conn-&gt;setSchema(DB_NAME);
}&lt;/pre&gt;&lt;h4&gt;Read Credentials from Encrypted Configuration&lt;/h4&gt;&lt;pre&gt;sql::mysql::MySQL_Driver *m_driver;
sql::mysql::Connection *m_conn;

void openConnection() 
{
  	std::string username = readFromConfig("USERNAME"); 	
  	std::string password = decrypt(readFromConfig("PASSWORD"));
  
  	m_driver = get_driver_instance();
  	m_conn = m_driver-&gt;connect(CONN_STRING, username, password);
    m_conn-&gt;setSchema(DB_NAME);
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1413</key><name>Buffer_Overflow_boundcpy_WrongSizeParam</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_215</key><name>Buffer_Overflow_fgets</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_316</key><name>Dangerous_Functions</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Use of dangerous functions may expose varying risks associated with each particular function, with potential impact of improper usage of these functions varying significantly. The presence of such functions indicates a flaw in code maintenance policies and adherence to secure coding practices, in a way that has allowed introducing known dangerous code into the application.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;A dangerous function has been identified within the code. Functions are often deemed dangerous to use for numerous reasons, as there are different sets of vulnerabilities associated with usage of such functions. For example, some string copy and concatenation functions are vulnerable to Buffer Overflow, Memory Disclosure, Denial of Service and more. Use of these functions is not recommended.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Deploy a secure and recommended alternative to any functions that were identified as dangerous.
&lt;ul&gt;
&lt;li&gt;If no secure alternative is found, conduct further researching and testing to identify whether current usage successfully sanitizes and verifies values, and thus successfully avoids the use-cases for whom the function is indeed dangerous&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Conduct a periodical review of methods that are in use, to ensure that all external libraries and built-in functions are up-to-date and whose use has not been excluded from best secure coding practices.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Buffer Overflow in gets()&lt;/h4&gt;&lt;pre&gt;int main()
{	
	char buf[10];

	printf("Please enter your name: ");
	gets(buf); // veryveryverylongname
	if (buf == ACCEPTED_NAME)
	{
		// Do something
	}
	return 0;
}&lt;/pre&gt;&lt;h4&gt;Safe reading from user&lt;/h4&gt;&lt;pre&gt;int main()
{
	char buf[10];
	
	printf("Please enter your name: ");
	fgets(buf, sizeof(buf), stdin); //setting the amount of bytes to read 
	if (buf == ACCEPTED_NAME)
	{
		//Do something
	}
	return 0;
}&lt;/pre&gt;&lt;h4&gt;Unsafe function for string copy&lt;/h4&gt;&lt;pre&gt;int main(int argc, char* argv[])
{
	char buf[10];
	strcpy(buf, argv[1]); // overflow occurs when len(argv[1]) &gt; 10 bytes
			
	return 0;
}&lt;/pre&gt;&lt;h4&gt;Safe string copy&lt;/h4&gt;&lt;pre&gt;int main(int argc, char* argv[])
{
	char buf[10];
	strncpy(buf, argv[1], sizeof(buf));
	buf[9]= '\0'; //strncpy doesn't NULL terminates
	
	return 0;
}&lt;/pre&gt;&lt;h4&gt;Unsafe format string&lt;/h4&gt;&lt;pre&gt;int main(int argc, char* argv[])
{
	printf(argv[1]); // If argv[1] contains a format token, such as %s,%x or %d, will cause an access violation
	return 0;
}&lt;/pre&gt;&lt;h4&gt;Safe format string&lt;/h4&gt;&lt;pre&gt;int main(int argc, char* argv[])
{
	printf("%s", argv[1]); // Second parameter is not a formattable string
	
	return 0;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_211</key><name>Buffer_Overflow_boundedcpy</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Allowing tainted inputs to set the size of how many bytes to copy from source to destination may cause memory corruption, unexpected behavior, instability and data leakage. In some cases, such as when additional and specific areas of memory are also controlled by user input, it may result in code execution.&amp;nbsp;&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Should the size of the amount of bytes to copy from source to destination be greater than the size of the destination, an overflow will occur, and memory beyond the intended buffer will get overwritten. Since this size value is derived from user input, the user may provide an invalid and dangerous buffer size.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Do not trust memory allocation sizes provided by the user; derive them from the copied values instead.&lt;/li&gt;
&lt;li&gt;If memory allocation by a provided value is absolutely required, restrict this size to safe values only. Specifically ensure that this value does not exceed the destination buffer's size.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Size Parameter is Influenced by User Input&lt;/h4&gt;&lt;pre&gt;char dest_buf[10];
memset(dest_buf, '\0', sizeof(dest_buf));
strncpy(dest_buf, src_buf, size); //Assuming size is provided by user input&lt;/pre&gt;&lt;h4&gt;Validating Destination Buffer Length&lt;/h4&gt;&lt;pre&gt;char dest_buf[10];
memset(dest_buf, '\0', sizeof(dest_buf));
if (size &lt; sizeof(dest_buf) &amp;&amp; sizeof(src_buf) &gt;= size) //Assuming size is provided by user input
{	
	strncpy(dest_buf, src_buf, size); 
}
else
{
	//...
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_212</key><name>Buffer_Overflow_boundedcpy2</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Assigning a source buffer whose data-type is bigger than the destination buffer's may result in a buffer overflow.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Copying data from a source type, which assigns more space in memory, to a destination data-type with less space in memory. This will result in a buffer overflow, as more bytes are copied from the source, overrunning the boundaries of the destination buffer.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;p&gt;Make sure that the size of the source variable's data-type is less or equal in size to the destination variable's data-type.&lt;/p&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Assigning a Large "Double" Data-Type to a Smaller "Float" Data-Type&lt;/h4&gt;&lt;pre&gt;typedef struct Person{
	char name[40];
	double age;
} Person;

typedef struct Person1{
	char name[5];
	float age;
} Person1;

int main()
{	
	Person p1; 
	p1 ={ "first_person_ever", 365456.123 };
	Person1 p2;
	p2 = { "Name", 123 };
	memcpy(&amp;p2.age, &amp;p1.age, sizeof(p1.age)); //copy a double data type to a float data type

    return 0;
}&lt;/pre&gt;&lt;h4&gt;Assigning a Large "Float" Data-Type to a Smaller "Char" Data-Type&lt;/h4&gt;&lt;pre&gt;typedef struct Person{
	char name[40];
	float age;
} Person;

typedef struct Person1{
	char name[5];
	char age;
} Person1;

int main()
{	
	Person p1; 
	p1 ={ "first_person_ever", 365456 };
	Person1 p2;
	p2 = { "Name", 123 };
	memcpy(&amp;p2.age, &amp;p1.age, sizeof(p1.age)); //copy a flaot data type to a char data type

    return 0;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1815</key><name>R03_04_Not_Explained_Pragma_Usage</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 3-4&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 3-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11003&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            When the #pragma preprocessing directive is used, it should be explained by a
            comment.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1884</key><name>R00_01_05_Find_Unused_Typedefs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 0-1-5&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 0-1-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10776&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Unused type definitions shall not be in a project &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_225</key><name>String_Termination_cin</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Improper Null Termination&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;170&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_170_Description" id="oc_170_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software does not terminate or incorrectly terminates a
string or array with a null character or equivalent
terminator.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Null termination errors frequently occur in two different ways. An
off-by-one error could cause a null to be written out of bounds, leading to
an overflow. Or, a program could use a strncpy() function call incorrectly,
which prevents a null terminator from being added at all. Other scenarios
are possible.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_170_Time of Introduction" id="oc_170_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_170_Applicable Platforms" id="oc_170_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;/div&gt;
&lt;p class="subheading"&gt;Platform Notes&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Conceptually, this does not just apply to the C language; any language or
representation that involves a terminator could have this type of
problem.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_170_Common Consequences" id="oc_170_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Confidentiality&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;The case of an omitted null character is the most dangerous of the
possible issues. This will almost certainly result in information
disclosure, and possibly a buffer overflow condition, which may be
exploited to execute arbitrary code. &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Confidentiality&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;If a null character is omitted from a string, then most string-copying
functions will read data until they locate a null character, even
outside of the intended boundaries of the string. This could:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;cause a crash due to a segmentation fault&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;cause sensitive adjacent memory to be copied and sent to an
outsider&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;trigger a buffer overflow when the copy is bering written to a
fixed-size buffer&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Misplaced null characters may result in any number of security
problems. The biggest issue is a subset of buffer overflow, and
write-what-where conditions, where data corruption occurs from the
writing of a null character over valid data, or even instructions. A
randomly placed null character may put the system into an undefined
state, and therefore make it prone to crashing. A misplaced null
character may corrupt other data in memory&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Access Control&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Should the null character corrupt the process flow, or affect a flag
controlling access, it may lead to logical errors which allow for the
execution of arbitrary code.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_170_Likelihood of Exploit" id="oc_170_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Medium&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_170_Demonstrative Examples" id="oc_170_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code reads from cfgfile and copies the input into
inputbuf using strcpy(). The code mistakenly assumes that inputbuf will
always contain a NULL terminator.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#define MAXLEN 1024&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char *pathbuf[MAXLEN];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;read(cfgfile,inputbuf,MAXLEN); //does not null terminate&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strcpy(pathbuf,input_buf); //requires null terminated input&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The code above will behave correctly if the data read from cfgfile is
null terminated on disk as expected. But if an attacker is able to
modify this input so that it does not contain the expected NULL
character, the call to strcpy() will continue copying from memory until
it encounters an arbitrary NULL character. This will likely overflow the
destination buffer and, if the attacker can control the contents of
memory immediately following inputbuf, can leave the application
susceptible to a buffer overflow attack.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;In the following code, readlink() expands the name of a symbolic
link stored in the buffer path so that the buffer filename contains the
absolute path of the file referenced by the symbolic link. The length of the
resulting value is then calculated using strlen().&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char buf[MAXPATH];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;readlink(path, buf, MAXPATH);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int length = strlen(filename);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The code above will not behave correctly because the value read into
buf by readlink() will not be null terminated. In testing,
vulnerabilities like this one might not be caught because the unused
contents of buf and the memory immediately following it may be NULL,
thereby causing strlen() to appear as if it is behaving correctly.
However, in the wild strlen() will continue traversing memory until it
encounters an arbitrary NULL character on the stack, which results in a
value of length that is much larger than the size of buf and may cause a
buffer overflow in subsequent uses of this value. Buffer overflows
aside, whenever a single call to readlink() returns the same value that
has been passed to its third argument, it is impossible to know whether
the name is precisely that many bytes long, or whether readlink() has
truncated the name to avoid overrunning the buffer. Traditionally,
strings are represented as a region of memory containing data terminated
with a NULL character. Older string-handling methods frequently rely on
this NULL character to determine the length of the string. If a buffer
that does not contain a NULL terminator is passed to one of these
functions, the function will read past the end of the buffer. Malicious
users typically exploit this type of vulnerability by injecting data
with unexpected size or content into the application. They may provide
the malicious input either directly as input to the program or
indirectly by modifying application resources, such as configuration
files. In the event that an attacker causes the application to read
beyond the bounds of a buffer, the attacker may be able use a resulting
buffer overflow to inject and execute arbitrary code on the system.
&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;While the following example is not exploitable, it provides a good
example of how nulls can be omitted or misplaced, even when "safe" functions
are used:&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;string.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int main() {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char longString[] = "String signifying nothing";&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char shortString[16];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(shortString, longString, 16);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("The last character in shortString is: %c %1$x\n",
shortString[15]);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return (0);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The above code gives the following output: The last character in
shortString is: l 6c So, the shortString array does not end in a NULL
character, even though the "safe" string function strncpy() was
used.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_170_Observed Examples" id="oc_170_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0312" target="_blank"&gt;CVE-2000-0312&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Attacker does not null-terminate argv[] when
invoking another program.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0777" target="_blank"&gt;CVE-2003-0777&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Interrupted step causes resultant lack of null
termination.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1072" target="_blank"&gt;CVE-2004-1072&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Fault causes resultant lack of null termination,
leading to buffer expansion.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1389" target="_blank"&gt;CVE-2001-1389&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Multiple vulnerabilities related to improper null
termination.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0143" target="_blank"&gt;CVE-2003-0143&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Product does not null terminate a message buffer
after snprintf-like call, leading to
overflow.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_170_Potential Mitigations" id="oc_170_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p&gt;Use a language that is not susceptible to these issues. However, be
careful of null byte interaction errors (CWE-626) with lower-level
constructs that may be written in a language that is susceptible.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Ensure that all string functions used are understood fully as to how
they append null characters. Also, be wary of off-by-one errors when
appending nulls to the end of strings.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;If performance constraints permit, special code can be added that
validates null-termination of string buffers, this is a rather naive and
error-prone solution.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Switch to bounded string manipulation functions. Inspect buffer
lengths involved in the buffer overrun trace reported with the
defect.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Add code that fills buffers with nulls (however, the length of buffers
still needs to be inspected, to ensure that the non null-terminated
string is not written at the physical end of the buffer).&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_170_Weakness Ordinalities" id="oc_170_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Resultant&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness is typically related to the presence of some other
weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_170_Relationships" id="oc_170_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;169&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=169" target="_blank"&gt;Technology-Specific Special Elements&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;707&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=707" target="_blank"&gt;Improper Enforcement of Message or Data Structure&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;730&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=730" target="_blank"&gt;OWASP Top Ten 2004 Category A9 - Denial of Service&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;741&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=741" target="_blank"&gt;CERT C Secure Coding Section 07 - Characters and Strings (STR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;748&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=748" target="_blank"&gt;CERT C Secure Coding Section 50 - POSIX (POS)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard&lt;/span&gt;734&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;120&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=120" target="_blank"&gt;Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;126&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=126" target="_blank"&gt;Buffer Over-read&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;463&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=463" target="_blank"&gt;Deletion of Data Structure Sentinel&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;464&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=464" target="_blank"&gt;Addition of Data Structure Sentinel&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanAlsoBe&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;147&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=147" target="_blank"&gt;Improper Neutralization of Input Terminators&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;193&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=193" target="_blank"&gt;Off-by-one Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;682&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=682" target="_blank"&gt;Incorrect Calculation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_170_Relationship Notes" id="oc_170_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Factors: this is usually resultant from other weaknesses such as
off-by-one errors, but it can be primary to boundary condition violations
such as buffer overflows. In buffer overflows, it can act as an expander for
assumed-immutable data.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Overlaps missing input terminator.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Causal Nature"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt;&lt;a href="javascript:toggleblocksOC('170_Causal Nature');"&gt;f&lt;/a&gt; &lt;/span&gt;Causal Nature&lt;/div&gt;&lt;div name="oc_170_Causal Nature" id="oc_170_Causal Nature" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Explicit&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_170_Taxonomy Mappings" id="oc_170_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Improper Null Termination&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;String Termination Error&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Miscalculated null termination&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A9&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Denial of Service&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;POS30-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Use the readlink() function properly&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR03-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Do not inadvertently truncate a null-terminated byte
string&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR32-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null-terminate byte strings as required&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_170_White Box Definitions" id="oc_170_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. end statement that passes a data item to a null-terminated string
function&lt;/p&gt;
&lt;p&gt;2. start statement that produces the improper null-terminated data
item &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Where "produces" is defined through the following scenarios:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. data item never ended with null-terminator&lt;/p&gt;
&lt;p&gt;2. null-terminator is re-written&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Maintenance Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Maintenance Notes&lt;/div&gt;&lt;div name="oc_170_Maintenance Notes" id="oc_170_Maintenance Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;As currently described, this entry is more like a category than a
weakness.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_170_Content History" id="oc_170_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Causal Nature,
Common Consequences, Description, Likelihood of Exploit, Maintenance Notes,
Relationships, Other Notes, Relationship Notes, Taxonomy Mappings,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-17&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Improved the White Box Definition&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Other Notes,
Potential Mitigations, White Box Definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1840</key><name>R12_12_Floating_Point_Bit_Underlying_Representation_Used</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 12-12&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 12-12&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 11028&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Use that relies on underlying bit representation shall not be applied to objects
            of floating point type.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1882</key><name>R20_12_Using_Time_Handling_From_Time_H</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 20-12&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 20-12&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11070&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Use of the time handling facilities of the &amp;lt;time.h&amp;gt; library is not allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1833</key><name>R08_08_External_Objects_Declared_Once</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 8-8&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 8-8&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11021&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Objects or functions with the external modifier shall not be declared in more
            than one file.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_311</key><name>Insufficiently_Protected_Credentials</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could steal user credentials, enabling access to user accounts and confidential data.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;User passwords are written to the database without being properly encrypted with a cryptographic hash. The application reads clear passwords straight from the database.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Store passwords using a cryptographic hash designed as a password protection scheme, such as:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;bcrypt&lt;/li&gt;
&lt;li&gt;scrypt&lt;/li&gt;
&lt;li&gt;PBKDF2 (with random salt) These need to be configured with an appropriately high work effort.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
Always use a secure password protection scheme to store passwords, such as bcrypt:

      &lt;/h4&gt;&lt;pre&gt;


string hashed = BCrypt.HashPassword(password, BCrypt.GenerateSalt(12));



      &lt;/pre&gt;&lt;h4&gt;

For password verification, use the matching function:

      &lt;/h4&gt;&lt;pre&gt;


bool isValid = BCrypt.CheckPassword(candidate, hashed);



      &lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;
Always use a secure password protection scheme to store passwords, such as bcrypt:

      &lt;/h4&gt;&lt;pre&gt;


String hashed = BCrypt.hashpw(password, BCrypt.gensalt(12));


      &lt;/pre&gt;&lt;h4&gt;

For password verification, use the matching function:

      &lt;/h4&gt;&lt;pre&gt;


bool isValid = BCrypt.checkpw(candidate, hashed);


      &lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_321</key><name>Path_Traversal</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could define any arbitrary file path for the application to use, potentially leading to:&lt;/div&gt;
&lt;ol&gt;
&lt;ul&gt;
&lt;li&gt;Stealing sensitive files, such as configuration or system files&lt;/li&gt;
&lt;li&gt;Overwriting files such as program binaries, configuration files, or system files&lt;/li&gt;
&lt;li&gt;Deleting critical files, causing a denial of service (DoS).&lt;/li&gt;
&lt;/ul&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application uses user input in the file path for accessing files on the application server&amp;#8217;s local disk. This enables an attacker to arbitrarily determine the file path.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Ideally, avoid depending on user input for file selection.&lt;/li&gt;
&lt;li&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Accept user input only for the filename, not for the path and folders.&lt;/li&gt;
&lt;li&gt;Ensure that file path is fully canonicalized.&lt;/li&gt;
&lt;li&gt;Explicitly limit the application to using a designated folder that separate from the applications binary folder.&lt;/li&gt;
&lt;li&gt;Restrict the privileges of the application&amp;#8217;s OS user to necessary files and folders. The application should not be able to write to the application binary folder, and should not read anything outside of the application folder and data folder.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;Using unvalidated user input as the file name may enable the user to access arbitrary files on the server local disk&lt;/h4&gt;&lt;pre&gt;public class PathTraversal
{
        private void foo(TextBox textbox1)
        {
                string fileNum = textbox1.Text;
                string path = "c:\files\file" + fileNum;
                FileStream f = new FileStream(path, FileMode.Open);
                byte[] output = new byte[10];
                f.Read(output,0, 10);
        }
}&lt;/pre&gt;&lt;h4&gt;
Potentially hazardous characters are removed from the user input before use
      &lt;/h4&gt;&lt;pre&gt;public class PathTraversalFixed
{
        private void foo(TextBox textbox1)
        {
                string fileNum = textbox1.Text.Replace("\", "").Replace("..", "");
                string path = "c:\files\file" + fileNum;
                FileStream f = new FileStream(path, FileMode.Open);
                byte[] output = new byte[10];
                f.Read(output,0, 10);
        }
}&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Using unvalidated user input as the file name may enable the user to access arbitrary files on the server local disk&lt;/h4&gt;&lt;pre&gt;public class Absolute_Path_Traversal {
    public static void main(String[] args) {
        Scanner userInputScanner = new Scanner(System.in);
        System.out.print("\nEnter file name: ");
        String name = userInputScanner.nextLine();
        String path = "c:\files\file" + name;
        try {
            BufferedReader reader = new BufferedReader(new FileReader(path));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}&lt;/pre&gt;&lt;h4&gt;Potentially hazardous characters are removed from the user input before use&lt;/h4&gt;&lt;pre&gt;public class Absolute_Path_Traversal_Fixed {
    public static void main(String[] args) {
        Scanner userInputScanner = new Scanner(System.in);
        System.out.print("\nEnter file name: ");
        String name = userInputScanner.nextLine();
        name = name.replace("/", "").replace("..", "");
        String path = "c:\files\file" + name;
        try {
            BufferedReader reader = new BufferedReader(new FileReader(path));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1849</key><name>R14_07_Single_Point_Exit_At_Function_End</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 14-7&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 14-7&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11037&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            The only point of exit for every function shall be at the end of its code.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1213</key><name>Privacy_Violation</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;A user&amp;#8217;s personal information could be stolen by a malicious programmer, or an attacker that intercepts the data.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application sends user information, such as passwords, account information, or credit card numbers, outside the application, such as writing it to a local text or log file or sending it to an external web service.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;ol&gt;
&lt;li&gt;Personal data should be removed before writing to logs or other files.&lt;/li&gt;
&lt;li&gt;Review the need and justification of sending personal data to remote web services.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
The user's password is written to the screen
      &lt;/h4&gt;&lt;pre&gt;

class PrivacyViolation
{
        static void foo(string insert_sql)
        {
                string password = "unsafe_password";
                insert_sql = insert_sql.Replace("$password", password);
                System.Console.WriteLine(insert_sql);
        } 
}



      &lt;/pre&gt;&lt;h4&gt;
the user's password is MD5 coded before being written to the screen
      &lt;/h4&gt;&lt;pre&gt;

class PrivacyViolationFixed
{
        static void foo(string insert_sql)
        {
                string password = "unsafe_password";
                MD5 md5Hash = System.Security.Cryptography.MD5.Create();
                byte[] data = md5Hash.ComputeHash(Encoding.UTF8.GetBytes(password));
        StringBuilder md5Password = new StringBuilder();

                for (int i = 0; i &lt; data.Length; i++)
		{
			md5Password.Append(data[i].ToString("x2"));
		}
		insert_sql = insert_sql.Replace("$password", md5Password.ToString());
                System.Console.WriteLine(insert_sql);
        } 
}



      &lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1869</key><name>R19_03_Include_Directive_In_Wrong_Format</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 19-3&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 19-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11057&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;
        &lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            The &amp;#39;#include&amp;#39; pre-processing directive shall be followed by a header file name
            surrounded by &amp;quot; ... &amp;quot; or &amp;lt; ... &amp;gt;.&lt;br&gt;
          &lt;/div&gt;
                    &lt;p class="subheading"&gt;
              MISRA Web Page href="http://www.misra.org.uk/"
                  style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;

          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1212</key><name>Potential_Path_Traversal</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could define any arbitrary file path for the application to use, potentially leading to:&lt;/div&gt;
&lt;ol&gt;
&lt;ul&gt;
&lt;li&gt;Stealing sensitive files, such as configuration or system files&lt;/li&gt;
&lt;li&gt;Overwriting files such as program binaries, configuration files, or system files&lt;/li&gt;
&lt;li&gt;Deleting critical files, causing a denial of service (DoS).&lt;/li&gt;
&lt;/ul&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application uses user input in the file path for accessing files on the application server&amp;#8217;s local disk. This enables an attacker to arbitrarily determine the file path.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Ideally, avoid depending on user input for file selection.&lt;/li&gt;
&lt;li&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Accept user input only for the filename, not for the path and folders.&lt;/li&gt;
&lt;li&gt;Ensure that file path is fully canonicalized.&lt;/li&gt;
&lt;li&gt;Explicitly limit the application to using a designated folder that separate from the applications binary folder.&lt;/li&gt;
&lt;li&gt;Restrict the privileges of the application&amp;#8217;s OS user to necessary files and folders. The application should not be able to write to the application binary folder, and should not read anything outside of the application folder and data folder.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;Using unvalidated user input as the file name may enable the user to access arbitrary files on the server local disk&lt;/h4&gt;&lt;pre&gt;public class PathTraversal
{
        private void foo(TextBox textbox1)
        {
                string fileNum = textbox1.Text;
                string path = "c:\files\file" + fileNum;
                FileStream f = new FileStream(path, FileMode.Open);
                byte[] output = new byte[10];
                f.Read(output,0, 10);
        }
}&lt;/pre&gt;&lt;h4&gt;
Potentially hazardous characters are removed from the user input before use
      &lt;/h4&gt;&lt;pre&gt;public class PathTraversalFixed
{
        private void foo(TextBox textbox1)
        {
                string fileNum = textbox1.Text.Replace("\", "").Replace("..", "");
                string path = "c:\files\file" + fileNum;
                FileStream f = new FileStream(path, FileMode.Open);
                byte[] output = new byte[10];
                f.Read(output,0, 10);
        }
}&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Using unvalidated user input as the file name may enable the user to access arbitrary files on the server local disk&lt;/h4&gt;&lt;pre&gt;public class Absolute_Path_Traversal {
    public static void main(String[] args) {
        Scanner userInputScanner = new Scanner(System.in);
        System.out.print("\nEnter file name: ");
        String name = userInputScanner.nextLine();
        String path = "c:\files\file" + name;
        try {
            BufferedReader reader = new BufferedReader(new FileReader(path));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}&lt;/pre&gt;&lt;h4&gt;Potentially hazardous characters are removed from the user input before use&lt;/h4&gt;&lt;pre&gt;public class Absolute_Path_Traversal_Fixed {
    public static void main(String[] args) {
        Scanner userInputScanner = new Scanner(System.in);
        System.out.print("\nEnter file name: ");
        String name = userInputScanner.nextLine();
        name = name.replace("/", "").replace("..", "");
        String path = "c:\files\file" + name;
        try {
            BufferedReader reader = new BufferedReader(new FileReader(path));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1853</key><name>R15_01_Case_Not_Enclosed_By_Compound_Switch</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 15-1&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 15-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11041&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            A &amp;#39;case&amp;#39; label shall be directly encompassed by the compound body of its parent
            &amp;#39;switch&amp;#39; statement.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1817</key><name>R04_02_Trigraphs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 4-2&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 4-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11005&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            &lt;a href="http://en.wikipedia.org/wiki/Digraphs_and_trigraphs"&gt;Trigraphs&lt;/a&gt; are
            not allowed.&lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1868</key><name>R19_02_Non_Standard_Chars_In_Header_File_Name</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 19-2&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 19-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11056&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Only standard characters should appear in header file names provided within
            #include statements.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_210</key><name>GOTO_Statement</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Development Concepts&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;View ID: &lt;/b&gt;699&lt;span style="font-style:italic; font-size:80%"&gt; (View: Graph)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="View Data "&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;View Data &lt;/div&gt;&lt;div name="oc_699_View Data " id="oc_699_View Data " class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;View Objective&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;This view organizes weaknesses around concepts that are frequently used or
encountered in software development. Accordingly, this view can align closely
with the perspectives of developers, educators, and assessment vendors. It
borrows heavily from the organizational structure used by Seven Pernicious
Kingdoms, but it also provides a variety of other categories that are intended
to simplify navigation, browsing, and mapping.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="View Metrics "&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;View Metrics &lt;/div&gt;&lt;div name="oc_699_View Metrics " id="oc_699_View Metrics " class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;div xmlns:saxon="http://saxon.sf.net/" xmlns:xalan="http://xml.apache.org/xalan" id="Detail"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;th valign="top"&gt;&lt;/th&gt;&lt;th valign="top"&gt;CWEs in this view&lt;/th&gt;&lt;th valign="top"&gt;&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Total CWEs&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" class="ltgreybackground"&gt;&lt;b&gt;Total&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" class="ltgreybackground"&gt;&lt;b&gt;706&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" class="ltgreybackground" nowrap=""&gt;out of&lt;/td&gt;&lt;td valign="top" class="ltgreybackground"&gt;810&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top"&gt;&lt;b&gt;Views&lt;/b&gt;&lt;/td&gt;&lt;td valign="top"&gt;4&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;out of&lt;/td&gt;&lt;td valign="top"&gt;23&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top"&gt;&lt;b&gt;Categories&lt;/b&gt;&lt;/td&gt;&lt;td valign="top"&gt;65&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;out of&lt;/td&gt;&lt;td valign="top"&gt;110&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top"&gt;&lt;b&gt;Weaknesses&lt;/b&gt;&lt;/td&gt;&lt;td valign="top"&gt;631&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;out of&lt;/td&gt;&lt;td valign="top"&gt;668&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top"&gt;&lt;b&gt;Compound_Elements&lt;/b&gt;&lt;/td&gt;&lt;td valign="top"&gt;6&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;out of&lt;/td&gt;&lt;td valign="top"&gt;9&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="View Audience"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;View Audience&lt;/div&gt;&lt;div name="oc_699_View Audience" id="oc_699_View Audience" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Stakeholder&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;Assessment Vendors&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;Developers&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;Educators&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_699_Relationships" id="oc_699_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;HasMember&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;1&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=1" target="_blank"&gt;Location&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;HasMember&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;504&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=504" target="_blank"&gt;Motivation/Intent&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;HasMember&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;629&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=629" target="_blank"&gt;Weaknesses in OWASP Top Ten (2007)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;HasMember&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;631&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=631" target="_blank"&gt;Resource-specific Weaknesses&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;HasMember&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;701&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=701" target="_blank"&gt;Weaknesses Introduced During Design&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;HasMember&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;702&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=702" target="_blank"&gt;Weaknesses Introduced During Implementation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_699_Content History" id="oc_699_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-09&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal CWE Team&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1836</key><name>R12_05_AND_OR_Operands_Not_As_Primary_Expressions</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 12-5&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 12-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11024&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            The operands of the &amp;#39;&amp;amp;&amp;amp;&amp;#39; and &amp;#39;||&amp;#39; operators shall be
            &lt;a href="http://msdn.microsoft.com/en-us/library/z94za21a.aspx"&gt;primary
            expressions&lt;/a&gt;.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1832</key><name>R08_07_Block_Scope_Obj_If_Used_By_Single_Function</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 8-7&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 8-7&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11020&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Objects shall only be defined in file scope if they are used within more than a
            single function.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1852</key><name>R14_10_If_Else_If_Not_Ending_With_Else</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 14-10&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 14-10&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11040&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            All &amp;#39;if&amp;#39; ... &amp;#39;else if&amp;#39; ... structures shall be terminated by a non empty else
            statement.&lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1563</key><name>Unreleased_Resource_Leak</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Resource Locking Problems&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Category ID: &lt;/b&gt;411&lt;span style="font-style:italic; font-size:80%"&gt; (Category)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_411_Description" id="oc_411_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;Weaknesses in this category are related to improper handling of
locks that are used to control access to resources.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_411_Relationships" id="oc_411_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;399&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=399" target="_blank"&gt;Resource Management Errors&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;412&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=412" target="_blank"&gt;Unrestricted Externally Accessible Lock&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts&lt;/span&gt;699&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;413&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=413" target="_blank"&gt;Insufficient Resource Locking&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;414&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=414" target="_blank"&gt;Missing Lock Check&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_411_Taxonomy Mappings" id="oc_411_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Resource Locking problems&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_411_Content History" id="oc_411_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1562</key><name>Undefined_Behavior</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Undefined Behavior for Input to API&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;475&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_475_Description" id="oc_475_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The behavior of this function is undefined unless its control
parameter is set to a specific value.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_475_Time of Introduction" id="oc_475_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_475_Applicable Platforms" id="oc_475_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_475_Other Notes" id="oc_475_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;The Linux Standard Base Specification 2.0.1 for libc places constraints on
the arguments to some internal functions [21]. If the constraints are not
met, the behavior of the functions is not defined. It is unusual for this
function to be called directly. It is almost always invoked through a macro
defined in a system header file, and the macro ensures that the following
constraints are met: The value 1 must be passed to the third parameter (the
version number) of the following file system function: __xmknod The value 2
must be passed to the third parameter (the group argument) of the following
wide character string functions: __wcstod_internal __wcstof_internal
__wcstol_internal __wcstold_internal __wcstoul_internal The value 3 must be
passed as the first parameter (the version number) of the following file
system functions: __xstat __lxstat __fxstat __xstat64 __lxstat64 __fxstat64
&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_475_Relationships" id="oc_475_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;573&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=573" target="_blank"&gt;Failure to Follow Specification&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_475_Taxonomy Mappings" id="oc_475_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Undefined Behavior&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_475_Content History" id="oc_475_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships, Other Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Undefined
Behavior&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2287</key><name>Wrong_Size_t_Allocation</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Uncontrolled Memory Allocation&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;789&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Variant)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_789_Description" id="oc_789_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The product allocates memory based on an untrusted size value,
but it does not validate or incorrectly validates the size, allowing arbitrary
amounts of memory to be allocated. &lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_789_Time of Introduction" id="oc_789_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_789_Applicable Platforms" id="oc_789_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;p class="subheading"&gt;Platform Notes&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Uncontrolled memory allocation is possible in many languages, such as
dynamic array allocation in perl or initial size parameters in Collections
in Java. However, languages like C and C++ where programmers have the power
to more directly control memory management will be more susceptible. &lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_789_Common Consequences" id="oc_789_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Failure to control memory allocation can result in a request for too
much system memory, possibly leading to a crash of the
application.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_789_Likelihood of Exploit" id="oc_789_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Low&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_789_Demonstrative Examples" id="oc_789_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt; Consider the following code, which accepts an untrusted size value
and allocates a buffer to contain a string of the given size.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt; unsigned int size = GetUntrustedInt();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;/* ignore integer overflow (CWE-190) for this example */&lt;/div&gt;&lt;div style="font-size:90%;"&gt;unsigned int totBytes = size * sizeof(char);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char *string = (char *)malloc(totBytes);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;InitializeString(string);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Suppose an attacker provides a size value of:&lt;/p&gt;&lt;div class="indent Attack"&gt;
&lt;p&gt;12345678&lt;/p&gt;
&lt;/div&gt;&lt;p&gt;This will cause 305,419,896 bytes (over 291 megabytes) to be allocated
for the string.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;Consider the following code, which accepts an untrusted size value
and uses the size as an initial capacity for a HashMap.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt; unsigned int size = GetUntrustedInt();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;HashMap list = new HashMap(size);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The HashMap constructor will verify that the initial capacity is not
negative, however there is no check in place to verify that sufficient
memory is present. If the attacker provides a large enough value, the
application will run into an OutOfMemoryError.&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;The following code obtains an untrusted number that it used as an
index into an array of messages. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Perl&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;my $num = GetUntrustedNumber();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;my @messages = ();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;$messages[$num] = "Hello World";&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt; The index is not validated at all (CWE-129), so it might be possible
for an attacker to modify an element in @messages that was not intended.
If an index is used that is larger than the current size of the array,
the Perl interpreter automatically expands the array so that the large
index works.&lt;/p&gt;&lt;p&gt;If $num is a large value such as 2147483648 (1&amp;lt;&amp;lt;31),
then the assignment to $messages[$num] would attempt to create a very
large array, then eventually produce an error message such as:&lt;/p&gt;&lt;div style="font-size:90%;"&gt;Out of memory during array extend&lt;/div&gt;&lt;p&gt;This memory exhaustion will cause the Perl program to exit, possibly a
denial of service. In addition, the lack of memory could also prevent
many other programs from successfully running on the system. &lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_789_Observed Examples" id="oc_789_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-1708" target="_blank"&gt;CVE-2008-1708&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;memory consumption and daemon exit by specifying a
large value in a length field&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0977" target="_blank"&gt;CVE-2008-0977&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;large value in a length field leads to memory
consumption and crash when no more memory is
available&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-3791" target="_blank"&gt;CVE-2006-3791&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;large key size in game program triggers crash when
a resizing function cannot allocate enough
memory&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-2589" target="_blank"&gt;CVE-2004-2589&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;large Content-Length HTTP header value triggers
application crash in instant messaging application due to failure to
allocate memory&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_789_Potential Mitigations" id="oc_789_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phases:  Implementation; Architecture and Design&lt;/p&gt;&lt;p&gt; Perform adequate input validation against any value that influences
the amount of memory that is allocated. Define an appropriate strategy
for handling requests that exceed the limit, and consider supporting a
configuration option so that the administrator can extend the amount of
memory to be used if necessary. &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Operation&lt;/p&gt;&lt;p&gt;Run your program using system-provided resource limits for memory.
This might still cause the program to crash or exit, but the impact to
the rest of the system will be minimized.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_789_Weakness Ordinalities" id="oc_789_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Primary&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness exists independent of other weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Resultant&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness is typically related to the presence of some other
weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_789_Relationships" id="oc_789_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;770&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=770" target="_blank"&gt;Allocation of Resources Without Limits or Throttling&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;476&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=476" target="_blank"&gt;NULL Pointer Dereference&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;129&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=129" target="_blank"&gt;Improper Validation of Array Index&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_789_Relationship Notes" id="oc_789_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;This weakness can be closely associated with integer overflows (CWE-190).
Integer overflow attacks would concentrate on providing an extremely large
number that triggers an overflow that causes less memory to be allocated
than expected. By providing a large value that does not trigger an integer
overflow, the attacker could still cause excessive amounts of memory to be
allocated.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_789_Taxonomy Mappings" id="oc_789_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;WASC&lt;/td&gt;&lt;td valign="top"&gt;35&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;SOAP Array Abuse &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_789_Content History" id="oc_789_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-21&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal CWE Team&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1838</key><name>R12_09_Unary_Minus_Operator_On_Unsigned_Type</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 12-9&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 12-9&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 11026&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Objects with an underlying unsigned type shall not be passed as operands to the
            unary minus operator.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_205</key><name>Non_Private_Static_Constructors</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;div class="definitions" id="TableWithRules"&gt;&lt;table border="0" cellspacing="0" cellpadding="0" width="100%"&gt;&lt;tbody&gt;&lt;tr class="header"&gt;&lt;th valign="top" width="100%" colspan="2"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold; "&gt;Non Private Static Constructors&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;CWE ID&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;10021&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;A static constructor that is called explicitly in the code may cause unexpected behavior.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Likelihood of Exploit&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;Low&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Common Consequences&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;Unexpected behavior may be caused.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Potential Mitigations&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;Do not explicitly call a static constructor.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;div style="height:10px; width:100%;"&gt;&lt;/div&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Applicable Platforms&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;All&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;/div&gt;
&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1251</key><name>Buffer_Overflow_sizeof</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;120&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_120_Description" id="oc_120_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The program copies an input buffer to an output buffer without
verifying that the size of the input buffer is less than the size of the output
buffer, leading to a buffer overflow.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;A buffer overflow condition exists when a program attempts to put more
data in a buffer than it can hold, or when a program attempts to put data in
a memory area outside of the boundaries of a buffer. The simplest type of
error, and the most common cause of buffer overflows, is the "classic" case
in which the program copies the buffer without checking its length at all.
Other variants exist, but the existence of a classic overflow strongly
suggests that the programmer is not considering even the most basic of
security protections.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_120_Alternate Terms" id="oc_120_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;buffer overrun:&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;p&gt;Some prominent vendors and researchers use the term "buffer overrun,"
but most people use "buffer overflow."&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Unbounded Transfer&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Terminology Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Terminology Notes&lt;/div&gt;&lt;div name="oc_120_Terminology Notes" id="oc_120_Terminology Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Many issues that are now called "buffer overflows" are substantively

different than the "classic" overflow, including entirely different bug
types that rely on overflow exploit techniques, such as integer signedness
errors, integer overflows, and format string bugs. This imprecise
terminology can make it difficult to determine which variant is being
reported.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_120_Time of Introduction" id="oc_120_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_120_Applicable Platforms" id="oc_120_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;p&gt;Assembly&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_120_Common Consequences" id="oc_120_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p class="smaller" style="font-weight:normal"&gt;&lt;span class="subheading"&gt;Technical Impact:&lt;/span&gt;&lt;i&gt; Execute unauthorized code or
commands&lt;/i&gt;&lt;/p&gt;&lt;div style="padding-top:5px"&gt;&lt;p&gt;Buffer overflows often can be used to execute arbitrary code, which is
usually outside the scope of a program's implicit security policy. This
can often be used to subvert any other security service.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Buffer overflows generally lead to crashes. Other attacks leading to
lack of availability are possible, including putting the program into an
infinite loop.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_120_Likelihood of Exploit" id="oc_120_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High to Very High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Detection Methods"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Detection Methods&lt;/div&gt;&lt;div name="oc_120_Detection Methods" id="oc_120_Detection Methods" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Static Analysis&lt;/p&gt;&lt;p&gt;This weakness can often be detected using automated static analysis
tools. Many modern tools use data flow analysis or constraint-based
techniques to minimize the number of false positives.&lt;/p&gt;&lt;p&gt;Automated static analysis generally does not account for environmental
considerations when reporting out-of-bounds memory operations. This can
make it difficult for users to determine which warnings should be
investigated first. For example, an analysis tool might report buffer
overflows that originate from command line arguments in a program that
is not expected to run with setuid or other special privileges.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: High&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;Detection techniques for buffer-related errors are more mature than
for most other weakness types.&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Dynamic Analysis&lt;/p&gt;&lt;p&gt;This weakness can be detected using dynamic tools and techniques that
interact with the software using large test suites with many diverse
inputs, such as fuzz testing (fuzzing), robustness testing, and fault
injection. The software's operation may slow down, but it should not
become unstable, crash, or generate incorrect results.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Manual Analysis&lt;/p&gt;&lt;p&gt;Manual analysis can be useful for finding this weakness, but it might
not achieve desired code coverage within limited time constraints. This
becomes difficult for weaknesses that must be considered for all inputs,
since the attack surface can be too large.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_120_Demonstrative Examples" id="oc_120_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code asks the user to enter their last name and then
attempts to store the value entered in the last_name array. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example

Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char last_name[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;printf ("Enter your last name: ");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;scanf ("%s", last_name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The problem with the code above is that it does not check the size of
the name entered by the user. If the user enters
"Very_very_long_last_name" which is 24 characters long, then a buffer
overflow will occur since the array can only hold 20 characters total.
&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following code attempts to create a local copy of a buffer to
perform some manipulations to the data.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;void manipulate_string(char* string){&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char buf[24];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcpy(buf, string);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the programmer does not ensure that the size of the data
pointed to by string will fit in the local buffer and blindly copies the
data with the potentially dangerous strcpy() function. This may result
in a buffer overflow condition if an attacker can influence the contents
of the string parameter.&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;The excerpt below calls the gets() function in C, which is
inherently unsafe.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char buf[24];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("Please enter your name and press
&amp;lt;Enter&amp;gt;\n");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;gets(buf);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the programmer uses the function gets() which is inherently
unsafe because it blindly copies all input from STDIN to the buffer
without checking size. This allows the user to provide a string that is
larger than the buffer size, resulting in an overflow condition.&lt;/p&gt;&lt;p class="subheading"&gt;Example 4&lt;/p&gt;&lt;p&gt;In the following example, a server accepts connections from a client
and processes the client request. After accepting a client connection, the
program will obtain client information using the gethostbyaddr method, copy
the hostname of the client that connected to a local variable and output the
hostname of the client to a log file.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example Languages: &lt;/span&gt;C and C++&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;struct hostent *clienthp;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char hostname[MAX_LEN];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// create server socket, bind to server address and listen on
socket&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// accept client connections and process requests&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int count = 0;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;for (count = 0; count &amp;lt; MAX_CONNECTIONS; count++)
{&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int clientlen = sizeof(struct sockaddr_in);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int clientsocket = accept(serversocket, (struct sockaddr
*)&amp;amp;clientaddr, &amp;amp;clientlen);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (clientsocket &amp;gt;= 0) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;clienthp = gethostbyaddr((char
*)&amp;amp;clientaddr.sin_addr.s_addr, &lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;sizeof(clientaddr.sin_addr.s_addr), AF_INET);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcpy(hostname, clienthp-&amp;gt;h_name);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;logOutput("Accepted client connection from host ",
hostname);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// process client request&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;close(clientsocket);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt; }&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;close(serversocket);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the hostname of the client that connected may be longer than
the allocated size for the local hostname variable. This will result in
a buffer overflow when copying the client hostname to the local variable
using the strcpy method.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_120_Observed Examples" id="oc_120_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-1094" target="_blank"&gt;CVE-2000-1094&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;buffer overflow using command with long
argument&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-0046" target="_blank"&gt;CVE-1999-0046&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;buffer overflow in local program using long
environment variable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1337" target="_blank"&gt;CVE-2002-1337&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;buffer overflow in comment characters, when
product increments a counter for a "&amp;gt;" but does not decrement for
"&amp;lt;"&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0595" target="_blank"&gt;CVE-2003-0595&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;By replacing a valid cookie value with an
extremely long string of characters, an attacker may overflow the
application's buffers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0191" target="_blank"&gt;CVE-2001-0191&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;By replacing a valid cookie value with an
extremely long string of characters, an attacker may overflow the
application's buffers.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_120_Potential Mitigations" id="oc_120_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Language Selection&lt;/p&gt;&lt;p&gt;Use a language with features that can automatically mitigate or
eliminate buffer overflows.&lt;/p&gt;&lt;p&gt;For example, many languages that perform their own memory management,
such as Java and Perl, are not subject to buffer overflows. Other
languages, such as Ada and C#, typically provide overflow protection,
but the protection can be disabled by the programmer.&lt;/p&gt;&lt;p&gt;Be wary that a language's interface to native code may still be
subject to overflows, even if the language itself is theoretically safe.
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Libraries or Frameworks&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to
occur or provides constructs that make this weakness easier to
avoid.&lt;/p&gt;&lt;p&gt;Examples include the Safe C String Library (SafeStr) by Messier and
Viega, and the Strsafe.h library from Microsoft. These libraries provide
safer versions of overflow-prone string-handling functions. This is not
a complete solution, since many buffer overflows are not related to
strings.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Build and Compilation&lt;/p&gt;&lt;p&gt;Run or compile your software using features or extensions that
automatically provide a protection mechanism that mitigates or
eliminates buffer overflows.&lt;/p&gt;&lt;p&gt;For example, certain compilers and extensions provide automatic buffer
overflow detection mechanisms that are built into the compiled code.
Examples include the Microsoft Visual Studio /GS flag, Fedora/Red Hat
FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice.&lt;/p&gt;&lt;p&gt;This is not necessarily a complete solution, since these mechanisms
can only detect certain types of overflows. In addition, a buffer
overflow attack can still cause a denial of service, since the typical
response is to exit the application.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Programmers should adhere to the following rules when allocating and
managing their applications memory:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Double check that your buffer is as large as you specify.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;When using functions that accept a number of bytes to copy, such
as strncpy(), be aware that if the destination buffer size is equal
to the source buffer size, it may not NULL-terminate the
string.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Check buffer boundaries if calling this function in a loop and
make sure you are not in danger of writing past the allocated
space.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If necessary, truncate all input strings to a reasonable length
before passing them to the copy and concatenation functions.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Operation&lt;/p&gt;&lt;p&gt;Use a feature like Address Space Layout Randomization (ASLR). This is
not a complete solution. However, it forces the attacker to guess an
unknown value that changes every program execution.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Operation&lt;/p&gt;&lt;p&gt;Use a CPU and operating system that offers Data Execution Protection
(NX) or its equivalent. This is not a complete solution, since buffer
overflows could be used to overwrite nearby variables to modify the
software's state in dangerous ways. In addition, it cannot be used in
cases in which self-modifying code is required.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phases:  Build and Compilation; Operation&lt;/p&gt;&lt;p&gt;Most mitigating technologies at the compiler or OS level to date
address only a subset of buffer overflow problems and rarely provide
complete protection against even that subset. It is good practice to
implement strategies to increase the workload of an attacker, such as
leaving the attacker to guess an unknown value that changes every
program execution.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Replace unbounded copy functions with analogous functions that support
length arguments, such as strcpy with strncpy. Create these if they are
not available.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Moderate&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;This approach is still susceptible to calculation errors, including
issues such as off-by-one errors (CWE-193) and incorrectly calculating
buffer lengths (CWE-131).&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_120_Weakness Ordinalities" id="oc_120_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Resultant&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness is typically related to the presence of some other
weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Primary&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness exists independent of other weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_120_Relationships" id="oc_120_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;633&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=633" target="_blank"&gt;Weaknesses that Affect Memory&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;722&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=722" target="_blank"&gt;OWASP Top Ten 2004 Category A1 - Unvalidated Input&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004)&lt;/span&gt;711&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;726&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=726" target="_blank"&gt;OWASP Top Ten 2004 Category A5 - Buffer Overflows&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;741&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=741" target="_blank"&gt;CERT C Secure Coding Section 07 - Characters and Strings (STR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;802&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=802" target="_blank"&gt;2010 Top 25 - Risky Resource Management&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;123&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=123" target="_blank"&gt;Write-what-where Condition&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;785&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=785" target="_blank"&gt;Use of Path Manipulation Function without Maximum-sized Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;170&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=170" target="_blank"&gt;Improper Null Termination&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;231&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=231" target="_blank"&gt;Improper Handling of Extra Values&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;242&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=242" target="_blank"&gt;Use of Inherently Dangerous Function&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;416&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=416" target="_blank"&gt;Use After Free&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;456&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=456" target="_blank"&gt;Missing Initialization&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;124&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=124" target="_blank"&gt;Buffer Underwrite ('Buffer Underflow')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanAlsoBe&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;196&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=196" target="_blank"&gt;Unsigned to Signed Conversion Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_120_Relationship Notes" id="oc_120_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;At the code level, stack-based and heap-based overflows do not differ
significantly, so there usually is not a need to distinguish them. From the
attacker perspective, they can be quite different, since different
techniques are required to exploit them.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Affected Resources"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Affected Resources&lt;/div&gt;&lt;div name="oc_120_Affected Resources" id="oc_120_Affected Resources" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Functional Areas"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Functional Areas&lt;/div&gt;&lt;div name="oc_120_Functional Areas" id="oc_120_Functional Areas" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory Management&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Causal Nature"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt;&lt;a href="javascript:toggleblocksOC('120_Causal Nature');"&gt;f&lt;/a&gt; &lt;/span&gt;Causal Nature&lt;/div&gt;&lt;div name="oc_120_Causal Nature" id="oc_120_Causal Nature" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Explicit&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_120_Taxonomy Mappings" id="oc_120_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Unbounded Transfer ('classic overflow')&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A1&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Unvalidated Input&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A5&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflows&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR35-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Do not copy data from an unbounded source to a fixed-length
array&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;WASC&lt;/td&gt;&lt;td valign="top"&gt;7&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_120_Related Attack Patterns" id="oc_120_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org8.html" target="_blank"&gt;8&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow in an API Call&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org9.html" target="_blank"&gt;9&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow in Local Command-Line Utilities&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org10.html" target="_blank"&gt;10&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Environment Variables&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org14.html" target="_blank"&gt;14&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Client-side Injection-induced Buffer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org24.html" target="_blank"&gt;24&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Filter Failure through Buffer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org92.html" target="_blank"&gt;92&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Forced Integer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org42.html" target="_blank"&gt;42&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;MIME Conversion&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org44.html" target="_blank"&gt;44&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Binary Resource File&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org45.html" target="_blank"&gt;45&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Symbolic Links&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org100.html" target="_blank"&gt;100&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Buffers&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org46.html" target="_blank"&gt;46&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Variables and Tags&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org47.html" target="_blank"&gt;47&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Parameter Expansion&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org67.html" target="_blank"&gt;67&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;String Format Overflow in syslog()&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_120_White Box Definitions" id="oc_120_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path includes a Buffer Write Operation such
that:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. the expected size of the buffer is greater than the actual size of
the buffer where expected size is equal to the sum of the size of the
data item and the position in the buffer&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Where Buffer Write Operation is a statement that writes a data item of a
certain size into a buffer at a certain position and at a certain
index&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_120_References" id="oc_120_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-11] M. Howard and
D. LeBlanc. "Writing Secure Code". Chapter 5, "Public Enemy #1: The Buffer Overrun" Page
127. 2nd Edition. Microsoft. 2002. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-17] Michael Howard, David LeBlanc
and John Viega. "24 Deadly Sins of Software Security". "Sin 5: Buffer Overruns." Page 89. McGraw-Hill. 2010. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Microsoft. "Using the Strsafe.h Functions". &amp;lt;&lt;a href="http://msdn.microsoft.com/en-us/library/ms647466.aspx" target="_blank"&gt;http://msdn.microsoft.com/en-us/library/ms647466.aspx&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Matt Messier and
John Viega. "Safe C String Library v1.0.3". &amp;lt;&lt;a href="http://www.zork.org/safestr/" target="_blank"&gt;http://www.zork.org/safestr/&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Michael Howard. "Address Space Layout Randomization in Windows
Vista". &amp;lt;&lt;a href="http://blogs.msdn.com/michael_howard/archive/2006/05/26/address-space-layout-randomization-in-windows-vista.aspx" target="_blank"&gt;http://blogs.msdn.com/michael_howard/archive/2006/05/26/address-space-layout-randomization-in-windows-vista.aspx&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Arjan van de Ven. "Limiting buffer overflows with ExecShield". &amp;lt;&lt;a href="http://www.redhat.com/magazine/009jul05/features/execshield/" target="_blank"&gt;http://www.redhat.com/magazine/009jul05/features/execshield/&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;"PaX". &amp;lt;&lt;a href="http://en.wikipedia.org/wiki/PaX" target="_blank"&gt;http://en.wikipedia.org/wiki/PaX&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_120_Content History" id="oc_120_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-15&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Veracode&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Suggested OWASP Top Ten 2004
mapping&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Applicable Platforms,
Common Consequences, Relationships, Observed Example, Other Notes,
Taxonomy Mappings, Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Changed name and description to more clearly emphasize the
"classic" nature of the overflow.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Description, Name, Other Notes,
Terminology Notes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Other Notes, Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Other Notes,
Potential Mitigations, References, Relationship Notes,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Other Notes, Potential Mitigations,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Demonstrative Examples, Detection Factors, Potential Mitigations,
References, Related Attack Patterns, Relationships, Taxonomy Mappings,
Time of Introduction, Type&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-04-05&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples, Related Attack Patterns&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Unbounded Transfer ('Classic
Buffer Overflow')&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1253</key><name>Heuristic_NULL_Pointer_Dereference1</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;NULL Pointer Dereference&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;476&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_476_Description" id="oc_476_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;A NULL pointer dereference occurs when the application
dereferences a pointer that it expects to be valid, but is NULL, typically
causing a crash or exit.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_476_Time of Introduction" id="oc_476_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_476_Applicable Platforms" id="oc_476_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;p&gt;Java&lt;/p&gt;
&lt;p&gt;.NET&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_476_Common Consequences" id="oc_476_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;NULL pointer dereferences usually result in the failure of the process
unless exception handling (on some platforms) is available and
implemented. Even when exception handling is being used, it can still be
very difficult to return the software to a safe state of
operation.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;In very rare circumstances and environments, code execution is
possible.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_476_Likelihood of Exploit" id="oc_476_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Medium&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_476_Demonstrative Examples" id="oc_476_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;NULL pointer dereference issue can occur through a number of flaws,
including race conditions, and simple programming omissions. While there are
no complete fixes aside from conscientious programming, the following steps
will go a long way to ensure that NULL pointer dereferences do not occur.
Before using a pointer, ensure that it is not equal to NULL:&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;if (pointer1 != NULL) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;/* make use of pointer1 */&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/* ... */&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;When freeing pointers, ensure they are not set to NULL, and be sure to
set them to NULL once they are freed:&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;if (pointer1 != NULL) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;free(pointer1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;pointer1 = NULL;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If you are working with a multi-threaded or otherwise asynchronous
environment, ensure that proper locking APIs are used to lock before the
if statement; and unlock when it has finished.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;This example takes an IP address from a user, verifies that it is
well formed and then looks up the hostname and copies it into a
buffer.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;void host_lookup(char *user_supplied_addr){&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;struct hostent *hp;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;in_addr_t *addr;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char hostname[64];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;in_addr_t inet_addr(const char *cp);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/*routine that ensures user_supplied_addr is in the right
format for conversion */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;validate_addr_form(user_supplied_addr);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;addr = inet_addr(user_supplied_addr);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;hp = gethostbyaddr( addr, sizeof(struct in_addr),
AF_INET);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcpy(hostname, hp-&amp;gt;h_name);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If an attacker provides an address that appears to be well-formed, but
the address does not resolve to a hostname, then the call to
gethostbyaddr() will return NULL. Since the code does not check the
return value from gethostbyaddr (CWE-252), a NULL pointer dereference
would then occur in the call to strcpy(). &lt;/p&gt;&lt;p&gt;Note that this example is also vulnerable to a buffer overflow (see
CWE-119).&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;In the following code, the programmer assumes that the system always
has a property named "cmd" defined. If an attacker can control the program's
environment so that "cmd" is not defined, the program throws a NULL pointer
exception when it attempts to call the trim() method.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;String cmd = System.getProperty("cmd");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;cmd = cmd.trim();&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_476_Observed Examples" id="oc_476_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3274" target="_blank"&gt;CVE-2005-3274&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;race condition causes a table to be corrupted if a
timer activates while it is being modified, leading to resultant NULL
dereference; also involves locking.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1912" target="_blank"&gt;CVE-2002-1912&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;large number of packets leads to NULL
dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0772" target="_blank"&gt;CVE-2005-0772&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;packet with invalid error status value triggers
NULL dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0079" target="_blank"&gt;CVE-2004-0079&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0365" target="_blank"&gt;CVE-2004-0365&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1013" target="_blank"&gt;CVE-2003-1013&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1000" target="_blank"&gt;CVE-2003-1000&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0389" target="_blank"&gt;CVE-2004-0389&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0119" target="_blank"&gt;CVE-2004-0119&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0458" target="_blank"&gt;CVE-2004-0458&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0401" target="_blank"&gt;CVE-2002-0401&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_476_Potential Mitigations" id="oc_476_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;If all pointers that could have been modified are sanity-checked
previous to use, nearly all NULL pointer dereferences can be
prevented.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p&gt;The choice could be made to use a language that is not susceptible to
these issues.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Check the results of all functions that return a value and verify that
the value is non-null before acting upon it.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Moderate&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;Checking the return value of the function will typically be
sufficient, however beware of race conditions (CWE-362) in a concurrent
environment.&lt;/p&gt;
&lt;p&gt;This solution does not handle the use of improperly initialized
variables (CWE-665).&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Identify all variables and data stores that receive information from
external sources, and apply input validation to make sure that they are
only initialized to expected values.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Explicitly initialize all your variables and other data stores, either
during declaration or just before the first usage.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Use automated static analysis tools that target this type of weakness.
Many modern techniques use data flow analysis to minimize the number of
false positives. This is not a perfect solution, since 100% accuracy and
coverage are not feasible.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Use dynamic tools and techniques that interact with the software using
large test suites with many diverse inputs, such as fuzz testing
(fuzzing), robustness testing, and fault injection. The software's
operation may slow down, but it should not become unstable, crash, or
generate incorrect results.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Identify error conditions that are not likely to occur during normal
usage and trigger them. For example, run the program under low memory
conditions, run with insufficient privileges or permissions, interrupt a
transaction before it is completed, or disable connectivity to basic
network services such as DNS. Monitor the software for any unexpected
behavior. If you trigger an unhandled exception or similar error that
was discovered and handled by the application's environment, it may
still indicate unexpected conditions that were not handled by the
application itself.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_476_Weakness Ordinalities" id="oc_476_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Resultant&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;NULL pointer dereferences are frequently resultant from rarely
encountered error conditions, since these are most likely to escape
detection during the testing phases.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_476_Relationships" id="oc_476_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Named Chain(s) this relationship pertains
to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;730&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=730" target="_blank"&gt;OWASP Top Ten 2004 Category A9 - Denial of Service&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;737&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=737" target="_blank"&gt;CERT C Secure Coding Section 03 - Expressions (EXP)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;742&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=742" target="_blank"&gt;CERT C Secure Coding Section 08 - Memory Management (MEM)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard&lt;/span&gt;734&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;808&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=808" target="_blank"&gt;2010 Top 25 - Weaknesses On the Cusp&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;373&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=373" target="_blank"&gt;State Synchronization Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;252&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=252" target="_blank"&gt;Unchecked Return Value&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Unchecked Return Value to NULL Pointer Dereference&lt;/span&gt;690&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;789&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=789" target="_blank"&gt;Uncontrolled Memory Allocation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_476_Taxonomy Mappings" id="oc_476_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null Dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null-pointer dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null Dereference (Null Pointer Dereference)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A9&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Denial of Service&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;EXP34-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Ensure a null pointer is not dereferenced&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM32-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Detect and handle memory allocation errors&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_476_White Box Definitions" id="oc_476_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. start statement that assigns a null value to the pointer&lt;/p&gt;
&lt;p&gt;2. end statement that dereferences a pointer&lt;/p&gt;
&lt;p&gt;3. the code path does not contain any other statement that assigns
value to the pointer&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_476_Content History" id="oc_476_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Relationships, Other Notes, Taxonomy Mappings,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Demonstrative Examples,
Other Notes, Potential Mitigations,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_203</key><name>Detection_of_Error_Condition_Without_Action</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Detection of Error Condition Without Action&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;390&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Class)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_390_Description" id="oc_390_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software detects a specific error, but takes no actions to
handle the error.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_390_Time of Introduction" id="oc_390_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_390_Applicable Platforms" id="oc_390_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_390_Likelihood of Exploit" id="oc_390_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Medium&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_390_Demonstrative Examples" id="oc_390_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following example attempts to allocate memory for a character.
After the call to malloc, an if statement is used to check whether the
malloc function failed.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;foo=malloc(sizeof(char)); //the next line checks to see if malloc
failed&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (foo==NULL) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;//We do nothing so we just ignore the error.&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The conditional successfully detects a NULL return value from malloc
indicating a failure, however it does not do anything to handle the
problem. Unhandled errors may have unexpected results and may cause the
program to crash or terminate.&lt;/p&gt;&lt;p&gt;Instead, the if block should contain statements that either attempt to
fix the problem or notify the user that an error has occurred and
continue processing or perform some cleanup and gracefully terminate the
program. The following example notifies the user that the malloc
function did not allocate the required memory resources and returns an
error code.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;foo=malloc(sizeof(char)); //the next line checks to see if malloc
failed&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (foo==NULL) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;printf("Malloc failed to allocate memory resources");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return -1;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;In the following C++ example the method readFile() will read the
file whose name is provided in the input parameter and will return the
contents of the file in char string. The method calls open() and read() may
result in errors if the file does not exist or does not contain any data to
read. These errors will be thrown when the is_open() method and good()
method indicate errors opening or reading the file. However, these errors
are not handled within the catch statement. Catch statements that do not
perform any processing will have unexpected results. In this case an empty
char string will be returned, and the file will not be properly
closed.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C++&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char* readfile (char *filename) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;try {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;// open input file&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;ifstream infile;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;infile.open(filename);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (!infile.is_open()) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;throw "Unable to open file " + filename;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// get length of file&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;infile.seekg (0, ios::end);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int length = infile.tellg();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;infile.seekg (0, ios::beg);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// allocate memory&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char *buffer = new char [length];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// read data from file&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;infile.read (buffer,length);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (!infile.good()) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;throw "Unable to read from file " + filename;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;infile.close();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return buffer;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;} &lt;/div&gt;
&lt;div style="font-size:90%;"&gt;catch (...) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;/* bug: insert code to handle this later */ &lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;} &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The catch statement should contain statements that either attempt to
fix the problem or notify the user that an error has occurred and
continue processing or perform some cleanup and gracefully terminate the
program. The following C++ example contains two catch statements. The
first of these will catch a specific error thrown within the try block,
and the second catch statement will catch all other errors from within
the catch block. Both catch statements will notify the user that an
error has occurred, close the file, and rethrow to the block that called
the readFile() method for further handling or possible termination of
the program.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C++&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char* readFile (char *filename) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;try {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;// open input file&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;ifstream infile;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;infile.open(filename);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (!infile.is_open()) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;throw "Unable to open file " + filename;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// get length of file&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;infile.seekg (0, ios::end);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int length = infile.tellg();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;infile.seekg (0, ios::beg);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// allocate memory&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char *buffer = new char [length];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// read data from file&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;infile.read (buffer,length);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (!infile.good()) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;throw "Unable to read from file " + filename;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;infile.close();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return buffer;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;} &lt;/div&gt;
&lt;div style="font-size:90%;"&gt;catch (char *str) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;printf("Error: %s \n", str);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;infile.close();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;throw str;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;} &lt;/div&gt;
&lt;div style="font-size:90%;"&gt;catch (...) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;printf("Error occurred trying to read from file
\n");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;infile.close();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;throw; &lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;In the following Java example the method readFile will read the file
whose name is provided in the input parameter and will return the contents
of the file in a String object. The constructor of the FileReader object and
the read method call may throw exceptions and therefore must be within a
try/catch block. While the catch statement in this example will catch thrown
exceptions in order for the method to compile, no processing is performed to
handle the thrown exceptions. Catch statements that do not perform any
processing will have unexpected results. In this case, this will result in
the return of a null String.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;public String readFile(String filename) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;String retString = null;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;try {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;// initialize File and FileReader objects&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;File file = new File(filename);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;FileReader fr = new FileReader(file);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// initialize character buffer&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;long fLen = file.length();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char[] cBuf = new char[(int) fLen];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// read data from file&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int iRead = fr.read(cBuf, 0, (int) fLen);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// close file&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;fr.close();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;retString = new String(cBuf);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;} catch (Exception ex) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;/* do nothing, but catch so it'll compile... */&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return retString;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The catch statement should contain statements that either attempt to
fix the problem, notify the user that an exception has been raised and
continue processing, or perform some cleanup and gracefully terminate
the program. The following Java example contains three catch statements.
The first of these will catch the FileNotFoundException that may be
thrown by the FileReader constructor called within the try/catch block.
The second catch statement will catch the IOException that may be thrown
by the read method called within the try/catch block. The third catch
statement will catch all other exceptions thrown within the try block.
For all catch statements the user is notified that the exception has
been thrown and the exception is rethrown to the block that called the
readFile() method for further processing or possible termination of the
program. Note that with Java it is usually good practice to use the
getMessage() method of the exception class to provide more information
to the user about the exception raised.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;public String readFile(String filename) throws
FileNotFoundException, IOException, Exception {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;String retString = null;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;try {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;// initialize File and FileReader objects&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;File file = new File(filename);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;FileReader fr = new FileReader(file);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// initialize character buffer&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;long fLen = file.length();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char [] cBuf = new char[(int) fLen];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// read data from file&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int iRead = fr.read(cBuf, 0, (int) fLen);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// close file&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;fr.close();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;retString = new String(cBuf);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;} catch (FileNotFoundException ex) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;System.err.println ("Error: FileNotFoundException opening
the input file: " + filename );&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;System.err.println ("" + ex.getMessage() );&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;throw new FileNotFoundException(ex.getMessage());&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;} catch (IOException ex) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;System.err.println("Error: IOException reading the input
file.\n" + ex.getMessage() );&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;throw new IOException(ex);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;} catch (Exception ex) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;System.err.println("Error: Exception reading the input
file.\n" + ex.getMessage() );&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;throw new Exception(ex);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return retString;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_390_Potential Mitigations" id="oc_390_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Properly handle each exception. This is the recommended solution.
Ensure that all exceptions are handled in such a way that you can be
sure of the state of your system at any given moment.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;If a function returns an error, it is important to either fix the
problem and try again, alert the user that an error has happened and let
the program continue, or alert the user and close and cleanup the
program.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Subject the software to extensive testing to discover some of the
possible instances of where/how errors or return values are not handled.
Consider testing techniques such as ad hoc, equivalence partitioning,
robustness and fault tolerance, mutation, and fuzzing.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_390_Relationships" id="oc_390_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;389&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=389" target="_blank"&gt;Error Conditions, Return Values, Status Codes&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;728&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=728" target="_blank"&gt;OWASP Top Ten 2004 Category A7 - Improper Error Handling&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;755&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=755" target="_blank"&gt;Improper Handling of Exceptional Conditions&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;401&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=401" target="_blank"&gt;Failure to Release Memory Before Removing Last Reference ('Memory Leak')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;600&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=600" target="_blank"&gt;Failure to Catch All Exceptions in Servlet &lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanAlsoBe&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;81&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=81" target="_blank"&gt;Improper Sanitization of Script in an Error Message Web Page&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_390_Taxonomy Mappings" id="oc_390_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Improper error handling&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_390_Related Attack Patterns" id="oc_390_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org7.html" target="_blank"&gt;7&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Blind SQL Injection&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org66.html" target="_blank"&gt;66&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;SQL Injection&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org83.html" target="_blank"&gt;83&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;XPath Injection&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_390_Content History" id="oc_390_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships, Other Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples, Description, Other Notes,
Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Improper Error
Handling&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_222</key><name>Off_by_One_Error_in_Arrays</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Off-by-one Error&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;193&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_193_Description" id="oc_193_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;A product calculates or uses an incorrect maximum or minimum
value that is 1 more, or 1 less, than the correct value.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_193_Alternate Terms" id="oc_193_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;off-by-five:&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;p&gt;An "off-by-five" error was reported for sudo in 2002 (CVE-2002-0184),
but that is more like a "length calculation" error.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_193_Time of Introduction" id="oc_193_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_193_Applicable Platforms" id="oc_193_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_193_Demonstrative Examples" id="oc_193_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code allocates memory for a maximum number of widgets.
It then gets a user-specified number of widgets, making sure that the user
does not request too many. It then initializes the elements of the array
using InitializeWidget(). Because the number of widgets can vary for each
request, the code inserts a NULL pointer to signify the location of the last
widget.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int i;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;unsigned int numWidgets;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Widget **WidgetList;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;numWidgets = GetUntrustedSizeValue();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if ((numWidgets == 0) || (numWidgets &amp;gt; MAX_NUM_WIDGETS))
{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ExitError("Incorrect number of widgets requested!");&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;WidgetList = (Widget **)malloc(numWidgets * sizeof(Widget
*));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;printf("WidgetList ptr=%p\n", WidgetList);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;numWidgets; i++) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;WidgetList[i] = InitializeWidget();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;WidgetList[numWidgets] = NULL;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;showWidgets(WidgetList);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, this code contains an off-by-one calculation error. It
allocates exactly enough space to contain the specified number of
widgets, but it does not include the space for the NULL pointer. As a
result, the allocated buffer is smaller than it is supposed to be
(CWE-131). So if the user ever requests MAX_NUM_WIDGETS, there is an
off-by-one buffer overflow when the NULL is assigned. Depending on the
environment and compilation settings, this could cause memory
corruption.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following C/C++ example demonstrates the Off-by-one error in the
main method of a pattern matching utility that looks for a specific pattern
within a specific file. The main method uses the string copy method,
strncpy, to copy the command line user input file name and pattern to the
Filename and Pattern character arrays respectively. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int main(int argc, char **argv)&lt;/div&gt;&lt;div style="font-size:90%;"&gt;{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char Filename[256];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char Pattern[32];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* Validate number of parameters and ensure valid content
*/&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy filename parameter to variable, may cause
off-by-one overflow */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(Filename, argv[1], sizeof(Filename));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy pattern parameter to variable, may cause off-by-one
overflow */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(Pattern, argv[2], sizeof(Pattern));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("Searching file: %s for the pattern: %s\n", Filename,
Pattern);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;Scan_File(Filename, Pattern);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the calls to strncpy use the sizeof method call for the size
parameter that does not take into account that the strncpy will add a
null terminator to each character array. Therefore if a user enters a
filename or pattern that are the same size as (or larger than) their
respective character arrays a null terminator will be added beyond the
end of the buffer for the character arrays creating an off-by-one buffer
overflow. In addition to creating a buffer overflow that may cause a
memory address to be overwritten, if the character arrays are output to
the user through the printf method the memory addresses at the overflow
location may be output to the user.&lt;/p&gt;&lt;p&gt;To fix this problem, be sure to subtract 1 from the sizeof() call to
allow room for the null byte to be added.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy filename parameter to variable, no off-by-one overflow
*/&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncpy(Filename, argv[2], sizeof(Filename)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy pattern parameter to variable, no off-by-one overflow
*/&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncpy(Pattern, argv[3], sizeof(Pattern)-1);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;Similarly, this example uses the strncat and snprintf functions
incorrectly, failing to account for the null character function will
add.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char lastname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char firstname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char name[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char fullname[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, firstname, sizeof(name));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, lastname, sizeof(name));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;snprintf(fullname, sizeof(fullname), "%s", name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;By leaving a free byte at the end of the buffers for a null character
to be added, the off-by-one weakness is avoided.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char lastname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char firstname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char name[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char fullname[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, firstname, sizeof(name)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, lastname, sizeof(name)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;snprintf(fullname, sizeof(fullname)-1), "%s", name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 4&lt;/p&gt;&lt;p&gt;The Off-by-one error can also be manifested when reading characters
of a character array using a for loop that has the incorrect size as a
continuation condition and attempts to read beyond the end of the buffer for
the character array as shown in the following example. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#define PATH_SIZE 60&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char filename[PATH_SIZE];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;=PATH_SIZE; i++) {&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char c = getc();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (c == 'EOF') {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;filename[i] = '\0';&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;filename[i] = getc();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;PATH_SIZE; i++) {&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 5&lt;/p&gt;&lt;p&gt;As another example the Off-by-one error can occur when using the
sprintf library function to copy a string variable to a formatted string
variable and the original string variable comes from an untrusted source. As
in the following example where a local function, setFilename is used to
store the value of a filename to a database but first uses sprintf to format
the filename. The setFilename function includes an input parameter with the
name of the file that is used as the copy source in the sprintf function.
The sprintf function will copy the file name to a char array of size 20 and
specifies the format of the new variable as 16 characters followed by the
file extension .dat.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int setFilename(char *filename) { &lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char name[20]; &lt;/div&gt;
&lt;div style="font-size:90%;"&gt;sprintf(name, "%16s.dat", filename);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int success = saveFormattedFilenameToDB(name);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt; return success; &lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;} &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However this will cause an Off-by-one error if the original filename
is exactly 16 characters or larger because the format of 16 characters
with the file extension is exactly 20 characters and does not take into
account the required null terminator that will be placed at the end of
the string.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_193_Observed Examples" id="oc_193_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0252" target="_blank"&gt;CVE-2003-0252&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1391" target="_blank"&gt;CVE-2001-1391&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0083" target="_blank"&gt;CVE-2002-0083&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0653" target="_blank"&gt;CVE-2002-0653&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0844" target="_blank"&gt;CVE-2002-0844&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1568" target="_blank"&gt;CVE-1999-1568&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0346" target="_blank"&gt;CVE-2004-0346&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0005" target="_blank"&gt;CVE-2004-0005&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0356" target="_blank"&gt;CVE-2003-0356&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1496" target="_blank"&gt;CVE-2001-1496&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0342" target="_blank"&gt;CVE-2004-0342&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;This is an interesting example that might not be
an off-by-one.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0609" target="_blank"&gt;CVE-2001-0609&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;An off-by-one enables a terminating null to be
overwritten, which causes 2 strings to be merged and enable a format
string.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1745" target="_blank"&gt;CVE-2002-1745&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error allows source code disclosure of
files with 4 letter extensions that match an accepted 3-letter
extension.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1816" target="_blank"&gt;CVE-2002-1816&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one buffer
overflow.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1721" target="_blank"&gt;CVE-2002-1721&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error causes an snprintf call to
overwrite a critical internal variable with a null
value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0466" target="_blank"&gt;CVE-2003-0466&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error in function used in many products
leads to a buffer overflow during pathname management, as demonstrated using
multiple commands in an FTP server.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0625" target="_blank"&gt;CVE-2003-0625&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error allows read of sensitive memory
via a malformed request.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4574" target="_blank"&gt;CVE-2006-4574&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: security monitoring product has an
off-by-one error that leads to unexpected length values, triggering an
assertion.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_193_Potential Mitigations" id="oc_193_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt; When copying character arrays or using character manipulation
methods, the correct size parameter must be used to account for the null
terminator that needs to be added at the end of the array. Some examples
of functions susceptible to this weakness in C include strcpy(),
strncpy(), strcat(), strncat(), printf(), sprintf(), scanf() and
sscanf(). &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_193_Relationships" id="oc_193_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;682&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=682" target="_blank"&gt;Incorrect Calculation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;741&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=741" target="_blank"&gt;CERT C Secure Coding Section 07 - Characters and Strings (STR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;170&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=170" target="_blank"&gt;Improper Null Termination&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;617&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=617" target="_blank"&gt;Reachable Assertion&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_193_Relationship Notes" id="oc_193_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;This is not always a buffer overflow. For example, an off-by-one error
could be a factor in a partial comparison, a read from the wrong memory
location, an incorrect conditional, etc.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Research Gaps"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Research Gaps&lt;/div&gt;&lt;div name="oc_193_Research Gaps" id="oc_193_Research Gaps" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Under-studied. It requires careful code analysis or black box testing,
where inputs of excessive length might not cause an error. Off-by-ones are
likely triggered by extensive fuzzing, with the attendant diagnostic
problems.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_193_Taxonomy Mappings" id="oc_193_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one Error&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR31-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Guarantee that storage for strings has sufficient space for
character data and the null terminator&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_193_References" id="oc_193_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Halvar Flake. "Third Generation Exploits". presentation at Black Hat Europe
2001. &amp;lt;&lt;a href="http://www.blackhat.com/presentations/bh-europe-01/halvar-flake/bh-europe-01-halvarflake.ppt" target="_blank"&gt;http://www.blackhat.com/presentations/bh-europe-01/halvar-flake/bh-europe-01-halvarflake.ppt&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Steve Christey. "Off-by-one errors: a brief explanation". Secprog and SC-L mailing list
posts. 2004-05-05. &amp;lt;&lt;a href="http://marc.theaimsgroup.com/?l=secprog&amp;amp;m=108379742110553&amp;amp;w=2" target="_blank"&gt;http://marc.theaimsgroup.com/?l=secprog&amp;amp;m=108379742110553&amp;amp;w=2&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;klog. "The Frame Pointer Overwrite". Phrack Issue 55, Chapter 8. 1999-09-09. &amp;lt;&lt;a href="http://kaizo.org/mirrors/phrack/phrack55/P55-08" target="_blank"&gt;http://kaizo.org/mirrors/phrack/phrack55/P55-08&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;G. Hoglund and
G. McGraw. "Exploiting Software: How to Break Code (The buffer overflow
chapter)". Addison-Wesley. February 2004. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_193_Content History" id="oc_193_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Common Consequences,
Relationships, Observed Example, Relationship Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples,
Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1394</key><name>Potential_Off_by_One_Error_in_Loops</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Off-by-one Error&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;193&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_193_Description" id="oc_193_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;A product calculates or uses an incorrect maximum or minimum
value that is 1 more, or 1 less, than the correct value.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_193_Alternate Terms" id="oc_193_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;off-by-five:&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;p&gt;An "off-by-five" error was reported for sudo in 2002 (CVE-2002-0184),
but that is more like a "length calculation" error.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_193_Time of Introduction" id="oc_193_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_193_Applicable Platforms" id="oc_193_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_193_Demonstrative Examples" id="oc_193_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code allocates memory for a maximum number of widgets.
It then gets a user-specified number of widgets, making sure that the user
does not request too many. It then initializes the elements of the array
using InitializeWidget(). Because the number of widgets can vary for each
request, the code inserts a NULL pointer to signify the location of the last
widget.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int i;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;unsigned int numWidgets;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Widget **WidgetList;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;numWidgets = GetUntrustedSizeValue();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if ((numWidgets == 0) || (numWidgets &amp;gt; MAX_NUM_WIDGETS))
{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ExitError("Incorrect number of widgets requested!");&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;WidgetList = (Widget **)malloc(numWidgets * sizeof(Widget
*));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;printf("WidgetList ptr=%p\n", WidgetList);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;numWidgets; i++) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;WidgetList[i] = InitializeWidget();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;WidgetList[numWidgets] = NULL;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;showWidgets(WidgetList);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, this code contains an off-by-one calculation error. It
allocates exactly enough space to contain the specified number of
widgets, but it does not include the space for the NULL pointer. As a
result, the allocated buffer is smaller than it is supposed to be
(CWE-131). So if the user ever requests MAX_NUM_WIDGETS, there is an
off-by-one buffer overflow when the NULL is assigned. Depending on the
environment and compilation settings, this could cause memory
corruption.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following C/C++ example demonstrates the Off-by-one error in the
main method of a pattern matching utility that looks for a specific pattern
within a specific file. The main method uses the string copy method,
strncpy, to copy the command line user input file name and pattern to the
Filename and Pattern character arrays respectively. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int main(int argc, char **argv)&lt;/div&gt;&lt;div style="font-size:90%;"&gt;{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char Filename[256];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char Pattern[32];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* Validate number of parameters and ensure valid content
*/&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy filename parameter to variable, may cause
off-by-one overflow */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(Filename, argv[1], sizeof(Filename));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy pattern parameter to variable, may cause off-by-one
overflow */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(Pattern, argv[2], sizeof(Pattern));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("Searching file: %s for the pattern: %s\n", Filename,
Pattern);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;Scan_File(Filename, Pattern);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the calls to strncpy use the sizeof method call for the size
parameter that does not take into account that the strncpy will add a
null terminator to each character array. Therefore if a user enters a
filename or pattern that are the same size as (or larger than) their
respective character arrays a null terminator will be added beyond the
end of the buffer for the character arrays creating an off-by-one buffer
overflow. In addition to creating a buffer overflow that may cause a
memory address to be overwritten, if the character arrays are output to
the user through the printf method the memory addresses at the overflow
location may be output to the user.&lt;/p&gt;&lt;p&gt;To fix this problem, be sure to subtract 1 from the sizeof() call to
allow room for the null byte to be added.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy filename parameter to variable, no off-by-one overflow
*/&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncpy(Filename, argv[2], sizeof(Filename)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy pattern parameter to variable, no off-by-one overflow
*/&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncpy(Pattern, argv[3], sizeof(Pattern)-1);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;Similarly, this example uses the strncat and snprintf functions
incorrectly, failing to account for the null character function will
add.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char lastname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char firstname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char name[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char fullname[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, firstname, sizeof(name));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, lastname, sizeof(name));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;snprintf(fullname, sizeof(fullname), "%s", name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;By leaving a free byte at the end of the buffers for a null character
to be added, the off-by-one weakness is avoided.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char lastname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char firstname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char name[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char fullname[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, firstname, sizeof(name)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, lastname, sizeof(name)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;snprintf(fullname, sizeof(fullname)-1), "%s", name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 4&lt;/p&gt;&lt;p&gt;The Off-by-one error can also be manifested when reading characters
of a character array using a for loop that has the incorrect size as a
continuation condition and attempts to read beyond the end of the buffer for
the character array as shown in the following example. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#define PATH_SIZE 60&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char filename[PATH_SIZE];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;=PATH_SIZE; i++) {&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char c = getc();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (c == 'EOF') {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;filename[i] = '\0';&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;filename[i] = getc();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;PATH_SIZE; i++) {&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 5&lt;/p&gt;&lt;p&gt;As another example the Off-by-one error can occur when using the
sprintf library function to copy a string variable to a formatted string
variable and the original string variable comes from an untrusted source. As
in the following example where a local function, setFilename is used to
store the value of a filename to a database but first uses sprintf to format
the filename. The setFilename function includes an input parameter with the
name of the file that is used as the copy source in the sprintf function.
The sprintf function will copy the file name to a char array of size 20 and
specifies the format of the new variable as 16 characters followed by the
file extension .dat.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int setFilename(char *filename) { &lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char name[20]; &lt;/div&gt;
&lt;div style="font-size:90%;"&gt;sprintf(name, "%16s.dat", filename);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int success = saveFormattedFilenameToDB(name);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt; return success; &lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;} &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However this will cause an Off-by-one error if the original filename
is exactly 16 characters or larger because the format of 16 characters
with the file extension is exactly 20 characters and does not take into
account the required null terminator that will be placed at the end of
the string.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_193_Observed Examples" id="oc_193_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0252" target="_blank"&gt;CVE-2003-0252&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1391" target="_blank"&gt;CVE-2001-1391&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0083" target="_blank"&gt;CVE-2002-0083&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0653" target="_blank"&gt;CVE-2002-0653&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0844" target="_blank"&gt;CVE-2002-0844&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1568" target="_blank"&gt;CVE-1999-1568&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0346" target="_blank"&gt;CVE-2004-0346&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0005" target="_blank"&gt;CVE-2004-0005&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0356" target="_blank"&gt;CVE-2003-0356&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1496" target="_blank"&gt;CVE-2001-1496&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0342" target="_blank"&gt;CVE-2004-0342&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;This is an interesting example that might not be
an off-by-one.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0609" target="_blank"&gt;CVE-2001-0609&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;An off-by-one enables a terminating null to be
overwritten, which causes 2 strings to be merged and enable a format
string.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1745" target="_blank"&gt;CVE-2002-1745&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error allows source code disclosure of
files with 4 letter extensions that match an accepted 3-letter
extension.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1816" target="_blank"&gt;CVE-2002-1816&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one buffer
overflow.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1721" target="_blank"&gt;CVE-2002-1721&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error causes an snprintf call to
overwrite a critical internal variable with a null
value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0466" target="_blank"&gt;CVE-2003-0466&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error in function used in many products
leads to a buffer overflow during pathname management, as demonstrated using
multiple commands in an FTP server.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0625" target="_blank"&gt;CVE-2003-0625&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error allows read of sensitive memory
via a malformed request.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4574" target="_blank"&gt;CVE-2006-4574&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: security monitoring product has an
off-by-one error that leads to unexpected length values, triggering an
assertion.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_193_Potential Mitigations" id="oc_193_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt; When copying character arrays or using character manipulation
methods, the correct size parameter must be used to account for the null
terminator that needs to be added at the end of the array. Some examples
of functions susceptible to this weakness in C include strcpy(),
strncpy(), strcat(), strncat(), printf(), sprintf(), scanf() and
sscanf(). &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_193_Relationships" id="oc_193_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;682&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=682" target="_blank"&gt;Incorrect Calculation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;741&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=741" target="_blank"&gt;CERT C Secure Coding Section 07 - Characters and Strings (STR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;170&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=170" target="_blank"&gt;Improper Null Termination&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;617&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=617" target="_blank"&gt;Reachable Assertion&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_193_Relationship Notes" id="oc_193_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;This is not always a buffer overflow. For example, an off-by-one error
could be a factor in a partial comparison, a read from the wrong memory
location, an incorrect conditional, etc.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Research Gaps"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Research Gaps&lt;/div&gt;&lt;div name="oc_193_Research Gaps" id="oc_193_Research Gaps" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Under-studied. It requires careful code analysis or black box testing,
where inputs of excessive length might not cause an error. Off-by-ones are
likely triggered by extensive fuzzing, with the attendant diagnostic
problems.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_193_Taxonomy Mappings" id="oc_193_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one Error&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR31-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Guarantee that storage for strings has sufficient space for
character data and the null terminator&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_193_References" id="oc_193_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Halvar Flake. "Third Generation Exploits". presentation at Black Hat Europe
2001. &amp;lt;&lt;a href="http://www.blackhat.com/presentations/bh-europe-01/halvar-flake/bh-europe-01-halvarflake.ppt" target="_blank"&gt;http://www.blackhat.com/presentations/bh-europe-01/halvar-flake/bh-europe-01-halvarflake.ppt&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Steve Christey. "Off-by-one errors: a brief explanation". Secprog and SC-L mailing list
posts. 2004-05-05. &amp;lt;&lt;a href="http://marc.theaimsgroup.com/?l=secprog&amp;amp;m=108379742110553&amp;amp;w=2" target="_blank"&gt;http://marc.theaimsgroup.com/?l=secprog&amp;amp;m=108379742110553&amp;amp;w=2&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;klog. "The Frame Pointer Overwrite". Phrack Issue 55, Chapter 8. 1999-09-09. &amp;lt;&lt;a href="http://kaizo.org/mirrors/phrack/phrack55/P55-08" target="_blank"&gt;http://kaizo.org/mirrors/phrack/phrack55/P55-08&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;G. Hoglund and
G. McGraw. "Exploiting Software: How to Break Code (The buffer overflow
chapter)". Addison-Wesley. February 2004. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_193_Content History" id="oc_193_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Common Consequences,
Relationships, Observed Example, Relationship Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples,
Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1860</key><name>R16_04_Different_Identifiers_In_Function_Definition_And_Prototype</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 16-4&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11048&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            For every function, the same identifiers shall be usedby its prototype and by
            its definition.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1873</key><name>R19_13_Pound_Preprocessor_Operator_Is_Used</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 19-13&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 19-13&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11061&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Use of the &amp;#39;#&amp;#39; or &amp;#39;##&amp;#39; operators is not allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1822</key><name>R05_05_Identifier_With_Static_Storage_Reused</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 5-5&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11010&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
        Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                Identifiers of objects or functions with static duration shall not be reused.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1876</key><name>R20_06_Using_Offsetof_Macro_From_Stddef_H</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 20-6&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 20-6&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11064&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Use of the &amp;#39;offsetof&amp;#39; macro, from the library &amp;lt;stddef.h&amp;gt;, is not allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_224</key><name>Off_by_One_Error_in_Methods</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Off-by-one Error&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;193&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_193_Description" id="oc_193_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;A product calculates or uses an incorrect maximum or minimum
value that is 1 more, or 1 less, than the correct value.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_193_Alternate Terms" id="oc_193_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;off-by-five:&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;p&gt;An "off-by-five" error was reported for sudo in 2002 (CVE-2002-0184),
but that is more like a "length calculation" error.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_193_Time of Introduction" id="oc_193_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_193_Applicable Platforms" id="oc_193_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_193_Demonstrative Examples" id="oc_193_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code allocates memory for a maximum number of widgets.
It then gets a user-specified number of widgets, making sure that the user
does not request too many. It then initializes the elements of the array
using InitializeWidget(). Because the number of widgets can vary for each
request, the code inserts a NULL pointer to signify the location of the last
widget.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int i;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;unsigned int numWidgets;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Widget **WidgetList;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;numWidgets = GetUntrustedSizeValue();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if ((numWidgets == 0) || (numWidgets &amp;gt; MAX_NUM_WIDGETS))
{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ExitError("Incorrect number of widgets requested!");&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;WidgetList = (Widget **)malloc(numWidgets * sizeof(Widget
*));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;printf("WidgetList ptr=%p\n", WidgetList);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;numWidgets; i++) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;WidgetList[i] = InitializeWidget();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;WidgetList[numWidgets] = NULL;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;showWidgets(WidgetList);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, this code contains an off-by-one calculation error. It
allocates exactly enough space to contain the specified number of
widgets, but it does not include the space for the NULL pointer. As a
result, the allocated buffer is smaller than it is supposed to be
(CWE-131). So if the user ever requests MAX_NUM_WIDGETS, there is an
off-by-one buffer overflow when the NULL is assigned. Depending on the
environment and compilation settings, this could cause memory
corruption.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following C/C++ example demonstrates the Off-by-one error in the
main method of a pattern matching utility that looks for a specific pattern
within a specific file. The main method uses the string copy method,
strncpy, to copy the command line user input file name and pattern to the
Filename and Pattern character arrays respectively. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int main(int argc, char **argv)&lt;/div&gt;&lt;div style="font-size:90%;"&gt;{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char Filename[256];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char Pattern[32];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* Validate number of parameters and ensure valid content
*/&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy filename parameter to variable, may cause
off-by-one overflow */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(Filename, argv[1], sizeof(Filename));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy pattern parameter to variable, may cause off-by-one
overflow */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(Pattern, argv[2], sizeof(Pattern));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("Searching file: %s for the pattern: %s\n", Filename,
Pattern);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;Scan_File(Filename, Pattern);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the calls to strncpy use the sizeof method call for the size
parameter that does not take into account that the strncpy will add a
null terminator to each character array. Therefore if a user enters a
filename or pattern that are the same size as (or larger than) their
respective character arrays a null terminator will be added beyond the
end of the buffer for the character arrays creating an off-by-one buffer
overflow. In addition to creating a buffer overflow that may cause a
memory address to be overwritten, if the character arrays are output to
the user through the printf method the memory addresses at the overflow
location may be output to the user.&lt;/p&gt;&lt;p&gt;To fix this problem, be sure to subtract 1 from the sizeof() call to
allow room for the null byte to be added.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy filename parameter to variable, no off-by-one overflow
*/&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncpy(Filename, argv[2], sizeof(Filename)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy pattern parameter to variable, no off-by-one overflow
*/&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncpy(Pattern, argv[3], sizeof(Pattern)-1);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;Similarly, this example uses the strncat and snprintf functions
incorrectly, failing to account for the null character function will
add.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char lastname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char firstname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char name[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char fullname[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, firstname, sizeof(name));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, lastname, sizeof(name));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;snprintf(fullname, sizeof(fullname), "%s", name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;By leaving a free byte at the end of the buffers for a null character
to be added, the off-by-one weakness is avoided.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char lastname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char firstname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char name[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char fullname[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, firstname, sizeof(name)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, lastname, sizeof(name)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;snprintf(fullname, sizeof(fullname)-1), "%s", name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 4&lt;/p&gt;&lt;p&gt;The Off-by-one error can also be manifested when reading characters
of a character array using a for loop that has the incorrect size as a
continuation condition and attempts to read beyond the end of the buffer for
the character array as shown in the following example. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#define PATH_SIZE 60&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char filename[PATH_SIZE];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;=PATH_SIZE; i++) {&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char c = getc();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (c == 'EOF') {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;filename[i] = '\0';&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;filename[i] = getc();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;PATH_SIZE; i++) {&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 5&lt;/p&gt;&lt;p&gt;As another example the Off-by-one error can occur when using the
sprintf library function to copy a string variable to a formatted string
variable and the original string variable comes from an untrusted source. As
in the following example where a local function, setFilename is used to
store the value of a filename to a database but first uses sprintf to format
the filename. The setFilename function includes an input parameter with the
name of the file that is used as the copy source in the sprintf function.
The sprintf function will copy the file name to a char array of size 20 and
specifies the format of the new variable as 16 characters followed by the
file extension .dat.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int setFilename(char *filename) { &lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char name[20]; &lt;/div&gt;
&lt;div style="font-size:90%;"&gt;sprintf(name, "%16s.dat", filename);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int success = saveFormattedFilenameToDB(name);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt; return success; &lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;} &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However this will cause an Off-by-one error if the original filename
is exactly 16 characters or larger because the format of 16 characters
with the file extension is exactly 20 characters and does not take into
account the required null terminator that will be placed at the end of
the string.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_193_Observed Examples" id="oc_193_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0252" target="_blank"&gt;CVE-2003-0252&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1391" target="_blank"&gt;CVE-2001-1391&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0083" target="_blank"&gt;CVE-2002-0083&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0653" target="_blank"&gt;CVE-2002-0653&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0844" target="_blank"&gt;CVE-2002-0844&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1568" target="_blank"&gt;CVE-1999-1568&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0346" target="_blank"&gt;CVE-2004-0346&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0005" target="_blank"&gt;CVE-2004-0005&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0356" target="_blank"&gt;CVE-2003-0356&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1496" target="_blank"&gt;CVE-2001-1496&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0342" target="_blank"&gt;CVE-2004-0342&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;This is an interesting example that might not be
an off-by-one.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0609" target="_blank"&gt;CVE-2001-0609&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;An off-by-one enables a terminating null to be
overwritten, which causes 2 strings to be merged and enable a format
string.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1745" target="_blank"&gt;CVE-2002-1745&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error allows source code disclosure of
files with 4 letter extensions that match an accepted 3-letter
extension.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1816" target="_blank"&gt;CVE-2002-1816&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one buffer
overflow.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1721" target="_blank"&gt;CVE-2002-1721&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error causes an snprintf call to
overwrite a critical internal variable with a null
value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0466" target="_blank"&gt;CVE-2003-0466&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error in function used in many products
leads to a buffer overflow during pathname management, as demonstrated using
multiple commands in an FTP server.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0625" target="_blank"&gt;CVE-2003-0625&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error allows read of sensitive memory
via a malformed request.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4574" target="_blank"&gt;CVE-2006-4574&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: security monitoring product has an
off-by-one error that leads to unexpected length values, triggering an
assertion.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_193_Potential Mitigations" id="oc_193_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt; When copying character arrays or using character manipulation
methods, the correct size parameter must be used to account for the null
terminator that needs to be added at the end of the array. Some examples
of functions susceptible to this weakness in C include strcpy(),
strncpy(), strcat(), strncat(), printf(), sprintf(), scanf() and
sscanf(). &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_193_Relationships" id="oc_193_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;682&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=682" target="_blank"&gt;Incorrect Calculation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;741&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=741" target="_blank"&gt;CERT C Secure Coding Section 07 - Characters and Strings (STR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;170&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=170" target="_blank"&gt;Improper Null Termination&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;617&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=617" target="_blank"&gt;Reachable Assertion&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_193_Relationship Notes" id="oc_193_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;This is not always a buffer overflow. For example, an off-by-one error
could be a factor in a partial comparison, a read from the wrong memory
location, an incorrect conditional, etc.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Research Gaps"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Research Gaps&lt;/div&gt;&lt;div name="oc_193_Research Gaps" id="oc_193_Research Gaps" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Under-studied. It requires careful code analysis or black box testing,
where inputs of excessive length might not cause an error. Off-by-ones are
likely triggered by extensive fuzzing, with the attendant diagnostic
problems.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_193_Taxonomy Mappings" id="oc_193_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one Error&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR31-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Guarantee that storage for strings has sufficient space for
character data and the null terminator&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_193_References" id="oc_193_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Halvar Flake. "Third Generation Exploits". presentation at Black Hat Europe
2001. &amp;lt;&lt;a href="http://www.blackhat.com/presentations/bh-europe-01/halvar-flake/bh-europe-01-halvarflake.ppt" target="_blank"&gt;http://www.blackhat.com/presentations/bh-europe-01/halvar-flake/bh-europe-01-halvarflake.ppt&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Steve Christey. "Off-by-one errors: a brief explanation". Secprog and SC-L mailing list
posts. 2004-05-05. &amp;lt;&lt;a href="http://marc.theaimsgroup.com/?l=secprog&amp;amp;m=108379742110553&amp;amp;w=2" target="_blank"&gt;http://marc.theaimsgroup.com/?l=secprog&amp;amp;m=108379742110553&amp;amp;w=2&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;klog. "The Frame Pointer Overwrite". Phrack Issue 55, Chapter 8. 1999-09-09. &amp;lt;&lt;a href="http://kaizo.org/mirrors/phrack/phrack55/P55-08" target="_blank"&gt;http://kaizo.org/mirrors/phrack/phrack55/P55-08&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;G. Hoglund and
G. McGraw. "Exploiting Software: How to Break Code (The buffer overflow
chapter)". Addison-Wesley. February 2004. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_193_Content History" id="oc_193_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Common Consequences,
Relationships, Observed Example, Relationship Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples,
Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3899</key><name>Uncontrolled_Recursion</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Uncontrolled Recursion&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;674&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_674_Description" id="oc_674_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The product does not properly control the amount of recursion
that takes place, which consumes excessive resources, such as allocated memory
or the program stack.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_674_Alternate Terms" id="oc_674_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Stack Exhaustion&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_674_Time of Introduction" id="oc_674_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_674_Applicable Platforms" id="oc_674_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_674_Common Consequences" id="oc_674_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Resources including CPU, memory, and stack memory could be rapidly
consumed or exhausted, eventually leading to an exit or crash.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Confidentiality&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;In some cases, an application's interpreter might kill a process or
thread that appears to be consuming too much resources, such as with
PHP's memory_limit setting. When the interpreter kills the
process/thread, it might report an error containing detailed information
such as the application's installation path.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_674_Observed Examples" id="oc_674_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-1285" target="_blank"&gt;CVE-2007-1285&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Deeply nested arrays trigger stack
exhaustion.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-3409" target="_blank"&gt;CVE-2007-3409&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Self-referencing pointers create infinite loop and
resultant stack exhaustion.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_674_Potential Mitigations" id="oc_674_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Limit the number of recursive calls to a reasonable number.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_674_Relationships" id="oc_674_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;361&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=361" target="_blank"&gt;Time and State&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;691&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=691" target="_blank"&gt;Insufficient Control Flow Management&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;730&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=730" target="_blank"&gt;OWASP Top Ten 2004 Category A9 - Denial of Service&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Affected Resources"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Affected Resources&lt;/div&gt;&lt;div name="oc_674_Affected Resources" id="oc_674_Affected Resources" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_674_Taxonomy Mappings" id="oc_674_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A9&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Denial of Service&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_674_Related Attack Patterns" id="oc_674_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org82.html" target="_blank"&gt;82&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Violating Implicit Assumptions Regarding XML Content (aka XML Denial of Service (XDoS))&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org99.html" target="_blank"&gt;99&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;XML Parser Attack&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_674_Content History" id="oc_674_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Related Attack Patterns&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1827</key><name>R06_04_Bit_Fields_Type</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 6-4&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11015&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            The only types allowed to be used as bit fields are signed int and unsigned int.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_320</key><name>Environment_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Improper Sanitization of Special Elements used in a Command ('Command Injection')&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;77&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Class)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_77_Description" id="oc_77_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software constructs all or part of a command using
externally-influenced input from an upstream component, but it does not sanitize
or incorrectly sanitizes special elements that could modify the intended command
when it is sent to a downstream component.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt; Command injection vulnerabilities typically occur when:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. Data enters the application from an untrusted source.&lt;/p&gt;
&lt;p&gt;2. The data is part of a string that is executed as a command by the
application.&lt;/p&gt;
&lt;p&gt;3. By executing the command, the application gives an attacker a
privilege or capability that the attacker would not otherwise
have.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_77_Time of Introduction" id="oc_77_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_77_Applicable Platforms" id="oc_77_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_77_Common Consequences" id="oc_77_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Access Control&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Command injection allows for the execution of arbitrary commands and
code by the attacker.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt; If a malicious user injects a character (such as a semi-colon) that
delimits the end of one command and the beginning of another, it may be
possible to then insert an entirely new and unrelated command that was
not intended to be executed. &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_77_Likelihood of Exploit" id="oc_77_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Very High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_77_Demonstrative Examples" id="oc_77_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following simple program accepts a filename as a command line
argument and displays the contents of the file back to the user. The program
is installed setuid root because it is intended for use as a learning tool
to allow system administrators in-training to inspect privileged system
files without giving them the ability to modify them or damage the
system.&lt;/p&gt;&lt;div class="indent "&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int main(char* argc, char** argv) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char cmd[CMD_MAX] = "/usr/bin/cat ";&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcat(cmd, argv[1]);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;system(cmd);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Because the program runs with root privileges, the call to system()
also executes with root privileges. If a user specifies a standard
filename, the call works as expected. However, if an attacker passes a
string of the form ";rm -rf /", then the call to system() fails to
execute cat due to a lack of arguments and then plows on to recursively
delete the contents of the root partition.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following code is from an administrative web application
designed to allow users to kick off a backup of an Oracle database using a
batch-file wrapper around the rman utility and then run a cleanup.bat script
to delete some temporary files. The script rmanDB.bat accepts a single
command line parameter, which specifies what type of backup to perform.
Because access to the database is restricted, the application runs the
backup as a privileged user.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;String btype = request.getParameter("backuptype");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;String cmd = new String("cmd.exe /K \"&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;c:\\util\\rmanDB.bat "&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;+btype+&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;"&amp;amp;&amp;amp;c:\\utl\\cleanup.bat\"")&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;System.Runtime.getRuntime().exec(cmd);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The problem here is that the program does not do any validation on the
backuptype parameter read from the user. Typically the Runtime.exec()
function will not execute multiple commands, but in this case the
program first runs the cmd.exe shell in order to run multiple commands
with a single call to Runtime.exec(). Once the shell is invoked, it will
happily execute multiple commands separated by two ampersands. If an
attacker passes a string of the form "&amp;amp; del c:\\dbms\\*.*", then
the application will execute this command along with the others
specified by the program. Because of the nature of the application, it
runs with the privileges necessary to interact with the database, which
means whatever command the attacker injects will run with those
privileges as well.&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;The following code from a system utility uses the system property
APPHOME to determine the directory in which it is installed and then
executes an initialization script based on a relative path from the
specified directory.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;String home = System.getProperty("APPHOME");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;String cmd = home + INITCMD;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;java.lang.Runtime.getRuntime().exec(cmd);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The code above allows an attacker to execute arbitrary commands with
the elevated privilege of the application by modifying the system
property APPHOME to point to a different path containing a malicious
version of INITCMD. Because the program does not validate the value read
from the environment, if an attacker can control the value of the system
property APPHOME, then they can fool the application into running
malicious code and take control of the system.&lt;/p&gt;&lt;p class="subheading"&gt;Example 4&lt;/p&gt;&lt;p&gt;The following code is from a web application that allows users
access to an interface through which they can update their password on the
system. Part of the process for updating passwords in certain network
environments is to run a make command in the /var/yp directory, the code for
which is shown below.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;System.Runtime.getRuntime().exec("make");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The problem here is that the program does not specify an absolute path
for make and fails to clean its environment prior to executing the call
to Runtime.exec(). If an attacker can modify the $PATH variable to point
to a malicious binary called make and cause the program to be executed
in their environment, then the malicious binary will be loaded instead
of the one intended. Because of the nature of the application, it runs
with the privileges necessary to perform system operations, which means
the attacker's make will now be run with these privileges, possibly
giving the attacker complete control of the system.&lt;/p&gt;&lt;p class="subheading"&gt;Example 5&lt;/p&gt;&lt;p&gt;The following code is a wrapper around the UNIX command cat which
prints the contents of a file to standard out. It is also
injectable:&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int main(int argc, char **argv) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char cat[] = "cat ";&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char *command;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;size_t commandLength;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;commandLength = strlen(cat) + strlen(argv[1]) + 1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;command = (char *) malloc(commandLength);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(command, cat, commandLength);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncat(command, argv[1], (commandLength - strlen(cat))
);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;system(command);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return (0);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Used normally, the output is simply the contents of the file
requested:&lt;/p&gt;&lt;div class="indent "&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;$ ./catWrapper Story.txt&lt;/div&gt;&lt;div style="font-size:90%;"&gt;When last we left our heroes...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, if we add a semicolon and another command to the end of this
line, the command is executed by catWrapper with no complaint:&lt;/p&gt;&lt;div class="indent Attack"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Attack)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;$ ./catWrapper Story.txt; ls&lt;/div&gt;&lt;div style="font-size:90%;"&gt;When last we left our heroes...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Story.txt&lt;/div&gt;&lt;div style="font-size:90%;"&gt;SensitiveFile.txt&lt;/div&gt;&lt;div style="font-size:90%;"&gt;PrivateData.db&lt;/div&gt;&lt;div style="font-size:90%;"&gt;a.out*&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If catWrapper had been set to have a higher privilege level than the
standard user, arbitrary commands could be executed with that higher
privilege.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_77_Potential Mitigations" id="oc_77_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;If at all possible, use library calls rather than external processes
to recreate the desired functionality&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;If possible, ensure that all external commands called from the program
are statically created.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Input Validation&lt;/p&gt;&lt;p&gt;Assume all input is malicious. Use an "accept known good" input
validation strategy, i.e., use a whitelist of acceptable inputs that
strictly conform to specifications. Reject any input that does not
strictly conform to specifications, or transform it into something that
does. Do not rely exclusively on looking for malicious or malformed
inputs (i.e., do not rely on a blacklist). However, blacklists can be
useful for detecting potential attacks or determining which inputs are
so malformed that they should be rejected outright.&lt;/p&gt;&lt;p&gt;When performing input validation, consider all potentially relevant
properties, including length, type of input, the full range of
acceptable values, missing or extra inputs, syntax, consistency across
related fields, and conformance to business rules. As an example of
business rule logic, "boat" may be syntactically valid because it only
contains alphanumeric characters, but it is not valid if you are
expecting colors such as "red" or "blue."&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Run time: Run time policy enforcement may be used in a white-list
fashion to prevent use of any non-sanctioned commands.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Assign permissions to the software system that prevents the user from
accessing/opening privileged files.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_77_Other Notes" id="oc_77_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Command injection is a common problem with wrapper programs.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_77_Weakness Ordinalities" id="oc_77_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Primary&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness exists independent of other weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_77_Relationships" id="oc_77_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;74&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=74" target="_blank"&gt;Failure to Sanitize Data into a Different Plane ('Injection')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;713&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=713" target="_blank"&gt;OWASP Top Ten 2007 Category A2 - Injection Flaws&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2007) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;629&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;722&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=722" target="_blank"&gt;OWASP Top Ten 2004 Category A1 - Unvalidated Input&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004)&lt;/span&gt;711&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;727&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=727" target="_blank"&gt;OWASP Top Ten 2004 Category A6 - Injection Flaws&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;78&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=78" target="_blank"&gt;Improper Sanitization of Special Elements used in an OS Command ('OS Command Injection')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;88&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=88" target="_blank"&gt;Argument Injection or Modification&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;89&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=89" target="_blank"&gt;Improper Sanitization of Special Elements used in an SQL Command ('SQL Injection')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;90&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=90" target="_blank"&gt;Failure to Sanitize Data into LDAP Queries ('LDAP Injection')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;624&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=624" target="_blank"&gt;Executable Regular Expression Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Causal Nature"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt;&lt;a href="javascript:toggleblocksOC('77_Causal Nature');"&gt;f&lt;/a&gt; &lt;/span&gt;Causal Nature&lt;/div&gt;&lt;div name="oc_77_Causal Nature" id="oc_77_Causal Nature" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Explicit&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_77_Taxonomy Mappings" id="oc_77_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Command Injection&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Command injection&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2007&lt;/td&gt;&lt;td valign="top"&gt;A2&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Injection Flaws&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A1&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Unvalidated Input&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A6&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Injection Flaws&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_77_Related Attack Patterns" id="oc_77_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org15.html" target="_blank"&gt;15&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Command Delimiters&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org23.html" target="_blank"&gt;23&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;File System Function Injection, Content Based&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org43.html" target="_blank"&gt;43&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Exploiting Multiple Input Interpretation Layers&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org75.html" target="_blank"&gt;75&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Manipulating Writeable Configuration Files&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org6.html" target="_blank"&gt;6&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Argument Injection&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org11.html" target="_blank"&gt;11&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Cause Web Server Misclassification&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org76.html" target="_blank"&gt;76&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Manipulating Input to File System Calls&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_77_References" id="oc_77_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;G. Hoglund and
G. McGraw. "Exploiting Software: How to Break Code". Addison-Wesley. February 2004. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_77_Content History" id="oc_77_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-15&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Veracode&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Suggested OWASP Top Ten 2004
mapping&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Relationships, Other Notes,
Taxonomy Mappings, Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples,
Name&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples, Description,
Name&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Description, Other Notes,
Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Command
Injection&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Failure to Sanitize Data into
a Control Plane (aka 'Command Injection')&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Failure to Sanitize Data into
a Control Plane ('Command Injection')&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1821</key><name>R05_04_Tag_Name_Reused</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;title&gt;MISRA RULE 5-4&lt;/title&gt;
&lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11009&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Tag name identifiers shall not be reused as identifiers.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_204</key><name>Magic_Numbers</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;div class="definitions" id="TableWithRules"&gt;&lt;table border="0" cellspacing="0" cellpadding="0" width="100%"&gt;&lt;tbody&gt;&lt;tr class="header"&gt;&lt;th valign="top" width="100%" colspan="2"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold; "&gt;Magic Numbers&lt;/span&gt;&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;CWE ID&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;10017&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Description&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;Using literals in the code makes the code less readable and maintainable.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Likelihood of Exploit&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;Low&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Common Consequences&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;Code become less readable and maintainable.&lt;/p&gt;&lt;p&gt;&lt;p&gt;&lt;p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Potential Mitigations&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;Define constants with meaningful names and use them instead.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;div style="height:10px; width:100%;"&gt;&lt;/div&gt;&lt;tr&gt;&lt;td valign="top" nowrap="nowrap"&gt;&lt;b&gt;Applicable Platforms&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" width="100%"&gt;&lt;p&gt;All&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/div&gt;&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;/div&gt;
&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1254</key><name>Heuristic_NULL_Pointer_Dereference2</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;NULL Pointer Dereference&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;476&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_476_Description" id="oc_476_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;A NULL pointer dereference occurs when the application
dereferences a pointer that it expects to be valid, but is NULL, typically
causing a crash or exit.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_476_Time of Introduction" id="oc_476_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_476_Applicable Platforms" id="oc_476_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;p&gt;Java&lt;/p&gt;
&lt;p&gt;.NET&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_476_Common Consequences" id="oc_476_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;NULL pointer dereferences usually result in the failure of the process
unless exception handling (on some platforms) is available and
implemented. Even when exception handling is being used, it can still be
very difficult to return the software to a safe state of
operation.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;In very rare circumstances and environments, code execution is
possible.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_476_Likelihood of Exploit" id="oc_476_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Medium&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_476_Demonstrative Examples" id="oc_476_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;NULL pointer dereference issue can occur through a number of flaws,
including race conditions, and simple programming omissions. While there are
no complete fixes aside from conscientious programming, the following steps
will go a long way to ensure that NULL pointer dereferences do not occur.
Before using a pointer, ensure that it is not equal to NULL:&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;if (pointer1 != NULL) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;/* make use of pointer1 */&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/* ... */&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;When freeing pointers, ensure they are not set to NULL, and be sure to
set them to NULL once they are freed:&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;if (pointer1 != NULL) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;free(pointer1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;pointer1 = NULL;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If you are working with a multi-threaded or otherwise asynchronous
environment, ensure that proper locking APIs are used to lock before the
if statement; and unlock when it has finished.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;This example takes an IP address from a user, verifies that it is
well formed and then looks up the hostname and copies it into a
buffer.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;void host_lookup(char *user_supplied_addr){&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;struct hostent *hp;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;in_addr_t *addr;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char hostname[64];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;in_addr_t inet_addr(const char *cp);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/*routine that ensures user_supplied_addr is in the right
format for conversion */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;validate_addr_form(user_supplied_addr);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;addr = inet_addr(user_supplied_addr);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;hp = gethostbyaddr( addr, sizeof(struct in_addr),
AF_INET);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcpy(hostname, hp-&amp;gt;h_name);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If an attacker provides an address that appears to be well-formed, but
the address does not resolve to a hostname, then the call to
gethostbyaddr() will return NULL. Since the code does not check the
return value from gethostbyaddr (CWE-252), a NULL pointer dereference
would then occur in the call to strcpy(). &lt;/p&gt;&lt;p&gt;Note that this example is also vulnerable to a buffer overflow (see
CWE-119).&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;In the following code, the programmer assumes that the system always
has a property named "cmd" defined. If an attacker can control the program's
environment so that "cmd" is not defined, the program throws a NULL pointer
exception when it attempts to call the trim() method.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;String cmd = System.getProperty("cmd");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;cmd = cmd.trim();&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_476_Observed Examples" id="oc_476_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3274" target="_blank"&gt;CVE-2005-3274&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;race condition causes a table to be corrupted if a
timer activates while it is being modified, leading to resultant NULL
dereference; also involves locking.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1912" target="_blank"&gt;CVE-2002-1912&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;large number of packets leads to NULL
dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0772" target="_blank"&gt;CVE-2005-0772&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;packet with invalid error status value triggers
NULL dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0079" target="_blank"&gt;CVE-2004-0079&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0365" target="_blank"&gt;CVE-2004-0365&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1013" target="_blank"&gt;CVE-2003-1013&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1000" target="_blank"&gt;CVE-2003-1000&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0389" target="_blank"&gt;CVE-2004-0389&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0119" target="_blank"&gt;CVE-2004-0119&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0458" target="_blank"&gt;CVE-2004-0458&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0401" target="_blank"&gt;CVE-2002-0401&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_476_Potential Mitigations" id="oc_476_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;If all pointers that could have been modified are sanity-checked
previous to use, nearly all NULL pointer dereferences can be
prevented.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p&gt;The choice could be made to use a language that is not susceptible to
these issues.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Check the results of all functions that return a value and verify that
the value is non-null before acting upon it.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Moderate&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;Checking the return value of the function will typically be
sufficient, however beware of race conditions (CWE-362) in a concurrent
environment.&lt;/p&gt;
&lt;p&gt;This solution does not handle the use of improperly initialized
variables (CWE-665).&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Identify all variables and data stores that receive information from
external sources, and apply input validation to make sure that they are
only initialized to expected values.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Explicitly initialize all your variables and other data stores, either
during declaration or just before the first usage.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Use automated static analysis tools that target this type of weakness.
Many modern techniques use data flow analysis to minimize the number of
false positives. This is not a perfect solution, since 100% accuracy and
coverage are not feasible.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Use dynamic tools and techniques that interact with the software using
large test suites with many diverse inputs, such as fuzz testing
(fuzzing), robustness testing, and fault injection. The software's
operation may slow down, but it should not become unstable, crash, or
generate incorrect results.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Identify error conditions that are not likely to occur during normal
usage and trigger them. For example, run the program under low memory
conditions, run with insufficient privileges or permissions, interrupt a
transaction before it is completed, or disable connectivity to basic
network services such as DNS. Monitor the software for any unexpected
behavior. If you trigger an unhandled exception or similar error that
was discovered and handled by the application's environment, it may
still indicate unexpected conditions that were not handled by the
application itself.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_476_Weakness Ordinalities" id="oc_476_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Resultant&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;NULL pointer dereferences are frequently resultant from rarely
encountered error conditions, since these are most likely to escape
detection during the testing phases.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_476_Relationships" id="oc_476_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Named Chain(s) this relationship pertains
to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;730&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=730" target="_blank"&gt;OWASP Top Ten 2004 Category A9 - Denial of Service&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;737&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=737" target="_blank"&gt;CERT C Secure Coding Section 03 - Expressions (EXP)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;742&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=742" target="_blank"&gt;CERT C Secure Coding Section 08 - Memory Management (MEM)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard&lt;/span&gt;734&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;808&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=808" target="_blank"&gt;2010 Top 25 - Weaknesses On the Cusp&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;373&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=373" target="_blank"&gt;State Synchronization Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;252&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=252" target="_blank"&gt;Unchecked Return Value&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Unchecked Return Value to NULL Pointer Dereference&lt;/span&gt;690&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;789&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=789" target="_blank"&gt;Uncontrolled Memory Allocation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_476_Taxonomy Mappings" id="oc_476_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null Dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null-pointer dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null Dereference (Null Pointer Dereference)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A9&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Denial of Service&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;EXP34-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Ensure a null pointer is not dereferenced&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM32-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Detect and handle memory allocation errors&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_476_White Box Definitions" id="oc_476_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. start statement that assigns a null value to the pointer&lt;/p&gt;
&lt;p&gt;2. end statement that dereferences a pointer&lt;/p&gt;
&lt;p&gt;3. the code path does not contain any other statement that assigns
value to the pointer&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_476_Content History" id="oc_476_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Relationships, Other Notes, Taxonomy Mappings,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Demonstrative Examples,
Other Notes, Potential Mitigations,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2731</key><name>Potential_Precision_Problem</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;120&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_120_Description" id="oc_120_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The program copies an input buffer to an output buffer without
verifying that the size of the input buffer is less than the size of the output
buffer, leading to a buffer overflow.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;A buffer overflow condition exists when a program attempts to put more
data in a buffer than it can hold, or when a program attempts to put data in
a memory area outside of the boundaries of a buffer. The simplest type of
error, and the most common cause of buffer overflows, is the "classic" case
in which the program copies the buffer without checking its length at all.
Other variants exist, but the existence of a classic overflow strongly
suggests that the programmer is not considering even the most basic of
security protections.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_120_Alternate Terms" id="oc_120_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;buffer overrun:&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;p&gt;Some prominent vendors and researchers use the term "buffer overrun,"
but most people use "buffer overflow."&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Unbounded Transfer&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Terminology Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Terminology Notes&lt;/div&gt;&lt;div name="oc_120_Terminology Notes" id="oc_120_Terminology Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Many issues that are now called "buffer overflows" are substantively

different than the "classic" overflow, including entirely different bug
types that rely on overflow exploit techniques, such as integer signedness
errors, integer overflows, and format string bugs. This imprecise
terminology can make it difficult to determine which variant is being
reported.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_120_Time of Introduction" id="oc_120_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_120_Applicable Platforms" id="oc_120_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;p&gt;Assembly&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_120_Common Consequences" id="oc_120_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p class="smaller" style="font-weight:normal"&gt;&lt;span class="subheading"&gt;Technical Impact:&lt;/span&gt;&lt;i&gt; Execute unauthorized code or
commands&lt;/i&gt;&lt;/p&gt;&lt;div style="padding-top:5px"&gt;&lt;p&gt;Buffer overflows often can be used to execute arbitrary code, which is
usually outside the scope of a program's implicit security policy. This
can often be used to subvert any other security service.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Buffer overflows generally lead to crashes. Other attacks leading to
lack of availability are possible, including putting the program into an
infinite loop.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_120_Likelihood of Exploit" id="oc_120_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High to Very High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Detection Methods"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Detection Methods&lt;/div&gt;&lt;div name="oc_120_Detection Methods" id="oc_120_Detection Methods" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Static Analysis&lt;/p&gt;&lt;p&gt;This weakness can often be detected using automated static analysis
tools. Many modern tools use data flow analysis or constraint-based
techniques to minimize the number of false positives.&lt;/p&gt;&lt;p&gt;Automated static analysis generally does not account for environmental
considerations when reporting out-of-bounds memory operations. This can
make it difficult for users to determine which warnings should be
investigated first. For example, an analysis tool might report buffer
overflows that originate from command line arguments in a program that
is not expected to run with setuid or other special privileges.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: High&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;Detection techniques for buffer-related errors are more mature than
for most other weakness types.&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Dynamic Analysis&lt;/p&gt;&lt;p&gt;This weakness can be detected using dynamic tools and techniques that
interact with the software using large test suites with many diverse
inputs, such as fuzz testing (fuzzing), robustness testing, and fault
injection. The software's operation may slow down, but it should not
become unstable, crash, or generate incorrect results.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Manual Analysis&lt;/p&gt;&lt;p&gt;Manual analysis can be useful for finding this weakness, but it might
not achieve desired code coverage within limited time constraints. This
becomes difficult for weaknesses that must be considered for all inputs,
since the attack surface can be too large.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_120_Demonstrative Examples" id="oc_120_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code asks the user to enter their last name and then
attempts to store the value entered in the last_name array. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example

Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char last_name[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;printf ("Enter your last name: ");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;scanf ("%s", last_name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The problem with the code above is that it does not check the size of
the name entered by the user. If the user enters
"Very_very_long_last_name" which is 24 characters long, then a buffer
overflow will occur since the array can only hold 20 characters total.
&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following code attempts to create a local copy of a buffer to
perform some manipulations to the data.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;void manipulate_string(char* string){&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char buf[24];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcpy(buf, string);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the programmer does not ensure that the size of the data
pointed to by string will fit in the local buffer and blindly copies the
data with the potentially dangerous strcpy() function. This may result
in a buffer overflow condition if an attacker can influence the contents
of the string parameter.&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;The excerpt below calls the gets() function in C, which is
inherently unsafe.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char buf[24];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("Please enter your name and press
&amp;lt;Enter&amp;gt;\n");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;gets(buf);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the programmer uses the function gets() which is inherently
unsafe because it blindly copies all input from STDIN to the buffer
without checking size. This allows the user to provide a string that is
larger than the buffer size, resulting in an overflow condition.&lt;/p&gt;&lt;p class="subheading"&gt;Example 4&lt;/p&gt;&lt;p&gt;In the following example, a server accepts connections from a client
and processes the client request. After accepting a client connection, the
program will obtain client information using the gethostbyaddr method, copy
the hostname of the client that connected to a local variable and output the
hostname of the client to a log file.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example Languages: &lt;/span&gt;C and C++&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;struct hostent *clienthp;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char hostname[MAX_LEN];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// create server socket, bind to server address and listen on
socket&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// accept client connections and process requests&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int count = 0;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;for (count = 0; count &amp;lt; MAX_CONNECTIONS; count++)
{&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int clientlen = sizeof(struct sockaddr_in);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int clientsocket = accept(serversocket, (struct sockaddr
*)&amp;amp;clientaddr, &amp;amp;clientlen);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (clientsocket &amp;gt;= 0) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;clienthp = gethostbyaddr((char
*)&amp;amp;clientaddr.sin_addr.s_addr, &lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;sizeof(clientaddr.sin_addr.s_addr), AF_INET);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcpy(hostname, clienthp-&amp;gt;h_name);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;logOutput("Accepted client connection from host ",
hostname);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// process client request&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;close(clientsocket);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt; }&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;close(serversocket);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the hostname of the client that connected may be longer than
the allocated size for the local hostname variable. This will result in
a buffer overflow when copying the client hostname to the local variable
using the strcpy method.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_120_Observed Examples" id="oc_120_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-1094" target="_blank"&gt;CVE-2000-1094&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;buffer overflow using command with long
argument&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-0046" target="_blank"&gt;CVE-1999-0046&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;buffer overflow in local program using long
environment variable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1337" target="_blank"&gt;CVE-2002-1337&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;buffer overflow in comment characters, when
product increments a counter for a "&amp;gt;" but does not decrement for
"&amp;lt;"&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0595" target="_blank"&gt;CVE-2003-0595&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;By replacing a valid cookie value with an
extremely long string of characters, an attacker may overflow the
application's buffers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0191" target="_blank"&gt;CVE-2001-0191&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;By replacing a valid cookie value with an
extremely long string of characters, an attacker may overflow the
application's buffers.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_120_Potential Mitigations" id="oc_120_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Language Selection&lt;/p&gt;&lt;p&gt;Use a language with features that can automatically mitigate or
eliminate buffer overflows.&lt;/p&gt;&lt;p&gt;For example, many languages that perform their own memory management,
such as Java and Perl, are not subject to buffer overflows. Other
languages, such as Ada and C#, typically provide overflow protection,
but the protection can be disabled by the programmer.&lt;/p&gt;&lt;p&gt;Be wary that a language's interface to native code may still be
subject to overflows, even if the language itself is theoretically safe.
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Libraries or Frameworks&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to
occur or provides constructs that make this weakness easier to
avoid.&lt;/p&gt;&lt;p&gt;Examples include the Safe C String Library (SafeStr) by Messier and
Viega, and the Strsafe.h library from Microsoft. These libraries provide
safer versions of overflow-prone string-handling functions. This is not
a complete solution, since many buffer overflows are not related to
strings.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Build and Compilation&lt;/p&gt;&lt;p&gt;Run or compile your software using features or extensions that
automatically provide a protection mechanism that mitigates or
eliminates buffer overflows.&lt;/p&gt;&lt;p&gt;For example, certain compilers and extensions provide automatic buffer
overflow detection mechanisms that are built into the compiled code.
Examples include the Microsoft Visual Studio /GS flag, Fedora/Red Hat
FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice.&lt;/p&gt;&lt;p&gt;This is not necessarily a complete solution, since these mechanisms
can only detect certain types of overflows. In addition, a buffer
overflow attack can still cause a denial of service, since the typical
response is to exit the application.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Programmers should adhere to the following rules when allocating and
managing their applications memory:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Double check that your buffer is as large as you specify.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;When using functions that accept a number of bytes to copy, such
as strncpy(), be aware that if the destination buffer size is equal
to the source buffer size, it may not NULL-terminate the
string.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Check buffer boundaries if calling this function in a loop and
make sure you are not in danger of writing past the allocated
space.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If necessary, truncate all input strings to a reasonable length
before passing them to the copy and concatenation functions.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Operation&lt;/p&gt;&lt;p&gt;Use a feature like Address Space Layout Randomization (ASLR). This is
not a complete solution. However, it forces the attacker to guess an
unknown value that changes every program execution.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Operation&lt;/p&gt;&lt;p&gt;Use a CPU and operating system that offers Data Execution Protection
(NX) or its equivalent. This is not a complete solution, since buffer
overflows could be used to overwrite nearby variables to modify the
software's state in dangerous ways. In addition, it cannot be used in
cases in which self-modifying code is required.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phases:  Build and Compilation; Operation&lt;/p&gt;&lt;p&gt;Most mitigating technologies at the compiler or OS level to date
address only a subset of buffer overflow problems and rarely provide
complete protection against even that subset. It is good practice to
implement strategies to increase the workload of an attacker, such as
leaving the attacker to guess an unknown value that changes every
program execution.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Replace unbounded copy functions with analogous functions that support
length arguments, such as strcpy with strncpy. Create these if they are
not available.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Moderate&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;This approach is still susceptible to calculation errors, including
issues such as off-by-one errors (CWE-193) and incorrectly calculating
buffer lengths (CWE-131).&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_120_Weakness Ordinalities" id="oc_120_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Resultant&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness is typically related to the presence of some other
weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Primary&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness exists independent of other weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_120_Relationships" id="oc_120_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;633&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=633" target="_blank"&gt;Weaknesses that Affect Memory&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;722&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=722" target="_blank"&gt;OWASP Top Ten 2004 Category A1 - Unvalidated Input&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004)&lt;/span&gt;711&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;726&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=726" target="_blank"&gt;OWASP Top Ten 2004 Category A5 - Buffer Overflows&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;741&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=741" target="_blank"&gt;CERT C Secure Coding Section 07 - Characters and Strings (STR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;802&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=802" target="_blank"&gt;2010 Top 25 - Risky Resource Management&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;123&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=123" target="_blank"&gt;Write-what-where Condition&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;785&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=785" target="_blank"&gt;Use of Path Manipulation Function without Maximum-sized Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;170&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=170" target="_blank"&gt;Improper Null Termination&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;231&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=231" target="_blank"&gt;Improper Handling of Extra Values&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;242&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=242" target="_blank"&gt;Use of Inherently Dangerous Function&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;416&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=416" target="_blank"&gt;Use After Free&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;456&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=456" target="_blank"&gt;Missing Initialization&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;124&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=124" target="_blank"&gt;Buffer Underwrite ('Buffer Underflow')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanAlsoBe&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;196&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=196" target="_blank"&gt;Unsigned to Signed Conversion Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_120_Relationship Notes" id="oc_120_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;At the code level, stack-based and heap-based overflows do not differ
significantly, so there usually is not a need to distinguish them. From the
attacker perspective, they can be quite different, since different
techniques are required to exploit them.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Affected Resources"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Affected Resources&lt;/div&gt;&lt;div name="oc_120_Affected Resources" id="oc_120_Affected Resources" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Functional Areas"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Functional Areas&lt;/div&gt;&lt;div name="oc_120_Functional Areas" id="oc_120_Functional Areas" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory Management&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Causal Nature"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt;&lt;a href="javascript:toggleblocksOC('120_Causal Nature');"&gt;f&lt;/a&gt; &lt;/span&gt;Causal Nature&lt;/div&gt;&lt;div name="oc_120_Causal Nature" id="oc_120_Causal Nature" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Explicit&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_120_Taxonomy Mappings" id="oc_120_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Unbounded Transfer ('classic overflow')&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A1&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Unvalidated Input&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A5&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflows&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR35-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Do not copy data from an unbounded source to a fixed-length
array&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;WASC&lt;/td&gt;&lt;td valign="top"&gt;7&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_120_Related Attack Patterns" id="oc_120_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org8.html" target="_blank"&gt;8&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow in an API Call&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org9.html" target="_blank"&gt;9&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow in Local Command-Line Utilities&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org10.html" target="_blank"&gt;10&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Environment Variables&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org14.html" target="_blank"&gt;14&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Client-side Injection-induced Buffer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org24.html" target="_blank"&gt;24&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Filter Failure through Buffer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org92.html" target="_blank"&gt;92&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Forced Integer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org42.html" target="_blank"&gt;42&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;MIME Conversion&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org44.html" target="_blank"&gt;44&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Binary Resource File&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org45.html" target="_blank"&gt;45&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Symbolic Links&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org100.html" target="_blank"&gt;100&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Buffers&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org46.html" target="_blank"&gt;46&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Variables and Tags&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org47.html" target="_blank"&gt;47&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Parameter Expansion&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org67.html" target="_blank"&gt;67&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;String Format Overflow in syslog()&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_120_White Box Definitions" id="oc_120_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path includes a Buffer Write Operation such
that:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. the expected size of the buffer is greater than the actual size of
the buffer where expected size is equal to the sum of the size of the
data item and the position in the buffer&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Where Buffer Write Operation is a statement that writes a data item of a
certain size into a buffer at a certain position and at a certain
index&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_120_References" id="oc_120_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-11] M. Howard and
D. LeBlanc. "Writing Secure Code". Chapter 5, "Public Enemy #1: The Buffer Overrun" Page
127. 2nd Edition. Microsoft. 2002. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-17] Michael Howard, David LeBlanc
and John Viega. "24 Deadly Sins of Software Security". "Sin 5: Buffer Overruns." Page 89. McGraw-Hill. 2010. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Microsoft. "Using the Strsafe.h Functions". &amp;lt;&lt;a href="http://msdn.microsoft.com/en-us/library/ms647466.aspx" target="_blank"&gt;http://msdn.microsoft.com/en-us/library/ms647466.aspx&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Matt Messier and
John Viega. "Safe C String Library v1.0.3". &amp;lt;&lt;a href="http://www.zork.org/safestr/" target="_blank"&gt;http://www.zork.org/safestr/&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Michael Howard. "Address Space Layout Randomization in Windows
Vista". &amp;lt;&lt;a href="http://blogs.msdn.com/michael_howard/archive/2006/05/26/address-space-layout-randomization-in-windows-vista.aspx" target="_blank"&gt;http://blogs.msdn.com/michael_howard/archive/2006/05/26/address-space-layout-randomization-in-windows-vista.aspx&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Arjan van de Ven. "Limiting buffer overflows with ExecShield". &amp;lt;&lt;a href="http://www.redhat.com/magazine/009jul05/features/execshield/" target="_blank"&gt;http://www.redhat.com/magazine/009jul05/features/execshield/&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;"PaX". &amp;lt;&lt;a href="http://en.wikipedia.org/wiki/PaX" target="_blank"&gt;http://en.wikipedia.org/wiki/PaX&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_120_Content History" id="oc_120_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-15&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Veracode&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Suggested OWASP Top Ten 2004
mapping&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Applicable Platforms,
Common Consequences, Relationships, Observed Example, Other Notes,
Taxonomy Mappings, Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Changed name and description to more clearly emphasize the
"classic" nature of the overflow.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Description, Name, Other Notes,
Terminology Notes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Other Notes, Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Other Notes,
Potential Mitigations, References, Relationship Notes,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Other Notes, Potential Mitigations,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Demonstrative Examples, Detection Factors, Potential Mitigations,
References, Related Attack Patterns, Relationships, Taxonomy Mappings,
Time of Introduction, Type&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-04-05&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples, Related Attack Patterns&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Unbounded Transfer ('Classic
Buffer Overflow')&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1885</key><name>R00_01_10_Find_Unused_Defined_Functions</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 0-1-10&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 0-1-10&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10777&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Unused functions shall not be in a project &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1834</key><name>R09_03_Initializing_Non_First_And_Not_All_Members_In_Enum</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 9-3&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 9-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11022&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            When an enumerator is created, if any member is initialized other than the
            first, then all members shall be initialized.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1831</key><name>R08_05_Object_Function_In_Header_File</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 8-5&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 8-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11019&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Header files shall not contain any object or functoin definitions.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1829</key><name>R07_01_Non_Zero_Octal_Constant</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 7-1&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 7-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11017&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            No octal constants or escape sequences are allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3892</key><name>Improper_Resource_Access_Authorization</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Improper Access Control (Authorization)&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;285&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Class)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_285_Description" id="oc_285_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software does not perform or incorrectly performs access
control checks across all potential execution paths.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;When access control checks are not applied consistently - or not at all -
users are able to access data or perform actions that they should not be
allowed to perform. This can lead to a wide range of problems, including
information leaks, denial of service, and arbitrary code execution.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_285_Alternate Terms" id="oc_285_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;AuthZ:&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;p&gt;"AuthZ" is typically used as an abbreviation of "authorization" within
the web application security community. It is also distinct from
"AuthC," which is an abbreviation of "authentication." The use of "Auth"
as an abbreviation is discouraged, since it could be used for either
authentication or authorization.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_285_Time of Introduction" id="oc_285_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;li&gt;Operation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_285_Applicable Platforms" id="oc_285_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Language-independent&lt;/p&gt;
&lt;/div&gt;
&lt;p class="subheading"&gt;Technology Classes&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Web-Server: &lt;span class="smaller" style="font-style:italic"&gt;(Often)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Database-Server: &lt;span class="smaller" style="font-style:italic"&gt;(Often)&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Modes of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Modes of Introduction&lt;/div&gt;&lt;div name="oc_285_Modes of Introduction" id="oc_285_Modes of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A developer may introduce authorization weaknesses because of a lack of
understanding about the underlying technologies. For example, a developer
may assume that attackers cannot modify certain inputs such as headers or
cookies.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Authorization weaknesses may arise when a single-user application is
ported to a multi-user environment.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_285_Common Consequences" id="oc_285_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Confidentiality&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;An attacker could read sensitive data, either by reading the data
directly from a data store that is not properly restricted, or by
accessing insufficiently-protected, privileged functionality to read the
data.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;An attacker could modify sensitive data, either by writing the data
directly to a data store that is not properly restricted, or by
accessing insufficiently-protected, privileged functionality to write
the data.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;An attacker could gain privileges by modifying or reading critical
data directly, or by accessing insufficiently-protected, privileged
functionality.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_285_Likelihood of Exploit" id="oc_285_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Detection Methods"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Detection Methods&lt;/div&gt;&lt;div name="oc_285_Detection Methods" id="oc_285_Detection Methods" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Static Analysis&lt;/p&gt;&lt;p&gt;Automated static analysis is useful for detecting commonly-used idioms
for authorization. A tool may be able to analyze related configuration
files, such as .htaccess in Apache web servers, or detect the usage of
commonly-used authorization libraries.&lt;/p&gt;&lt;p&gt;Generally, automated static analysis tools have difficulty detecting
custom authorization schemes. In addition, the software's design may
include some functionality that is accessible to any user and does not
require an authorization check; an automated technique that detects the
absence of authorization may report false positives.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Limited&lt;/i&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Dynamic Analysis&lt;/p&gt;&lt;p&gt;Automated dynamic analysis may find many or all possible interfaces
that do not require authorization, but manual analysis is required to
determine if the lack of authorization violates business logic&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Manual Analysis&lt;/p&gt;&lt;p&gt;This weakness can be detected using tools and techniques that require
manual (human) analysis, such as penetration testing, threat modeling,
and interactive tools that allow the tester to record and modify an
active session. &lt;/p&gt;&lt;p&gt;Specifically, manual static analysis is useful for evaluating the
correctness of custom authorization mechanisms.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Moderate&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt; These may be more effective than strictly automated techniques. This
is especially the case with weaknesses that are related to design and
business rules. However, manual efforts might not achieve desired code
coverage within limited time constraints.&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_285_Demonstrative Examples" id="oc_285_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following program could be part of a bulletin board system that
allows users to send private messages to each other. This program intends to
authenticate the user before deciding whether a private message should be
displayed. Assume that LookupMessageObject() ensures that the $id argument
is numeric, constructs a filename based on that id, and reads the message
details from that file. Also assume that the program stores all private
messages for all users in the same directory.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Perl&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;sub DisplayPrivateMessage {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;my($id) = @_;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;my $Message = LookupMessageObject($id);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;print "From: " . encodeHTML($Message-&amp;gt;{from}) .
"&amp;lt;br&amp;gt;\n";&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;print "Subject: " . encodeHTML($Message-&amp;gt;{subject}) .
"\n";&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;print "&amp;lt;hr&amp;gt;\n";&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;print "Body: " . encodeHTML($Message-&amp;gt;{body}) .
"\n";&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;my $q = new CGI;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;# For purposes of this example, assume that CWE-309
and&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;# CWE-523 do not apply.&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (! AuthenticateUser($q-&amp;gt;param('username'),
$q-&amp;gt;param('password'))) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ExitError("invalid username or password");&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;my $id = $q-&amp;gt;param('id');&lt;/div&gt;&lt;div style="font-size:90%;"&gt;DisplayPrivateMessage($id);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;While the program properly exits if authentication fails, it does not
ensure that the message is addressed to the user. As a result, an
authenticated attacker could provide any arbitrary identifier and read
private messages that were intended for other users.&lt;/p&gt;&lt;p&gt;One way to avoid this problem would be to ensure that the "to" field
in the message object matches the username of the authenticated user.
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_285_Observed Examples" id="oc_285_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3168" target="_blank"&gt;CVE-2009-3168&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Web application does not restrict access to admin
scripts, allowing authenticated users to reset administrative
passwords.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2960" target="_blank"&gt;CVE-2009-2960&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Web application does not restrict access to admin
scripts, allowing authenticated users to modify passwords of other
users.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3597" target="_blank"&gt;CVE-2009-3597&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Web application stores database file under the web
root with insufficient access control (CWE-219), allowing direct
request.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2282" target="_blank"&gt;CVE-2009-2282&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Terminal server does not check authorization for
guest access.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3230" target="_blank"&gt;CVE-2009-3230&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Database server does not use appropriate
privileges for certain sensitive operations.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-2213" target="_blank"&gt;CVE-2009-2213&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Gateway uses default "Allow" configuration for its
authorization settings.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0034" target="_blank"&gt;CVE-2009-0034&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: product does not properly interpret a
configuration option for a system group, allowing users to gain
privileges.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-6123" target="_blank"&gt;CVE-2008-6123&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: SNMP product does not properly parse a
configuration option for which hosts are allowed to connect, allowing
unauthorized IP addresses to connect.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5027" target="_blank"&gt;CVE-2008-5027&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;System monitoring software allows users to bypass
authorization by creating custom forms.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-7109" target="_blank"&gt;CVE-2008-7109&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: reliance on client-side security (CWE-602)
allows attackers to bypass authorization using a custom
client.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-3424" target="_blank"&gt;CVE-2008-3424&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: product does not properly handle wildcards
in an authorization policy list, allowing unintended
access.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3781" target="_blank"&gt;CVE-2009-3781&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Content management system does not check access
permissions for private files, allowing others to view those
files.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4577" target="_blank"&gt;CVE-2008-4577&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;ACL-based protection mechanism treats negative
access rights as if they are positive, allowing bypass of intended
restrictions.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-6548" target="_blank"&gt;CVE-2008-6548&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Product does not check the ACL of a page accessed
using an "include" directive, allowing attackers to read unauthorized
files.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-2925" target="_blank"&gt;CVE-2007-2925&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Default ACL list for a DNS server does not set
certain ACLs, allowing unauthorized DNS
queries.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-6679" target="_blank"&gt;CVE-2006-6679&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Product relies on the X-Forwarded-For HTTP header
for authorization, allowing unintended access by spoofing the
header.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3623" target="_blank"&gt;CVE-2005-3623&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;OS kernel does not check for a certain privilege
before setting ACLs for files.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2801" target="_blank"&gt;CVE-2005-2801&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: file-system code performs an incorrect
comparison (CWE-697), preventing defauls ACLs from being properly
applied.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1155" target="_blank"&gt;CVE-2001-1155&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: product does not properly check the result
of a reverse DNS lookup because of operator precedence (CWE-783), allowing
bypass of DNS-based access restrictions.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_285_Potential Mitigations" id="oc_285_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Divide your application into anonymous, normal, privileged, and
administrative areas. Reduce the attack surface by carefully mapping
roles with data and functionality. Use role-based access control (RBAC)
to enforce the roles at the appropriate boundaries.&lt;/p&gt;&lt;p&gt;Note that this approach may not protect against horizontal
authorization, i.e., it will not protect a user from attacking others
with the same role.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Ensure that you perform access control checks related to your business
logic. These checks may be different than the access control checks that
you apply to more generic resources such as files, connections,
processes, memory, and database records. For example, a database may
restrict access for medical records to a specific database user, but
each record might only be intended to be accessible to the patient and
the patient's doctor.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Libraries or Frameworks&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to
occur or provides constructs that make this weakness easier to
avoid.&lt;/p&gt;&lt;p&gt;For example, consider using authorization frameworks such as the JAAS
Authorization Framework and the OWASP ESAPI Access Control
feature.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;For web applications, make sure that the access control mechanism is
enforced correctly at the server side on every page. Users should not be
able to access any unauthorized functionality or information by simply
requesting direct access to that page.&lt;/p&gt;&lt;p&gt;One way to do this is to ensure that all pages containing sensitive
information are not cached, and that all such pages restrict access to
requests that are accompanied by an active and authenticated session
token associated with a user who has the required permissions to access
that page.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phases:  System Configuration; Installation&lt;/p&gt;&lt;p&gt;Use the access control capabilities of your operating system and
server environment and define your access control lists accordingly. Use
a "default deny" policy when defining these ACLs.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_285_Relationships" id="oc_285_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;254&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=254" target="_blank"&gt;Security Features&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;284&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=284" target="_blank"&gt;Access Control (Authorization) Issues&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;721&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=721" target="_blank"&gt;OWASP Top Ten 2007 Category A10 - Failure to Restrict URL Access&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2007) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;629&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;723&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=723" target="_blank"&gt;OWASP Top Ten 2004 Category A2 - Broken Access Control&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;753&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=753" target="_blank"&gt;2009 Top 25 - Porous Defenses&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2009 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;750&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;803&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=803" target="_blank"&gt;2010 Top 25 - Porous Defenses&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;219&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=219" target="_blank"&gt;Sensitive Data Under Web Root&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;551&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=551" target="_blank"&gt;Incorrect Behavior Order: Authorization Before Parsing and Canonicalization&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;638&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=638" target="_blank"&gt;Failure to Use Complete Mediation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;804&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=804" target="_blank"&gt;Guessable CAPTCHA&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_285_Taxonomy Mappings" id="oc_285_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Missing Access Control&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2007&lt;/td&gt;&lt;td valign="top"&gt;A10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Failure to Restrict URL Access&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A2&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Broken Access Control&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_285_Related Attack Patterns" id="oc_285_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org1.html" target="_blank"&gt;1&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Accessing Functionality Not Properly Constrained by ACLs&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org13.html" target="_blank"&gt;13&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Subverting Environment Variable Values&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org17.html" target="_blank"&gt;17&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Accessing, Modifying or Executing Executable Files&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org87.html" target="_blank"&gt;87&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Forceful Browsing&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org39.html" target="_blank"&gt;39&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Manipulating Opaque Client-based Data Tokens&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org45.html" target="_blank"&gt;45&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Symbolic Links&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org51.html" target="_blank"&gt;51&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Poison Web Service Registry&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org59.html" target="_blank"&gt;59&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Session Credential Falsification through Prediction&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org60.html" target="_blank"&gt;60&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Reusing Session IDs (aka Session Replay)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org77.html" target="_blank"&gt;77&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Manipulating User-Controlled Variables&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org76.html" target="_blank"&gt;76&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Manipulating Input to File System Calls&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org104.html" target="_blank"&gt;104&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Cross Zone Scripting&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_285_References" id="oc_285_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;NIST. "Role Based Access Control and Role Based
Security". &amp;lt;&lt;a href="http://csrc.nist.gov/groups/SNS/rbac/" target="_blank"&gt;http://csrc.nist.gov/groups/SNS/rbac/&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-11] M. Howard and
D. LeBlanc. "Writing Secure Code". Chapter 4, "Authorization" Page 114; Chapter 6, "Determining
Appropriate Access Control" Page 171. 2nd Edition. Microsoft. 2002. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_285_Content History" id="oc_285_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-15&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Veracode&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Suggested OWASP Top Ten 2004
mapping&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships, Other Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Description,
Likelihood of Exploit, Name, Other Notes, Potential Mitigations, References,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description,
Related Attack Patterns&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Type&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Demonstrative Examples, Detection Factors, Modes of Introduction,
Observed Examples, Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Detection Factors,
Potential Mitigations, References, Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-04-05&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Missing or Inconsistent
Access Control&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1846</key><name>R14_04_Use_Of_Goto</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 14-4&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 14-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11034&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Use of the &amp;#39;goto&amp;#39; statement is not allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1875</key><name>R20_05_Using_Errno_Indicator_From_Errno_H</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 20-5&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 20-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11063&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;DeDescription&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Use of the &amp;#39;errno&amp;#39; error indicator of is not allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Pagep&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1864</key><name>R16_08_Non_Explicit_Return_Statement_In_Non_Void_Function</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 16-8&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-8&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11052&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            For every function of non-void return type, there shall be an explicit &amp;#39;return&amp;#39;
            statement ending every flow path.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_281</key><name>Heuristic_SQL_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could directly access all of the system's data. Using simple tools and text editing, the attacker would be able to steal any sensitive information stored by the system (such as personal user details or credit cards), and possibly change or erase existing data.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application communicates with its database by sending a textual SQL query. The application creates the query by simply concatenating strings including the user's input. Since the user input is neither checked for data type validity nor subsequently sanitized, the input could contain SQL commands that would be interpreted as such by the database.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values.&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Instead of concatenating strings: a. Use secure database components such as stored procedures, parameterized queries, and object bindings (for commands and parameters). b. An even better solution is to use an ORM library, such as EntityFramework, Hibernate, or iBatis.&lt;/li&gt;
&lt;li&gt;Restrict access to database objects and functionality, according to the Principle of Least Privilege.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
The application creates an SQL query using string obtained from the user
      &lt;/h4&gt;&lt;pre&gt;public class SQLInjection
{
        public void foo(TextBox tbUserName, SqliteConnection connection)
        {	
                string user = tbUserName.Text;
                string sql = "insert into users(name) VALUES (user)"
                MySqlCommand cmd = new MySqlCommand(sql, connection);
                connection.Open();
                SqlDataReader reader = cmd.ExecuteReader();
        }
}&lt;/pre&gt;&lt;h4&gt;
The string obtained from the user is checked for potentially malicious characters
      &lt;/h4&gt;&lt;pre&gt;
class SqlInjectionFixed
{
        public void foo(TextBox tbUserName, SqliteConnection connection)
        {
                string user = tbUserName.Text;
                string sql = "insert into users(name) VALUES (@param1)";
                MySqlCommand cmd = new MySqlCommand(sql, connection);
                cmd.Parameters.AddWithValue(@param1, user);
                connection.Open();
                SqlDataReader reader = cmd.ExecuteReader();
        }
}&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;The application creates an SQL query using string obtained from the user&lt;/h4&gt;&lt;pre&gt;public class SQL_Injection {
	public static void getUserId(Connection con) {
		System.out.println("enter user name");
		Scanner in = new Scanner(System.in);
		String user = in.nextLine();
		String query = "select user_id from User where user = " + user;
		Statement stmt = con.createStatement();
		ResultSet rs = stmt.executeQuery(query);
	}
}&lt;/pre&gt;&lt;h4&gt;The string obtained from the user is checked for potentially malicious characters&lt;/h4&gt;&lt;pre&gt;public class SQL_Injection_Fixed {
	public static void getUserId(Connection con) {
		System.out.println("enter user name");
		Scanner in = new Scanner(System.in);
		String user = in.nextLine();
		String query = "select user_id from User where user = ?";
		PreparedStatement stmt = con.createStatement(query);
		stmt.setString(1, user);
		ResultSet rs = stmt.executeQuery(query);
	}
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1841</key><name>R12_13_Using_Of_Incremental_And_Decrimental_Operators</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 12-13&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 12-13&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11029&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  In an expression, there should not be mix of the ++ or -- operators&amp;nbsp; with
                  other operators.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                                            C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3092</key><name>Open_SSL_HeartBleed</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;120&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_120_Description" id="oc_120_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The program copies an input buffer to an output buffer without
verifying that the size of the input buffer is less than the size of the output
buffer, leading to a buffer overflow.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;A buffer overflow condition exists when a program attempts to put more
data in a buffer than it can hold, or when a program attempts to put data in
a memory area outside of the boundaries of a buffer. The simplest type of
error, and the most common cause of buffer overflows, is the "classic" case
in which the program copies the buffer without checking its length at all.
Other variants exist, but the existence of a classic overflow strongly
suggests that the programmer is not considering even the most basic of
security protections.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_120_Alternate Terms" id="oc_120_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;buffer overrun:&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;p&gt;Some prominent vendors and researchers use the term "buffer overrun,"
but most people use "buffer overflow."&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Unbounded Transfer&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Terminology Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Terminology Notes&lt;/div&gt;&lt;div name="oc_120_Terminology Notes" id="oc_120_Terminology Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Many issues that are now called "buffer overflows" are substantively

different than the "classic" overflow, including entirely different bug
types that rely on overflow exploit techniques, such as integer signedness
errors, integer overflows, and format string bugs. This imprecise
terminology can make it difficult to determine which variant is being
reported.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_120_Time of Introduction" id="oc_120_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_120_Applicable Platforms" id="oc_120_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;p&gt;Assembly&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_120_Common Consequences" id="oc_120_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p class="smaller" style="font-weight:normal"&gt;&lt;span class="subheading"&gt;Technical Impact:&lt;/span&gt;&lt;i&gt; Execute unauthorized code or
commands&lt;/i&gt;&lt;/p&gt;&lt;div style="padding-top:5px"&gt;&lt;p&gt;Buffer overflows often can be used to execute arbitrary code, which is
usually outside the scope of a program's implicit security policy. This
can often be used to subvert any other security service.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Buffer overflows generally lead to crashes. Other attacks leading to
lack of availability are possible, including putting the program into an
infinite loop.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_120_Likelihood of Exploit" id="oc_120_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High to Very High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Detection Methods"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Detection Methods&lt;/div&gt;&lt;div name="oc_120_Detection Methods" id="oc_120_Detection Methods" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Static Analysis&lt;/p&gt;&lt;p&gt;This weakness can often be detected using automated static analysis
tools. Many modern tools use data flow analysis or constraint-based
techniques to minimize the number of false positives.&lt;/p&gt;&lt;p&gt;Automated static analysis generally does not account for environmental
considerations when reporting out-of-bounds memory operations. This can
make it difficult for users to determine which warnings should be
investigated first. For example, an analysis tool might report buffer
overflows that originate from command line arguments in a program that
is not expected to run with setuid or other special privileges.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: High&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;Detection techniques for buffer-related errors are more mature than
for most other weakness types.&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Dynamic Analysis&lt;/p&gt;&lt;p&gt;This weakness can be detected using dynamic tools and techniques that
interact with the software using large test suites with many diverse
inputs, such as fuzz testing (fuzzing), robustness testing, and fault
injection. The software's operation may slow down, but it should not
become unstable, crash, or generate incorrect results.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Manual Analysis&lt;/p&gt;&lt;p&gt;Manual analysis can be useful for finding this weakness, but it might
not achieve desired code coverage within limited time constraints. This
becomes difficult for weaknesses that must be considered for all inputs,
since the attack surface can be too large.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_120_Demonstrative Examples" id="oc_120_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code asks the user to enter their last name and then
attempts to store the value entered in the last_name array. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example

Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char last_name[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;printf ("Enter your last name: ");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;scanf ("%s", last_name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The problem with the code above is that it does not check the size of
the name entered by the user. If the user enters
"Very_very_long_last_name" which is 24 characters long, then a buffer
overflow will occur since the array can only hold 20 characters total.
&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following code attempts to create a local copy of a buffer to
perform some manipulations to the data.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;void manipulate_string(char* string){&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char buf[24];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcpy(buf, string);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the programmer does not ensure that the size of the data
pointed to by string will fit in the local buffer and blindly copies the
data with the potentially dangerous strcpy() function. This may result
in a buffer overflow condition if an attacker can influence the contents
of the string parameter.&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;The excerpt below calls the gets() function in C, which is
inherently unsafe.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char buf[24];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("Please enter your name and press
&amp;lt;Enter&amp;gt;\n");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;gets(buf);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the programmer uses the function gets() which is inherently
unsafe because it blindly copies all input from STDIN to the buffer
without checking size. This allows the user to provide a string that is
larger than the buffer size, resulting in an overflow condition.&lt;/p&gt;&lt;p class="subheading"&gt;Example 4&lt;/p&gt;&lt;p&gt;In the following example, a server accepts connections from a client
and processes the client request. After accepting a client connection, the
program will obtain client information using the gethostbyaddr method, copy
the hostname of the client that connected to a local variable and output the
hostname of the client to a log file.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example Languages: &lt;/span&gt;C and C++&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;struct hostent *clienthp;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char hostname[MAX_LEN];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// create server socket, bind to server address and listen on
socket&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// accept client connections and process requests&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int count = 0;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;for (count = 0; count &amp;lt; MAX_CONNECTIONS; count++)
{&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int clientlen = sizeof(struct sockaddr_in);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int clientsocket = accept(serversocket, (struct sockaddr
*)&amp;amp;clientaddr, &amp;amp;clientlen);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (clientsocket &amp;gt;= 0) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;clienthp = gethostbyaddr((char
*)&amp;amp;clientaddr.sin_addr.s_addr, &lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;sizeof(clientaddr.sin_addr.s_addr), AF_INET);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcpy(hostname, clienthp-&amp;gt;h_name);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;logOutput("Accepted client connection from host ",
hostname);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// process client request&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;close(clientsocket);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt; }&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;close(serversocket);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the hostname of the client that connected may be longer than
the allocated size for the local hostname variable. This will result in
a buffer overflow when copying the client hostname to the local variable
using the strcpy method.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_120_Observed Examples" id="oc_120_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-1094" target="_blank"&gt;CVE-2000-1094&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;buffer overflow using command with long
argument&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-0046" target="_blank"&gt;CVE-1999-0046&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;buffer overflow in local program using long
environment variable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1337" target="_blank"&gt;CVE-2002-1337&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;buffer overflow in comment characters, when
product increments a counter for a "&amp;gt;" but does not decrement for
"&amp;lt;"&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0595" target="_blank"&gt;CVE-2003-0595&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;By replacing a valid cookie value with an
extremely long string of characters, an attacker may overflow the
application's buffers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0191" target="_blank"&gt;CVE-2001-0191&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;By replacing a valid cookie value with an
extremely long string of characters, an attacker may overflow the
application's buffers.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_120_Potential Mitigations" id="oc_120_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Language Selection&lt;/p&gt;&lt;p&gt;Use a language with features that can automatically mitigate or
eliminate buffer overflows.&lt;/p&gt;&lt;p&gt;For example, many languages that perform their own memory management,
such as Java and Perl, are not subject to buffer overflows. Other
languages, such as Ada and C#, typically provide overflow protection,
but the protection can be disabled by the programmer.&lt;/p&gt;&lt;p&gt;Be wary that a language's interface to native code may still be
subject to overflows, even if the language itself is theoretically safe.
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Libraries or Frameworks&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to
occur or provides constructs that make this weakness easier to
avoid.&lt;/p&gt;&lt;p&gt;Examples include the Safe C String Library (SafeStr) by Messier and
Viega, and the Strsafe.h library from Microsoft. These libraries provide
safer versions of overflow-prone string-handling functions. This is not
a complete solution, since many buffer overflows are not related to
strings.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Build and Compilation&lt;/p&gt;&lt;p&gt;Run or compile your software using features or extensions that
automatically provide a protection mechanism that mitigates or
eliminates buffer overflows.&lt;/p&gt;&lt;p&gt;For example, certain compilers and extensions provide automatic buffer
overflow detection mechanisms that are built into the compiled code.
Examples include the Microsoft Visual Studio /GS flag, Fedora/Red Hat
FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice.&lt;/p&gt;&lt;p&gt;This is not necessarily a complete solution, since these mechanisms
can only detect certain types of overflows. In addition, a buffer
overflow attack can still cause a denial of service, since the typical
response is to exit the application.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Programmers should adhere to the following rules when allocating and
managing their applications memory:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Double check that your buffer is as large as you specify.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;When using functions that accept a number of bytes to copy, such
as strncpy(), be aware that if the destination buffer size is equal
to the source buffer size, it may not NULL-terminate the
string.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Check buffer boundaries if calling this function in a loop and
make sure you are not in danger of writing past the allocated
space.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If necessary, truncate all input strings to a reasonable length
before passing them to the copy and concatenation functions.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Operation&lt;/p&gt;&lt;p&gt;Use a feature like Address Space Layout Randomization (ASLR). This is
not a complete solution. However, it forces the attacker to guess an
unknown value that changes every program execution.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Operation&lt;/p&gt;&lt;p&gt;Use a CPU and operating system that offers Data Execution Protection
(NX) or its equivalent. This is not a complete solution, since buffer
overflows could be used to overwrite nearby variables to modify the
software's state in dangerous ways. In addition, it cannot be used in
cases in which self-modifying code is required.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phases:  Build and Compilation; Operation&lt;/p&gt;&lt;p&gt;Most mitigating technologies at the compiler or OS level to date
address only a subset of buffer overflow problems and rarely provide
complete protection against even that subset. It is good practice to
implement strategies to increase the workload of an attacker, such as
leaving the attacker to guess an unknown value that changes every
program execution.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Replace unbounded copy functions with analogous functions that support
length arguments, such as strcpy with strncpy. Create these if they are
not available.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Moderate&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;This approach is still susceptible to calculation errors, including
issues such as off-by-one errors (CWE-193) and incorrectly calculating
buffer lengths (CWE-131).&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_120_Weakness Ordinalities" id="oc_120_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Resultant&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness is typically related to the presence of some other
weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Primary&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness exists independent of other weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_120_Relationships" id="oc_120_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;633&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=633" target="_blank"&gt;Weaknesses that Affect Memory&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;722&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=722" target="_blank"&gt;OWASP Top Ten 2004 Category A1 - Unvalidated Input&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004)&lt;/span&gt;711&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;726&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=726" target="_blank"&gt;OWASP Top Ten 2004 Category A5 - Buffer Overflows&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;741&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=741" target="_blank"&gt;CERT C Secure Coding Section 07 - Characters and Strings (STR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;802&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=802" target="_blank"&gt;2010 Top 25 - Risky Resource Management&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;123&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=123" target="_blank"&gt;Write-what-where Condition&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;785&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=785" target="_blank"&gt;Use of Path Manipulation Function without Maximum-sized Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;170&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=170" target="_blank"&gt;Improper Null Termination&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;231&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=231" target="_blank"&gt;Improper Handling of Extra Values&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;242&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=242" target="_blank"&gt;Use of Inherently Dangerous Function&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;416&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=416" target="_blank"&gt;Use After Free&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;456&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=456" target="_blank"&gt;Missing Initialization&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;124&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=124" target="_blank"&gt;Buffer Underwrite ('Buffer Underflow')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanAlsoBe&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;196&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=196" target="_blank"&gt;Unsigned to Signed Conversion Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_120_Relationship Notes" id="oc_120_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;At the code level, stack-based and heap-based overflows do not differ
significantly, so there usually is not a need to distinguish them. From the
attacker perspective, they can be quite different, since different
techniques are required to exploit them.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Affected Resources"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Affected Resources&lt;/div&gt;&lt;div name="oc_120_Affected Resources" id="oc_120_Affected Resources" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Functional Areas"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Functional Areas&lt;/div&gt;&lt;div name="oc_120_Functional Areas" id="oc_120_Functional Areas" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory Management&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Causal Nature"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt;&lt;a href="javascript:toggleblocksOC('120_Causal Nature');"&gt;f&lt;/a&gt; &lt;/span&gt;Causal Nature&lt;/div&gt;&lt;div name="oc_120_Causal Nature" id="oc_120_Causal Nature" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Explicit&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_120_Taxonomy Mappings" id="oc_120_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Unbounded Transfer ('classic overflow')&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A1&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Unvalidated Input&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A5&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflows&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR35-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Do not copy data from an unbounded source to a fixed-length
array&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;WASC&lt;/td&gt;&lt;td valign="top"&gt;7&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_120_Related Attack Patterns" id="oc_120_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org8.html" target="_blank"&gt;8&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow in an API Call&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org9.html" target="_blank"&gt;9&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow in Local Command-Line Utilities&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org10.html" target="_blank"&gt;10&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Environment Variables&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org14.html" target="_blank"&gt;14&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Client-side Injection-induced Buffer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org24.html" target="_blank"&gt;24&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Filter Failure through Buffer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org92.html" target="_blank"&gt;92&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Forced Integer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org42.html" target="_blank"&gt;42&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;MIME Conversion&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org44.html" target="_blank"&gt;44&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Binary Resource File&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org45.html" target="_blank"&gt;45&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Symbolic Links&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org100.html" target="_blank"&gt;100&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Buffers&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org46.html" target="_blank"&gt;46&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Variables and Tags&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org47.html" target="_blank"&gt;47&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Parameter Expansion&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org67.html" target="_blank"&gt;67&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;String Format Overflow in syslog()&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_120_White Box Definitions" id="oc_120_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path includes a Buffer Write Operation such
that:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. the expected size of the buffer is greater than the actual size of
the buffer where expected size is equal to the sum of the size of the
data item and the position in the buffer&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Where Buffer Write Operation is a statement that writes a data item of a
certain size into a buffer at a certain position and at a certain
index&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_120_References" id="oc_120_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-11] M. Howard and
D. LeBlanc. "Writing Secure Code". Chapter 5, "Public Enemy #1: The Buffer Overrun" Page
127. 2nd Edition. Microsoft. 2002. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-17] Michael Howard, David LeBlanc
and John Viega. "24 Deadly Sins of Software Security". "Sin 5: Buffer Overruns." Page 89. McGraw-Hill. 2010. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Microsoft. "Using the Strsafe.h Functions". &amp;lt;&lt;a href="http://msdn.microsoft.com/en-us/library/ms647466.aspx" target="_blank"&gt;http://msdn.microsoft.com/en-us/library/ms647466.aspx&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Matt Messier and
John Viega. "Safe C String Library v1.0.3". &amp;lt;&lt;a href="http://www.zork.org/safestr/" target="_blank"&gt;http://www.zork.org/safestr/&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Michael Howard. "Address Space Layout Randomization in Windows
Vista". &amp;lt;&lt;a href="http://blogs.msdn.com/michael_howard/archive/2006/05/26/address-space-layout-randomization-in-windows-vista.aspx" target="_blank"&gt;http://blogs.msdn.com/michael_howard/archive/2006/05/26/address-space-layout-randomization-in-windows-vista.aspx&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Arjan van de Ven. "Limiting buffer overflows with ExecShield". &amp;lt;&lt;a href="http://www.redhat.com/magazine/009jul05/features/execshield/" target="_blank"&gt;http://www.redhat.com/magazine/009jul05/features/execshield/&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;"PaX". &amp;lt;&lt;a href="http://en.wikipedia.org/wiki/PaX" target="_blank"&gt;http://en.wikipedia.org/wiki/PaX&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_120_Content History" id="oc_120_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-15&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Veracode&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Suggested OWASP Top Ten 2004
mapping&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Applicable Platforms,
Common Consequences, Relationships, Observed Example, Other Notes,
Taxonomy Mappings, Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Changed name and description to more clearly emphasize the
"classic" nature of the overflow.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Description, Name, Other Notes,
Terminology Notes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Other Notes, Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Other Notes,
Potential Mitigations, References, Relationship Notes,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Other Notes, Potential Mitigations,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Demonstrative Examples, Detection Factors, Potential Mitigations,
References, Related Attack Patterns, Relationships, Taxonomy Mappings,
Time of Introduction, Type&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-04-05&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples, Related Attack Patterns&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Unbounded Transfer ('Classic
Buffer Overflow')&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_310</key><name>Log_Forging</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could engineer audit logs of security-sensitive actions and lay a false audit trail, potentially implicating an innocent user or hiding an incident.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application writes audit logs upon security-sensitive actions. Since the audit log includes user input that is neither checked for data type validity nor subsequently sanitized, the input could contain false information made to look like legitimate audit log data,&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Validation is not a replacement for encoding. Fully encode all dynamic data, regardless of source, before embedding it in logs.&lt;/li&gt;
&lt;li&gt;Use a secure logging mechanism.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Swift&lt;/h3&gt;&lt;h4&gt;Ensure you encode any special delimiter characters before writing to a log file.&lt;/h4&gt;&lt;pre&gt;


print(logDetails.stringByReplacingOccurrencesOfString("\n", withString: "\\n"))


&lt;/pre&gt;&lt;h3&gt;Objc&lt;/h3&gt;&lt;h4&gt;Ensure you encode any special delimiter characters before writing to a log file.&lt;/h4&gt;&lt;pre&gt;


NSLog(@"%@", [logDetails stringByReplacingOccurrencesOfString:@"\n" withString:@"\\n"]);


&lt;/pre&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
Ensure you encode any special delimiter characters before writing to a log file.

      &lt;/h4&gt;&lt;pre&gt;


Log.Write( logDetails.Replace(CRLF, @"\CRLF"));



      &lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;
Ensure you encode any special delimiter characters before writing to a log file.

      &lt;/h4&gt;&lt;pre&gt;


Log.Write( logDetails.Replace(CRLF, @"\CRLF"));


      &lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1839</key><name>R12_10_Comma_Operator_Used</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 12-10&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 12-10&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 11027&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            The &lt;a href="http://en.wikipedia.org/wiki/Comma_operator"&gt;comma operator&lt;/a&gt;
            shall not be used.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1863</key><name>R16_07_Parameter_Pointer_To_Const_Where_Not_Modified</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 16-7&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-7&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11051&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Every pointer paramater in a function, whose adress object is not modified,
            shall be declared as &amp;#39;pointer to const&amp;#39;.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_315</key><name>Information_Exposure_Through_an_Error_Message</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Exposed details about the application&amp;#8217;s environment, users, or associated data (for example, stack trace) could enable an attacker to find another flaw and help the attacker to mount an attack.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application generates an error message including raw exceptions, either by not being handled, by explicit returning of the object, or by configuration. Exception details may include sensitive information that could leak out of the exception to the users.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;ol&gt;
&lt;li&gt;Any method that could cause an exception should be wrapped in a try-catch block that:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Explicitly handles expected exceptions.&lt;/li&gt;
&lt;li&gt;Includes a default solution to explicitly handle unexpected exceptions.&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Configure a global handler to prevent unhandled errors from leaving the application.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
Do not reveal exception details, instead always return a static message.

      &lt;/h4&gt;&lt;pre&gt;


try
{
// Database access or other potentially dangerous function
}
catch (SqlException ex)
{
LogException(ex);
Response.Write("Error occurred.");
}



      &lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;
Do not reveal exception details, instead always return a static message.

      &lt;/h4&gt;&lt;pre&gt;


try
{
// Database access or other potentially dangerous function
}
catch (SqlException ex)
{
LogException(ex);
Response.Write("Error occurred.");
}


      &lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1856</key><name>R15_05_No_Cases_in_Switch_Statement</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 15-5&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 15-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11044&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Every &amp;#39;switch&amp;#39; statement shall have at least once non-&amp;#39;default&amp;#39; clause.&lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1835</key><name>R10_06_U_Suffix_Not_Applied_To_Unsigned_Const</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 10-6&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 10-6&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 11023&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            The &amp;#39;U&amp;#39; or &amp;#39;u&amp;#39; suffix shall be attached to any unsigned numeric literal.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_331</key><name>Use_of_Uninitialized_Pointer</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Use of Uninitialized Variable&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;457&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Variant)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_457_Description" id="oc_457_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The code uses a variable that has not been initialized, leading
to unpredictable or unintended results.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;In some languages, such as C, an uninitialized variable contains contents
of previously-used memory. An attacker can sometimes control or read these
contents.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_457_Time of Introduction" id="oc_457_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_457_Applicable Platforms" id="oc_457_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C: &lt;span class="smaller" style="font-style:italic"&gt;(Sometimes)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;C++: &lt;span class="smaller" style="font-style:italic"&gt;(Sometimes)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Perl: &lt;span class="smaller" style="font-style:italic"&gt;(Often)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_457_Common Consequences" id="oc_457_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Initial variables usually contain junk, which can not be trusted for
consistency. This can lead to denial of service conditions, or modify
control flow in unexpected ways. In some cases, an attacker can
"pre-initialize" the variable using previous actions, which might enable
code execution. This can cause a race condition if a lock variable check
passes when it should not.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Authorization&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Strings that are not initialized are especially dangerous, since many
functions expect a null at the end -- and only at the end -- of a
string.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_457_Likelihood of Exploit" id="oc_457_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_457_Demonstrative Examples" id="oc_457_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following switch statement is intended to set the values of the
variables aN and bN, but in the default case, the programmer has
accidentally set the value of aN twice. As a result, bN will have an
undefined value.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;switch (ctl) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;case -1:&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;aN = 0;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;bN = 0;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;case 0:&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;aN = i;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;bN = -i;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;case 1:&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;aN = i + NEXT_SZ;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;bN = i - NEXT_SZ;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;default:&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;aN = -1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;aN = -1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;repaint(aN, bN);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Most uninitialized variable issues result in general software
reliability problems, but if attackers can intentionally trigger the use
of an uninitialized variable, they might be able to launch a denial of
service attack by crashing the program. Under the right circumstances,
an attacker may be able to control the value of an uninitialized
variable by affecting the values on the stack prior to the invocation of
the function.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;&lt;div class="indent "&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example Languages: &lt;/span&gt;C++ and Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int foo;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;void bar() {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;if (foo==0)&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/.../&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/../&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_457_Observed Examples" id="oc_457_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0081" target="_blank"&gt;CVE-2008-0081&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Uninitialized variable leads to code execution in
popular desktop application.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4682" target="_blank"&gt;CVE-2007-4682&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Crafted input triggers dereference of an
uninitialized object pointer.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-3468" target="_blank"&gt;CVE-2007-3468&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Crafted audio file triggers crash when an
uninitialized variable is used.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-2728" target="_blank"&gt;CVE-2007-2728&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Uninitialized random seed variable
used.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_457_Potential Mitigations" id="oc_457_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Assign all variables to an initial value.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Build and Compilation&lt;/p&gt;&lt;p&gt;Most compilers will complain about the use of uninitialized variables
if warnings are turned on.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p&gt;The choice could be made to use a language that is not susceptible to
these issues.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Mitigating technologies such as safe string libraries and container
abstractions could be introduced.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_457_Other Notes" id="oc_457_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Before variables are initialized, they generally contain junk data of what
was left in the memory that the variable takes up. This data is very rarely
useful, and it is generally advised to pre-initialize variables or set them
to their first values early. If one forgets -- in the C language -- to
initialize, for example a char *, many of the simple string libraries may
often return incorrect results as they expect the null termination to be at
the end of a string.&lt;/p&gt;
&lt;p&gt;Stack variables in C and C++ are not initialized by default. Their initial
values are determined by whatever happens to be in their location on the
stack at the time the function is invoked. Programs should never use the
value of an uninitialized variable. It is not uncommon for programmers to
use an uninitialized variable in code that handles errors or other rare and
exceptional circumstances. Uninitialized variable warnings can sometimes
indicate the presence of a typographic error in the code.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_457_Relationships" id="oc_457_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;456&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=456" target="_blank"&gt;Missing Initialization&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_457_Taxonomy Mappings" id="oc_457_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Uninitialized variable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Uninitialized Variable&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_457_White Box Definitions" id="oc_457_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. start statement that defines variable&lt;/p&gt;
&lt;p&gt;2. end statement that accesses the variable&lt;/p&gt;
&lt;p&gt;3. the code path does not contain a statement that assigns value to
the variable&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_457_References" id="oc_457_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;mercy. "Exploiting Uninitialized Data". Jan 2006. &amp;lt;&lt;a href="%0A%09%09%09%09%09%09http://www.felinemenace.org/~mercy/papers/UBehavior/UBehavior.zip" target="_blank"&gt;
http://www.felinemenace.org/~mercy/papers/UBehavior/UBehavior.zip&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Microsoft Security Vulnerability Research &amp;amp;
Defense. "MS08-014 : The Case of the Uninitialized Stack Variable
Vulnerability". 2008-03-11. &amp;lt;&lt;a href="http://blogs.technet.com/swi/archive/2008/03/11/the-case-of-the-uninitialized-stack-variable-vulnerability.aspx" target="_blank"&gt;http://blogs.technet.com/swi/archive/2008/03/11/the-case-of-the-uninitialized-stack-variable-vulnerability.aspx&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_457_Content History" id="oc_457_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Description, Relationships, Observed Example, Other Notes, References,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Demonstrative Examples,
Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Uninitialized
Variable&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1816</key><name>R04_01_Non_ISO_Escape_Sequences</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 4-1&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 4-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11004&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            The only escape sequences that are allowed are those defined by the ISO C-90
            Standard.&lt;br&gt;
            .&lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_314</key><name>Unchecked_Array_Index</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Improper Validation of Array Index&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;129&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_129_Description" id="oc_129_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The product uses untrusted input when calculating or using an
array index, but the product does not validate or incorrectly validates the
index to ensure the index references a valid position within the array.
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_129_Alternate Terms" id="oc_129_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;out-of-bounds array index&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;index-out-of-range&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;array index underflow&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_129_Time of Introduction" id="oc_129_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_129_Applicable Platforms" id="oc_129_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C: &lt;span class="smaller" style="font-style:italic"&gt;(Often)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;C++: &lt;span class="smaller" style="font-style:italic"&gt;(Often)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Language-independent&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_129_Common Consequences" id="oc_129_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Unchecked array indexing will very likely result in the corruption of
relevant memory and perhaps instructions, leading to a crash, if the
values are outside of the valid memory area.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;If the memory corrupted is data, rather than instructions, the system
will continue to function with improper values.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Confidentiality&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Unchecked array indexing can also trigger out-of-bounds read or write
operations, or operations on the wrong objects; i.e., "buffer overflows"
are not always the result. This may result in the exposure or
modification of sensitive data.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;If the memory accessible by the attacker can be effectively
controlled, it may be possible to execute arbitrary code, as with a
standard buffer overflow and possibly without the use of large inputs if
a precise index can be controlled.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Confidentiality&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;A single fault could allow either an overflow (CWE-788) or underflow
(CWE-786) of the array index. What happens next will depend on the type
of operation being performed out of bounds, but can expose sensitive
information, cause a system crash, or possibly lead to arbitrary code
execution.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_129_Likelihood of Exploit" id="oc_129_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Detection Methods"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Detection Methods&lt;/div&gt;&lt;div name="oc_129_Detection Methods" id="oc_129_Detection Methods" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Static Analysis&lt;/p&gt;&lt;p&gt;This weakness can often be detected using automated static analysis
tools. Many modern tools use data flow analysis or constraint-based
techniques to minimize the number of false positives.&lt;/p&gt;&lt;p&gt;Automated static analysis generally does not account for environmental
considerations when reporting out-of-bounds memory operations. This can
make it difficult for users to determine which warnings should be
investigated first. For example, an analysis tool might report array
index errors that originate from command line arguments in a program
that is not expected to run with setuid or other special
privileges.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: High&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;This is not a perfect solution, since 100% accuracy and coverage are
not feasible.&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Dynamic Analysis&lt;/p&gt;&lt;p&gt;This weakness can be detected using dynamic tools and techniques that
interact with the software using large test suites with many diverse
inputs, such as fuzz testing (fuzzing), robustness testing, and fault
injection. The software's operation may slow down, but it should not
become unstable, crash, or generate incorrect results.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Black Box&lt;/p&gt;&lt;p&gt;Black box methods might not get the needed code coverage within
limited time constraints, and a dynamic test might not produce any
noticeable side effects even if it is successful.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_129_Demonstrative Examples" id="oc_129_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following C/C++ example retrieves the sizes of messages for a
pop3 mail server. The message sizes are retrieved from a socket that returns
in a buffer the message number and the message size, the message number
(num) and size (size) are extracted from the buffer and the message size is
placed into an array using the message number for the array
index.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* capture the sizes of all messages */&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int getsizes(int sock, int count, int *sizes) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char buf[BUFFER_SIZE];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int ok;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int num, size;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;// read values from socket and added to sizes
array&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;while ((ok = gen_recv(sock, buf, sizeof(buf))) == 0)&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;{&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;// continue read from socket until buf only contains
'.'&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (DOTLINE(buf))&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;else if (sscanf(buf, "%d %d", &amp;amp;num, &amp;amp;size)
== 2)&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;sizes[num - 1] = size;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt; }&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;In this example the message number retrieved from the buffer could be
a value that is outside the allowable range of indices for the array and
could possibly be a negative number. Without proper validation of the
value to be used for the array index an array overflow could occur and
could potentially lead to unauthorized access to memory addresses and
system crashes. The value of the array index should be validated to
ensure that it is within the allowable range of indices for the array as
in the following code.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* capture the sizes of all messages */&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int getsizes(int sock, int count, int *sizes) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char buf[BUFFER_SIZE];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int ok;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int num, size;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;// read values from socket and added to sizes
array&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;while ((ok = gen_recv(sock, buf, sizeof(buf))) == 0)&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;{&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;// continue read from socket until buf only contains
'.'&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (DOTLINE(buf))&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;else if (sscanf(buf, "%d %d", &amp;amp;num, &amp;amp;size)
== 2) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;if (num &amp;gt; 0 &amp;amp;&amp;amp; num &amp;lt;=
(unsigned)count)&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;sizes[num - 1] = size;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;else&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* warn about possible attempt to induce buffer
overflow */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;report(stderr, "Warning: ignoring bogus data for
message sizes returned by server.\n");&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt; }&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;In the code snippet below, an unchecked integer value is used to
reference an object in an array.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;public String getValue(int index) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;return array[index];&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If index is outside of the range of the array, this may result in an
ArrayIndexOutOfBounds Exception being raised.&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;In the following Java example the method displayProductSummary is
called from a Web service servlet to retrieve product summary information
for display to the user. The servlet obtains the integer value of the
product number from the user and passes it to the displayProductSummary
method. The displayProductSummary method passes the integer value of the
product number to the getProductSummary method which obtains the product
summary from the array object containing the project summaries using the
integer value of the product number as the array index.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;// Method called from servlet to obtain product
information&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;public String displayProductSummary(int index) {&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;String productSummary = new String("");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;try {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;String productSummary = getProductSummary(index);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;} catch (Exception ex) {...}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return productSummary; &lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;public String getProductSummary(int index) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;return products[index];&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;In this example the integer value used as the array index that is
provided by the user may be outside the allowable range of indices for
the array which may provide unexpected results or may comes the
application to fail. The integer value used for the array index should
be validated to ensure that it is within the allowable range of indices
for the array as in the following code.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;// Method called from servlet to obtain product
information&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;public String displayProductSummary(int index) {&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;String productSummary = new String("");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;try {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;String productSummary = getProductSummary(index);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;} catch (Exception ex) {...}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return productSummary; &lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;public String getProductSummary(int index) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;String productSummary = "";&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if ((index &amp;gt;= 0) &amp;amp;&amp;amp; (index &amp;lt;
MAX_PRODUCTS)) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;productSummary = products[index];&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;else {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;System.err.println("index is out of bounds");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;throw new IndexOutOfBoundsException();&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return productSummary;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;An alternative in Java would be to use one of the collection objects
such as ArrayList that will automatically generate an exception if an
attempt is made to access an array index that is out of bounds.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;ArrayList productArray = new ArrayList(MAX_PRODUCTS);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;try {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;productSummary = (String) productArray.get(index);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;} catch (IndexOutOfBoundsException ex) {...}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_129_Observed Examples" id="oc_129_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0369" target="_blank"&gt;CVE-2005-0369&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;large ID in packet used as array
index&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1009" target="_blank"&gt;CVE-2001-1009&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;negative array index as argument to POP LIST
command&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0721" target="_blank"&gt;CVE-2003-0721&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Integer signedness error leads to negative array
index&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1189" target="_blank"&gt;CVE-2004-1189&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;product does not properly track a count and a
maximum number, which can lead to resultant array index
overflow.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5756" target="_blank"&gt;CVE-2007-5756&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;chain: device driver for packet-capturing software
allows access to an unintended IOCTL with resultant array index
error.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_129_Potential Mitigations" id="oc_129_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p class="optheading"&gt;Strategies:  Input Validation; Libraries or Frameworks&lt;/p&gt;&lt;p&gt;Use an input validation framework such as Struts or the OWASP ESAPI
Validation API. If you use Struts, be mindful of weaknesses covered by
the CWE-101 category.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;For any security checks that are performed on the client side, ensure
that these checks are duplicated on the server side, in order to avoid
CWE-602. Attackers can bypass the client-side checks by modifying values
after the checks have been performed, or by changing the client to
remove the client-side checks entirely. Then, these modified values
would be submitted to the server.&lt;/p&gt;&lt;p&gt;Even though client-side checks provide minimal benefits with respect
to server-side security, they are still useful. First, they can support
intrusion detection. If the server receives input that should have been
rejected by the client, then it may be an indication of an attack.
Second, client-side error-checking can provide helpful feedback to the
user about the expectations for valid input. Third, there may be a
reduction in server-side processing time for accidental input errors,
although this is typically a small savings.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Language Selection&lt;/p&gt;&lt;p&gt;Use a language with features that can automatically mitigate or
eliminate out-of-bounds indexing errors.&lt;/p&gt;&lt;p&gt;For example, Ada allows the programmer to constrain the values of a
variable and languages such as Java and Ruby will allow the programmer
to handle exceptions when an out-of-bounds index is accessed. &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Input Validation&lt;/p&gt;&lt;p&gt;Assume all input is malicious. Use an "accept known good" input
validation strategy (i.e., use a whitelist). Reject any input that does
not strictly conform to specifications, or transform it into something
that does. Use a blacklist to reject any unexpected inputs and detect
potential attacks.&lt;/p&gt;&lt;p&gt;When accessing a user-controlled array index, use a stringent range of
values that are within the target array. Make sure that you do not allow
negative values to be used. That is, verify the minimum as well as the
maximum of the range of acceptable values.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Be especially careful to validate your input when you invoke code that
crosses language boundaries, such as from an interpreted language to
native code. This could create an unexpected interaction between the
language boundaries. Ensure that you are not violating any of the
expectations of the language with which you are interfacing. For
example, even though Java may not be susceptible to buffer overflows,
providing a large argument in a call to native code might trigger an
overflow.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_129_Weakness Ordinalities" id="oc_129_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Resultant&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;The most common condition situation leading to unchecked array
indexing is the use of loop index variables as buffer indexes. If the
end condition for the loop is subject to a flaw, the index can grow or
shrink unbounded, therefore causing a buffer overflow or underflow.
Another common situation leading to this condition is the use of a
function's return value, or the resulting value of a calculation
directly as an index in to a buffer.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_129_Relationships" id="oc_129_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;189&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=189" target="_blank"&gt;Numeric Errors&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts&lt;/span&gt;699&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;633&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=633" target="_blank"&gt;Weaknesses that Affect Memory&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;738&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=738" target="_blank"&gt;CERT C Secure Coding Section 04 - Integers (INT)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;740&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=740" target="_blank"&gt;CERT C Secure Coding Section 06 - Arrays (ARR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard&lt;/span&gt;734&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;802&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=802" target="_blank"&gt;2010 Top 25 - Risky Resource Management&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;789&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=789" target="_blank"&gt;Uncontrolled Memory Allocation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;124&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=124" target="_blank"&gt;Buffer Underwrite ('Buffer Underflow')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Theoretical Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Theoretical Notes&lt;/div&gt;&lt;div name="oc_129_Theoretical Notes" id="oc_129_Theoretical Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt; An improperly validated array index might lead directly to the
always-incorrect behavior of "access of array using out-of-bounds index."
&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Affected Resources"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Affected Resources&lt;/div&gt;&lt;div name="oc_129_Affected Resources" id="oc_129_Affected Resources" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Causal Nature"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt;&lt;a href="javascript:toggleblocksOC('129_Causal Nature');"&gt;f&lt;/a&gt; &lt;/span&gt;Causal Nature&lt;/div&gt;&lt;div name="oc_129_Causal Nature" id="oc_129_Causal Nature" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Explicit&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_129_Taxonomy Mappings" id="oc_129_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Unchecked array indexing&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;INDEX - Array index overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;ARR00-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Understand how arrays work&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;ARR30-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Guarantee that array indices are within the valid
range&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;ARR38-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Do not add or subtract an integer to a pointer if the
resulting value does not refer to a valid array element&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;INT32-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Ensure that operations on signed integers do not result in
overflow&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_129_Related Attack Patterns" id="oc_129_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org100.html" target="_blank"&gt;100&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Buffers&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_129_References" id="oc_129_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-11] M. Howard and
D. LeBlanc. "Writing Secure Code". Chapter 5, "Array Indexing Errors" Page
144. 2nd Edition. Microsoft. 2002. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_129_Content History" id="oc_129_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Sean Eidemiller&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated demonstrative
examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Applicable Platforms,
Common Consequences, Relationships, Other Notes, Taxonomy Mappings,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description, Name,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Observed Examples, Other Notes, Potential Mitigations, Theoretical Notes,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Demonstrative Examples,
Detection Factors, Likelihood of Exploit, Potential Mitigations, References,
Related Attack Patterns, Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-04-05&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Related Attack Patterns&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Unchecked Array
Indexing&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2709</key><name>Missing_Precision</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;120&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_120_Description" id="oc_120_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The program copies an input buffer to an output buffer without
verifying that the size of the input buffer is less than the size of the output
buffer, leading to a buffer overflow.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;A buffer overflow condition exists when a program attempts to put more
data in a buffer than it can hold, or when a program attempts to put data in
a memory area outside of the boundaries of a buffer. The simplest type of
error, and the most common cause of buffer overflows, is the "classic" case
in which the program copies the buffer without checking its length at all.
Other variants exist, but the existence of a classic overflow strongly
suggests that the programmer is not considering even the most basic of
security protections.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_120_Alternate Terms" id="oc_120_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;buffer overrun:&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;p&gt;Some prominent vendors and researchers use the term "buffer overrun,"
but most people use "buffer overflow."&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Unbounded Transfer&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Terminology Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Terminology Notes&lt;/div&gt;&lt;div name="oc_120_Terminology Notes" id="oc_120_Terminology Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Many issues that are now called "buffer overflows" are substantively

different than the "classic" overflow, including entirely different bug
types that rely on overflow exploit techniques, such as integer signedness
errors, integer overflows, and format string bugs. This imprecise
terminology can make it difficult to determine which variant is being
reported.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_120_Time of Introduction" id="oc_120_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_120_Applicable Platforms" id="oc_120_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;p&gt;Assembly&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_120_Common Consequences" id="oc_120_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p class="smaller" style="font-weight:normal"&gt;&lt;span class="subheading"&gt;Technical Impact:&lt;/span&gt;&lt;i&gt; Execute unauthorized code or
commands&lt;/i&gt;&lt;/p&gt;&lt;div style="padding-top:5px"&gt;&lt;p&gt;Buffer overflows often can be used to execute arbitrary code, which is
usually outside the scope of a program's implicit security policy. This
can often be used to subvert any other security service.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Buffer overflows generally lead to crashes. Other attacks leading to
lack of availability are possible, including putting the program into an
infinite loop.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_120_Likelihood of Exploit" id="oc_120_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High to Very High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Detection Methods"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Detection Methods&lt;/div&gt;&lt;div name="oc_120_Detection Methods" id="oc_120_Detection Methods" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Static Analysis&lt;/p&gt;&lt;p&gt;This weakness can often be detected using automated static analysis
tools. Many modern tools use data flow analysis or constraint-based
techniques to minimize the number of false positives.&lt;/p&gt;&lt;p&gt;Automated static analysis generally does not account for environmental
considerations when reporting out-of-bounds memory operations. This can
make it difficult for users to determine which warnings should be
investigated first. For example, an analysis tool might report buffer
overflows that originate from command line arguments in a program that
is not expected to run with setuid or other special privileges.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: High&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;Detection techniques for buffer-related errors are more mature than
for most other weakness types.&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Dynamic Analysis&lt;/p&gt;&lt;p&gt;This weakness can be detected using dynamic tools and techniques that
interact with the software using large test suites with many diverse
inputs, such as fuzz testing (fuzzing), robustness testing, and fault
injection. The software's operation may slow down, but it should not
become unstable, crash, or generate incorrect results.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Manual Analysis&lt;/p&gt;&lt;p&gt;Manual analysis can be useful for finding this weakness, but it might
not achieve desired code coverage within limited time constraints. This
becomes difficult for weaknesses that must be considered for all inputs,
since the attack surface can be too large.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_120_Demonstrative Examples" id="oc_120_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code asks the user to enter their last name and then
attempts to store the value entered in the last_name array. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example

Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char last_name[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;printf ("Enter your last name: ");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;scanf ("%s", last_name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The problem with the code above is that it does not check the size of
the name entered by the user. If the user enters
"Very_very_long_last_name" which is 24 characters long, then a buffer
overflow will occur since the array can only hold 20 characters total.
&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following code attempts to create a local copy of a buffer to
perform some manipulations to the data.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;void manipulate_string(char* string){&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char buf[24];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcpy(buf, string);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the programmer does not ensure that the size of the data
pointed to by string will fit in the local buffer and blindly copies the
data with the potentially dangerous strcpy() function. This may result
in a buffer overflow condition if an attacker can influence the contents
of the string parameter.&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;The excerpt below calls the gets() function in C, which is
inherently unsafe.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char buf[24];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("Please enter your name and press
&amp;lt;Enter&amp;gt;\n");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;gets(buf);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the programmer uses the function gets() which is inherently
unsafe because it blindly copies all input from STDIN to the buffer
without checking size. This allows the user to provide a string that is
larger than the buffer size, resulting in an overflow condition.&lt;/p&gt;&lt;p class="subheading"&gt;Example 4&lt;/p&gt;&lt;p&gt;In the following example, a server accepts connections from a client
and processes the client request. After accepting a client connection, the
program will obtain client information using the gethostbyaddr method, copy
the hostname of the client that connected to a local variable and output the
hostname of the client to a log file.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example Languages: &lt;/span&gt;C and C++&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;struct hostent *clienthp;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char hostname[MAX_LEN];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// create server socket, bind to server address and listen on
socket&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// accept client connections and process requests&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int count = 0;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;for (count = 0; count &amp;lt; MAX_CONNECTIONS; count++)
{&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int clientlen = sizeof(struct sockaddr_in);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int clientsocket = accept(serversocket, (struct sockaddr
*)&amp;amp;clientaddr, &amp;amp;clientlen);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (clientsocket &amp;gt;= 0) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;clienthp = gethostbyaddr((char
*)&amp;amp;clientaddr.sin_addr.s_addr, &lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;sizeof(clientaddr.sin_addr.s_addr), AF_INET);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcpy(hostname, clienthp-&amp;gt;h_name);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;logOutput("Accepted client connection from host ",
hostname);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;// process client request&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;close(clientsocket);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt; }&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;close(serversocket);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the hostname of the client that connected may be longer than
the allocated size for the local hostname variable. This will result in
a buffer overflow when copying the client hostname to the local variable
using the strcpy method.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_120_Observed Examples" id="oc_120_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-1094" target="_blank"&gt;CVE-2000-1094&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;buffer overflow using command with long
argument&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-0046" target="_blank"&gt;CVE-1999-0046&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;buffer overflow in local program using long
environment variable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1337" target="_blank"&gt;CVE-2002-1337&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;buffer overflow in comment characters, when
product increments a counter for a "&amp;gt;" but does not decrement for
"&amp;lt;"&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0595" target="_blank"&gt;CVE-2003-0595&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;By replacing a valid cookie value with an
extremely long string of characters, an attacker may overflow the
application's buffers.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0191" target="_blank"&gt;CVE-2001-0191&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;By replacing a valid cookie value with an
extremely long string of characters, an attacker may overflow the
application's buffers.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_120_Potential Mitigations" id="oc_120_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Language Selection&lt;/p&gt;&lt;p&gt;Use a language with features that can automatically mitigate or
eliminate buffer overflows.&lt;/p&gt;&lt;p&gt;For example, many languages that perform their own memory management,
such as Java and Perl, are not subject to buffer overflows. Other
languages, such as Ada and C#, typically provide overflow protection,
but the protection can be disabled by the programmer.&lt;/p&gt;&lt;p&gt;Be wary that a language's interface to native code may still be
subject to overflows, even if the language itself is theoretically safe.
&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Libraries or Frameworks&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to
occur or provides constructs that make this weakness easier to
avoid.&lt;/p&gt;&lt;p&gt;Examples include the Safe C String Library (SafeStr) by Messier and
Viega, and the Strsafe.h library from Microsoft. These libraries provide
safer versions of overflow-prone string-handling functions. This is not
a complete solution, since many buffer overflows are not related to
strings.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Build and Compilation&lt;/p&gt;&lt;p&gt;Run or compile your software using features or extensions that
automatically provide a protection mechanism that mitigates or
eliminates buffer overflows.&lt;/p&gt;&lt;p&gt;For example, certain compilers and extensions provide automatic buffer
overflow detection mechanisms that are built into the compiled code.
Examples include the Microsoft Visual Studio /GS flag, Fedora/Red Hat
FORTIFY_SOURCE GCC flag, StackGuard, and ProPolice.&lt;/p&gt;&lt;p&gt;This is not necessarily a complete solution, since these mechanisms
can only detect certain types of overflows. In addition, a buffer
overflow attack can still cause a denial of service, since the typical
response is to exit the application.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Programmers should adhere to the following rules when allocating and
managing their applications memory:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;Double check that your buffer is as large as you specify.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;When using functions that accept a number of bytes to copy, such
as strncpy(), be aware that if the destination buffer size is equal
to the source buffer size, it may not NULL-terminate the
string.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;Check buffer boundaries if calling this function in a loop and
make sure you are not in danger of writing past the allocated
space.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;If necessary, truncate all input strings to a reasonable length
before passing them to the copy and concatenation functions.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Operation&lt;/p&gt;&lt;p&gt;Use a feature like Address Space Layout Randomization (ASLR). This is
not a complete solution. However, it forces the attacker to guess an
unknown value that changes every program execution.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Operation&lt;/p&gt;&lt;p&gt;Use a CPU and operating system that offers Data Execution Protection
(NX) or its equivalent. This is not a complete solution, since buffer
overflows could be used to overwrite nearby variables to modify the
software's state in dangerous ways. In addition, it cannot be used in
cases in which self-modifying code is required.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phases:  Build and Compilation; Operation&lt;/p&gt;&lt;p&gt;Most mitigating technologies at the compiler or OS level to date
address only a subset of buffer overflow problems and rarely provide
complete protection against even that subset. It is good practice to
implement strategies to increase the workload of an attacker, such as
leaving the attacker to guess an unknown value that changes every
program execution.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Replace unbounded copy functions with analogous functions that support
length arguments, such as strcpy with strncpy. Create these if they are
not available.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Moderate&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;This approach is still susceptible to calculation errors, including
issues such as off-by-one errors (CWE-193) and incorrectly calculating
buffer lengths (CWE-131).&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_120_Weakness Ordinalities" id="oc_120_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Resultant&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness is typically related to the presence of some other
weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Primary&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness exists independent of other weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_120_Relationships" id="oc_120_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;633&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=633" target="_blank"&gt;Weaknesses that Affect Memory&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;722&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=722" target="_blank"&gt;OWASP Top Ten 2004 Category A1 - Unvalidated Input&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004)&lt;/span&gt;711&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;726&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=726" target="_blank"&gt;OWASP Top Ten 2004 Category A5 - Buffer Overflows&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;741&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=741" target="_blank"&gt;CERT C Secure Coding Section 07 - Characters and Strings (STR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;802&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=802" target="_blank"&gt;2010 Top 25 - Risky Resource Management&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;123&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=123" target="_blank"&gt;Write-what-where Condition&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;785&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=785" target="_blank"&gt;Use of Path Manipulation Function without Maximum-sized Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;170&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=170" target="_blank"&gt;Improper Null Termination&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;231&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=231" target="_blank"&gt;Improper Handling of Extra Values&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;242&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=242" target="_blank"&gt;Use of Inherently Dangerous Function&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;416&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=416" target="_blank"&gt;Use After Free&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;456&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=456" target="_blank"&gt;Missing Initialization&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;124&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=124" target="_blank"&gt;Buffer Underwrite ('Buffer Underflow')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanAlsoBe&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;196&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=196" target="_blank"&gt;Unsigned to Signed Conversion Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_120_Relationship Notes" id="oc_120_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;At the code level, stack-based and heap-based overflows do not differ
significantly, so there usually is not a need to distinguish them. From the
attacker perspective, they can be quite different, since different
techniques are required to exploit them.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Affected Resources"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Affected Resources&lt;/div&gt;&lt;div name="oc_120_Affected Resources" id="oc_120_Affected Resources" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Functional Areas"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Functional Areas&lt;/div&gt;&lt;div name="oc_120_Functional Areas" id="oc_120_Functional Areas" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory Management&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Causal Nature"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt;&lt;a href="javascript:toggleblocksOC('120_Causal Nature');"&gt;f&lt;/a&gt; &lt;/span&gt;Causal Nature&lt;/div&gt;&lt;div name="oc_120_Causal Nature" id="oc_120_Causal Nature" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Explicit&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_120_Taxonomy Mappings" id="oc_120_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Unbounded Transfer ('classic overflow')&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A1&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Unvalidated Input&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A5&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflows&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR35-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Do not copy data from an unbounded source to a fixed-length
array&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;WASC&lt;/td&gt;&lt;td valign="top"&gt;7&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_120_Related Attack Patterns" id="oc_120_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org8.html" target="_blank"&gt;8&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow in an API Call&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org9.html" target="_blank"&gt;9&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow in Local Command-Line Utilities&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org10.html" target="_blank"&gt;10&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Environment Variables&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org14.html" target="_blank"&gt;14&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Client-side Injection-induced Buffer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org24.html" target="_blank"&gt;24&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Filter Failure through Buffer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org92.html" target="_blank"&gt;92&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Forced Integer Overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org42.html" target="_blank"&gt;42&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;MIME Conversion&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org44.html" target="_blank"&gt;44&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Binary Resource File&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org45.html" target="_blank"&gt;45&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Symbolic Links&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org100.html" target="_blank"&gt;100&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Buffers&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org46.html" target="_blank"&gt;46&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Variables and Tags&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org47.html" target="_blank"&gt;47&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Parameter Expansion&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org67.html" target="_blank"&gt;67&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;String Format Overflow in syslog()&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_120_White Box Definitions" id="oc_120_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path includes a Buffer Write Operation such
that:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. the expected size of the buffer is greater than the actual size of
the buffer where expected size is equal to the sum of the size of the
data item and the position in the buffer&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Where Buffer Write Operation is a statement that writes a data item of a
certain size into a buffer at a certain position and at a certain
index&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_120_References" id="oc_120_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-11] M. Howard and
D. LeBlanc. "Writing Secure Code". Chapter 5, "Public Enemy #1: The Buffer Overrun" Page
127. 2nd Edition. Microsoft. 2002. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-17] Michael Howard, David LeBlanc
and John Viega. "24 Deadly Sins of Software Security". "Sin 5: Buffer Overruns." Page 89. McGraw-Hill. 2010. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Microsoft. "Using the Strsafe.h Functions". &amp;lt;&lt;a href="http://msdn.microsoft.com/en-us/library/ms647466.aspx" target="_blank"&gt;http://msdn.microsoft.com/en-us/library/ms647466.aspx&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Matt Messier and
John Viega. "Safe C String Library v1.0.3". &amp;lt;&lt;a href="http://www.zork.org/safestr/" target="_blank"&gt;http://www.zork.org/safestr/&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Michael Howard. "Address Space Layout Randomization in Windows
Vista". &amp;lt;&lt;a href="http://blogs.msdn.com/michael_howard/archive/2006/05/26/address-space-layout-randomization-in-windows-vista.aspx" target="_blank"&gt;http://blogs.msdn.com/michael_howard/archive/2006/05/26/address-space-layout-randomization-in-windows-vista.aspx&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Arjan van de Ven. "Limiting buffer overflows with ExecShield". &amp;lt;&lt;a href="http://www.redhat.com/magazine/009jul05/features/execshield/" target="_blank"&gt;http://www.redhat.com/magazine/009jul05/features/execshield/&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;"PaX". &amp;lt;&lt;a href="http://en.wikipedia.org/wiki/PaX" target="_blank"&gt;http://en.wikipedia.org/wiki/PaX&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_120_Content History" id="oc_120_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-15&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Veracode&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Suggested OWASP Top Ten 2004
mapping&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Applicable Platforms,
Common Consequences, Relationships, Observed Example, Other Notes,
Taxonomy Mappings, Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Changed name and description to more clearly emphasize the
"classic" nature of the overflow.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Description, Name, Other Notes,
Terminology Notes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Other Notes, Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Other Notes,
Potential Mitigations, References, Relationship Notes,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Other Notes, Potential Mitigations,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Demonstrative Examples, Detection Factors, Potential Mitigations,
References, Related Attack Patterns, Relationships, Taxonomy Mappings,
Time of Introduction, Type&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-04-05&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples, Related Attack Patterns&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Unbounded Transfer ('Classic
Buffer Overflow')&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1872</key><name>R19_12_Multiple_Pound_Or_Double_Pound_In_Same_Macro</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 19-12&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 19-12&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11060&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Every macro shall contain at most one of the &amp;#39;#&amp;#39; or &amp;#39;##&amp;#39; operators.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_334</key><name>Wrong_Memory_Allocation</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Incorrect Calculation of Buffer Size&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;131&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_131_Description" id="oc_131_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software does not correctly calculate the size to be used
when allocating a buffer, which could lead to a buffer
overflow.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_131_Time of Introduction" id="oc_131_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_131_Applicable Platforms" id="oc_131_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_131_Common Consequences" id="oc_131_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;If the incorrect calculation is used in the context of memory
allocation, then the software may create a buffer that is smaller or
larger than expected. If the allocated buffer is smaller than expected,
this could lead to an out-of-bounds read or write (CWE-119), possibly
causing a crash, allowing arbitrary code execution, or exposing
sensitive data.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_131_Likelihood of Exploit" id="oc_131_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High to Very High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Detection Methods"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Detection Methods&lt;/div&gt;&lt;div name="oc_131_Detection Methods" id="oc_131_Detection Methods" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Static Analysis&lt;/p&gt;&lt;p&gt;This weakness can often be detected using automated static analysis
tools. Many modern tools use data flow analysis or constraint-based
techniques to minimize the number of false positives.&lt;/p&gt;&lt;p&gt;Automated static analysis generally does not account for environmental
considerations when reporting potential errors in buffer calculations.
This can make it difficult for users to determine which warnings should
be investigated first. For example, an analysis tool might report buffer
overflows that originate from command line arguments in a program that
is not expected to run with setuid or other special privileges.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: High&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;Detection techniques for buffer-related errors are more mature than
for most other weakness types.&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Dynamic Analysis&lt;/p&gt;&lt;p&gt;This weakness can be detected using dynamic tools and techniques that
interact with the software using large test suites with many diverse
inputs, such as fuzz testing (fuzzing), robustness testing, and fault
injection. The software's operation may slow down, but it should not
become unstable, crash, or generate incorrect results.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Manual Analysis&lt;/p&gt;&lt;p&gt;Manual analysis can be useful for finding this weakness, but it might
not achieve desired code coverage within limited time constraints. This
becomes difficult for weaknesses that must be considered for all inputs,
since the attack surface can be too large.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Black Box&lt;/p&gt;&lt;p&gt;Evidence of this weakness can be detected using dynamic tools and
techniques that interact with the software using large test suites with
many diverse inputs, such as fuzz testing (fuzzing), robustness testing,
and fault injection. The software's operation may slow down, but it
should not become unstable, crash, or generate incorrect results.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Moderate&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;Without visibility into the code, black box methods may not be able to
sufficiently distinguish this weakness from others, requiring follow-up
manual methods to diagnose the underlying problem. &lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Manual Analysis&lt;/p&gt;&lt;p&gt;This weakness can be detected using tools and techniques that require
manual (human) analysis, such as penetration testing, threat modeling,
and interactive tools that allow the tester to record and modify an
active session. &lt;/p&gt;&lt;p&gt;Specifically, manual static analysis is useful for evaluating the
correctness of allocation calculations. This can be useful for detecting
overflow conditions (CWE-190) or similar weaknesses that might have
serious security impacts on the program.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: High&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt; These may be more effective than strictly automated techniques. This
is especially the case with weaknesses that are related to design and
business rules.&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_131_Demonstrative Examples" id="oc_131_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code allocates memory for a maximum number of widgets.
It then gets a user-specified number of widgets, making sure that the user
does not request too many. It then initializes the elements of the array
using InitializeWidget(). Because the number of widgets can vary for each
request, the code inserts a NULL pointer to signify the location of the last
widget.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int i;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;unsigned int numWidgets;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Widget **WidgetList;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;numWidgets = GetUntrustedSizeValue();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if ((numWidgets == 0) || (numWidgets &amp;gt; MAX_NUM_WIDGETS))
{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ExitError("Incorrect number of widgets requested!");&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;WidgetList = (Widget **)malloc(numWidgets * sizeof(Widget
*));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;printf("WidgetList ptr=%p\n", WidgetList);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;numWidgets; i++) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;WidgetList[i] = InitializeWidget();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;WidgetList[numWidgets] = NULL;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;showWidgets(WidgetList);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, this code contains an off-by-one calculation error. It
allocates exactly enough space to contain the specified number of
widgets, but it does not include the space for the NULL pointer. As a
result, the allocated buffer is smaller than it is supposed to be. So if
the user ever requests MAX_NUM_WIDGETS, there is an off-by-one buffer
overflow (CWE-193) when the NULL is assigned. Depending on the
environment and compilation settings, this could cause memory
corruption.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;This example applies an encoding procedure to an input string and
stores it into a buffer.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char * copy_input(char *user_supplied_string){&lt;/div&gt;&lt;div class="indent Bad_Code"&gt;
&lt;div style="font-size:90%;"&gt;int i, dst_index;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char *dst_buf = (char*)malloc(4*sizeof(char) *
MAX_SIZE);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if ( MAX_SIZE &amp;lt;= strlen(user_supplied_string) ){&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;die("user string too long, die evil hacker!");&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;dst_index = 0;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;for ( i = 0; i &amp;lt; strlen; i++ ){&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;if( '&amp;amp;' == user_supplied_string[i] ){&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;dst_buf[dst_index++] = '&amp;amp;';&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;dst_buf[dst_index++] = 'a';&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;dst_buf[dst_index++] = 'm';&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;dst_buf[dst_index++] = 'p';&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;dst_buf[dst_index++] = ';';&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;else if ('&amp;lt;' == user_supplied_string[i] ){&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* encode to &amp;amp;lt; */&lt;/i&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;else dst_buf[dst_index++] =
user_supplied_string[i];&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return dst_buf;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The programmer attempts to encode the ampersand character in the
user-controlled string, however the length of the string is validated
before the encoding procedure is applied. Furthermore, the programmer
assumes encoding expansion will only expand a given character by a
factor of 4, while the encoding of the ampersand expands by 5. As a
result, when the encoding procedure expands the string it is possible to
overflow the destination buffer if the attacker provides a string of
many ampersands.&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;The following code is intended to read an incoming packet from a
socket and extract one or more headers.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;DataPacket *packet;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int numHeaders;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;PacketHeader *headers;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;sock=AcceptSocketConnection();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;ReadPacket(packet, sock);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;numHeaders =packet-&amp;gt;headers;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (numHeaders &amp;gt; 100) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ExitError("too many headers!");&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;headers = malloc(numHeaders * sizeof(PacketHeader);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;ParsePacketHeaders(packet, headers);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt; The code performs a check to make sure that the packet does not
contain too many headers. However, numHeaders is defined as a signed
int, so it could be negative. If the incoming packet specifies a value
such as -3, then the malloc calculation will generate a negative number
(say, -300 if each header can be a maximum of 100 bytes). When this
result is provided to malloc(), it is first converted to a size_t type.
This conversion then produces a large value such as 4294966996, which
may cause malloc() to fail or to allocate an extremely large amount of
memory (CWE-195). With the appropriate negative numbers, an attacker
could trick malloc() into using a very small positive number, which then
allocates a buffer that is much smaller than expected, potentially
leading to a buffer overflow.&lt;/p&gt;&lt;p class="subheading"&gt;Example 4&lt;/p&gt;&lt;p&gt;The following code attempts to save three different identification
numbers into an array. The array is allocated from memory using a call to
malloc(). &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int *id_sequence;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* Allocate space for an array of three ids. */&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;id_sequence = (int*) malloc(3);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (id_sequence == NULL) exit(1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* Populate the id array. */&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;id_sequence[0] = 13579;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;id_sequence[1] = 24680;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;id_sequence[2] = 97531;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The problem with the code above is the value of the size parameter
used during the malloc() call. It uses a value of '3' which by
definition results in a buffer of three bytes to be created. However the
intention was to create a buffer that holds three ints, and in C, each
int requires 4 bytes worth of memory, so an array of 12 bytes is needed,
4 bytes for each int. Executing the above code could result in a buffer
overflow as 12 bytes of data is being saved into 3 bytes worth of
allocated space. The overflow would occur during the assignment of
id_sequence[0] and would continue with the assignment of id_sequence[1]
and id_sequence[2]. &lt;/p&gt;&lt;p&gt;The malloc() call could have used '3*sizeof(int)' as the value for the
size parameter in order to allocate the correct amount of space required
to store the three ints. &lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_131_Observed Examples" id="oc_131_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1363" target="_blank"&gt;CVE-2004-1363&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;substitution overflow: buffer overflow using
environment variables that are expanded after the length check is
performed&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0747" target="_blank"&gt;CVE-2004-0747&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;substitution overflow: buffer overflow using
expansion of environment variables&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-2103" target="_blank"&gt;CVE-2005-2103&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;substitution overflow: buffer overflow using a
large number of substitution strings&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3120" target="_blank"&gt;CVE-2005-3120&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;transformation overflow: product adds extra escape
characters to incoming data, but does not account for them in the buffer
length&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0899" target="_blank"&gt;CVE-2003-0899&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;transformation overflow: buffer overflow when
expanding "&amp;gt;" to "&amp;amp;gt;", etc.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0334" target="_blank"&gt;CVE-2001-0334&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;expansion overflow: buffer overflow using
wildcards&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0248" target="_blank"&gt;CVE-2001-0248&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;expansion overflow: long pathname + glob =
overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0249" target="_blank"&gt;CVE-2001-0249&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;expansion overflow: long pathname + glob =
overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0184" target="_blank"&gt;CVE-2002-0184&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;special characters in argument are not properly
expanded&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0434" target="_blank"&gt;CVE-2004-0434&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;small length value leads to heap
overflow&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1347" target="_blank"&gt;CVE-2002-1347&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;multiple variants&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0490" target="_blank"&gt;CVE-2005-0490&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;needs closer investigation, but probably
expansion-based&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0940" target="_blank"&gt;CVE-2004-0940&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;needs closer investigation, but probably
expansion-based&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0599" target="_blank"&gt;CVE-2008-0599&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: Language interpreter calculates wrong
buffer size (CWE-131) by using "size = ptr ? X : Y" instead of "size = (ptr
? X : Y)" expression.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_131_Potential Mitigations" id="oc_131_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;If you allocate a buffer for the purpose of transforming, converting,
or encoding an input, make sure that you allocate enough memory to
handle the largest possible encoding. For example, in a routine that
converts "&amp;amp;" characters to "&amp;amp;amp;" for HTML entity
encoding, you will need an output buffer that is at least 5 times as
large as the input buffer. &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Understand your programming language's underlying representation and
how it interacts with numeric calculation (CWE-681). Pay close attention
to byte size discrepancies, precision, signed/unsigned distinctions,
truncation, conversion and casting between types, "not-a-number"
calculations, and how your language handles numbers that are too large
or too small for its underlying representation.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Input Validation&lt;/p&gt;&lt;p&gt;Perform input validation on any numeric input by ensuring that it is
within the expected range. Enforce that the input meets both the minimum
and maximum requirements for the expected range.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;When processing structured incoming data containing a size field
followed by raw data, ensure that you identify and resolve any
inconsistencies between the size field and the actual size of the data
(CWE-130).&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;When allocating memory that uses sentinels to mark the end of a data
structure - such as NUL bytes in strings - make sure you also include
the sentinel in your calculation of the total amount of memory that must
be allocated.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Use sizeof() on the appropriate data type to avoid CWE-467.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Use the appropriate type for the desired action. For example, in
C/C++, only use unsigned types for values that could never be negative,
such as height, width, or other numbers related to quantity. This will
simplify your sanity checks and will reduce surprises related to
unexpected casting.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Libraries or Frameworks&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to
occur or provides constructs that make this weakness easier to
avoid.&lt;/p&gt;&lt;p&gt;Use libraries or frameworks that make it easier to handle numbers
without unexpected consequences, or buffer allocation routines that
automatically track buffer size.&lt;/p&gt;&lt;p&gt;Examples include safe integer handling packages such as SafeInt (C++)
or IntegerLib (C or C++).&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Examine compiler warnings closely and eliminate potentially security
critical problems, such as signed / unsigned mismatch. Even if the
weakness is rarely exploitable, a single failure may lead to the
compromise of the entire system.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_131_Relationships" id="oc_131_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;682&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=682" target="_blank"&gt;Incorrect Calculation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;742&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=742" target="_blank"&gt;CERT C Secure Coding Section 08 - Memory Management (MEM)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;802&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=802" target="_blank"&gt;2010 Top 25 - Risky Resource Management&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts&lt;/span&gt;699&lt;/span&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;467&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=467" target="_blank"&gt;Use of sizeof() on a Pointer Type&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_131_Taxonomy Mappings" id="oc_131_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Other length calculation error&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM35-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Allocate sufficient memory for an object&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_131_Related Attack Patterns" id="oc_131_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org100.html" target="_blank"&gt;100&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overflow Buffers&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org47.html" target="_blank"&gt;47&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Parameter Expansion&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_131_References" id="oc_131_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-18] David LeBlanc and
Niels Dekker. "SafeInt". &amp;lt;&lt;a href="http://safeint.codeplex.com/" target="_blank"&gt;http://safeint.codeplex.com/&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Maintenance Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Maintenance Notes&lt;/div&gt;&lt;div name="oc_131_Maintenance Notes" id="oc_131_Maintenance Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;This is a broad category. Some examples include: (1) simple math errors,
(2) incorrectly updating parallel counters, (3) not accounting for size
differences when "transforming" one input to another format (e.g. URL
canonicalization or other transformation that can generate a result that's
larger than the original input, i.e. "expansion").&lt;/p&gt;
&lt;p&gt;This level of detail is rarely available in public reports, so it is
difficult to find good examples.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;This weakness may be a composite or a chain. It also may contain layering
or perspective differences.&lt;/p&gt;
&lt;p&gt;This issue may be associated with many different types of incorrect
calculations (CWE-682), although the integer overflow (CWE-190) is probably
the most prevalent. This can be primary to resource consumption problems
(CWE-400), including uncontrolled memory allocation (CWE-789). However, its
relationship with out-of-bounds buffer access (CWE-119) must also be
considered.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_131_Content History" id="oc_131_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Maintenance Notes,
Relationships, Taxonomy Mappings, Type&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples, Likelihood of Exploit,
Observed Examples, Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Demonstrative Examples,
Detection Factors, Maintenance Notes, Potential Mitigations,
Related Attack Patterns, Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-04-05&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Detection Factors, Potential Mitigations, References, Related Attack Patterns&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-01-30&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Other Length Calculation
Error&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1843</key><name>R13_03_Floating_Point_Equality_Or_Inequality</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 13-3&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 13-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11031&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Floating point objects or expressions shall not be tested for equality, neither
            directly with &amp;#39;==&amp;#39;, nor indirectly with &amp;#39;&amp;gt;=&amp;#39; and &amp;#39;&amp;lt;=&amp;#39;.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1210</key><name>Inconsistent_Implementations</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Use of Function with Inconsistent Implementations&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;474&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_474_Description" id="oc_474_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The code uses a function that has inconsistent implementations
across operating systems and versions, which might cause security-relevant
portability problems.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_474_Time of Introduction" id="oc_474_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_474_Applicable Platforms" id="oc_474_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C: &lt;span class="smaller" style="font-style:italic"&gt;(Often)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;PHP: &lt;span class="smaller" style="font-style:italic"&gt;(Often)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_474_Potential Mitigations" id="oc_474_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Do not accept inconsistent behavior from the API specifications when
the deviant behavior increase the risk level.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_474_Other Notes" id="oc_474_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;The behavior of functions in this category varies by operating system, and
at times, even by operating system version. Implementation differences can
include:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;- Slight differences in the way parameters are interpreted leading to
inconsistent results.&lt;/p&gt;
&lt;p&gt;- Some implementations of the function carry significant security
risks.&lt;/p&gt;
&lt;p&gt;- The function might not be defined on all platforms.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_474_Relationships" id="oc_474_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;589&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=589" target="_blank"&gt;Call to Non-ubiquitous API&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_474_Taxonomy Mappings" id="oc_474_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Inconsistent Implementations&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_474_Content History" id="oc_474_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Relationships, Other Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Inconsistent
Implementations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1826</key><name>R06_03_Non_Typedefd_Basic_Types</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 6-3&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11014&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Instead of the basic types, typedefs that indicate type, size and signdness
            should be used.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1820</key><name>R05_03_Typedef_Name_Reused</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 5-3&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11008&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Identifiers that are &amp;#39;typedef&amp;#39; name shall not be reused as identifiers.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_325</key><name>Improperly_Locked_Memory</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Sensitive Data Storage in Improperly Locked Memory&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;591&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Variant)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_591_Description" id="oc_591_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The application stores sensitive data in memory that is not
locked, or that has been incorrectly locked, which might cause the memory to be
written to swap files on disk by the virtual memory manager. This can make the
data more accessible to external actors.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;On Windows systems the VirtualLock function can lock a page of memory to
ensure that it will remain present in memory and not be swapped to disk.
However, on older versions of Windows, such as 95, 98, or Me, the
VirtualLock() function is only a stub and provides no protection. On POSIX
systems the mlock() call ensures that a page will stay resident in memory
but does not guarantee that the page will not appear in the swap. Therefore,
it is unsuitable for use as a protection mechanism for sensitive data. Some
platforms, in particular Linux, do make the guarantee that the page will not
be swapped, but this is non-standard and is not portable. Calls to mlock()
also require supervisor privilege. Return values for both of these calls
must be checked to ensure that the lock operation was actually successful.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_591_Time of Introduction" id="oc_591_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_591_Common Consequences" id="oc_591_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Confidentiality&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Sensitive data that is written to a swap file may be exposed.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_591_Potential Mitigations" id="oc_591_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Identify data that needs to be protected from swapping and choose
platform-appropriate protection mechanisms.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Check return values to ensure locking operations are
successful.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_591_Relationships" id="oc_591_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;413&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=413" target="_blank"&gt;Insufficient Resource Locking&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;633&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=633" target="_blank"&gt;Weaknesses that Affect Memory&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;729&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=729" target="_blank"&gt;OWASP Top Ten 2004 Category A8 - Insecure Storage&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;742&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=742" target="_blank"&gt;CERT C Secure Coding Section 08 - Memory Management (MEM)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Affected Resources"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Affected Resources&lt;/div&gt;&lt;div name="oc_591_Affected Resources" id="oc_591_Affected Resources" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_591_Taxonomy Mappings" id="oc_591_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A8&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Insecure Storage&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM06-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Ensure that sensitive data is not written out to
disk&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_591_Content History" id="oc_591_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Relationships, Other Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description, Other Notes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Memory
Locking&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1411</key><name>Methods_Without_ReturnType</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;
&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;Methods without returnType&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10712&lt;/b&gt;&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;
          When method&amp;#39;s signature doesn&amp;#39;t contain a return type, the program is less
          readable, it&amp;#39;s harder to debug, and makes it imporssible to specify a contract
          between an pure virtual class and its implementation.&lt;br&gt;
          It&amp;#39;s also difficult to know the resolution for a function call.&lt;/div&gt;
          &lt;div class="indent"&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_90_Time of Introduction" id="oc_90_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;
              &lt;ul&gt;
                  &lt;li&gt;Implementation&lt;/li&gt;
              &lt;/ul&gt;
              &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
              C,C++&lt;/p&gt;  &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_90_Demonstrative Examples" id="oc_90_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;
              Example:&lt;/p&gt;
              &lt;p&gt;
                  This is an example for not defining a return type for a method:&lt;/p&gt;
              &lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example  Language:C++&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div class="style2"&gt;
                      &lt;pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); border-image: initial; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); line-height: 1.1em; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; "&gt;&lt;span class="style3"&gt;foo(int i){&lt;/span&gt;
&lt;span class="style3"&gt; return i;&lt;/span&gt;
&lt;span class="style3"&gt;}&lt;/span&gt;&lt;/pre&gt;
                      &lt;pre style="padding-top: 1em; padding-right: 1em; padding-bottom: 1em; padding-left: 1em; border-top-width: 1px; border-right-width: 1px; border-bottom-width: 1px; border-left-width: 1px; border-top-style: dashed; border-right-style: dashed; border-bottom-style: dashed; border-left-style: dashed; border-top-color: rgb(47, 111, 171); border-right-color: rgb(47, 111, 171); border-bottom-color: rgb(47, 111, 171); border-left-color: rgb(47, 111, 171); border-image: initial; color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); line-height: 1.1em; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; "&gt;&lt;span class="style3"&gt;foo(int i){&lt;/span&gt;
}&lt;/pre&gt;
                      &lt;/div&gt;
                  &lt;/div&gt;&lt;/div&gt;
                  The first example was meant to return an int, while the second to return void.
                  On a function call, what will be the right resolution?
                  &lt;br&gt;
                  If we have a pure virtual class with method signature of &amp;quot;foo(int i)=0&amp;quot;, there
                  is an ambiguity of the intended implementation- there is no strict contract.&lt;br&gt;
                  &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations                      &lt;div name="oc_90_Potential Mitigations" id="oc_90_Potential Mitigations" class="expandblock"&gt;
                  &lt;div class="detail"&gt;
                      &lt;div id="Grouped"&gt;
                          &lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
                              &lt;tr&gt;
                                  &lt;td valign="top" class="style2"&gt;
                                      Always declare a return type for a method.&lt;/td&gt;
                              &lt;/tr&gt;
                          &lt;/table&gt;
                      &lt;/div&gt;
                  &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;

      &lt;/div&gt;&lt;/div&gt;&lt;/html&gt;
    &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1878</key><name>R20_08_Using_Signal_Handling_From_Signal_H</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 20-8&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 20-8&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11066&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Use of the signaling handling facilities of the &amp;lt;signal.h&amp;gt; library is not
            allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1814</key><name>R02_04_Code_Commented_Out</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 2-4&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11002&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Comments should not be used to comment out sections of code.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_273</key><name>Heuristic_2nd_Order_SQL_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could directly access all of the system's data. The attacker would be able to steal any sensitive information stored by the system (such as personal user details or credit cards), and possibly change or erase existing data.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application communicates with its database by sending a textual SQL query. The application creates the query by simply concatenating strings including data obtained from the database. Since that data may have been previously obtained from user input, and is neither checked for data type validity nor subsequently sanitized, the data could contain SQL commands that would be interpreted as such by the database.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Validate all data, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Instead of concatenating strings: a. Use secure database components such as stored procedures, parameterized queries, and object bindings (for commands and parameters). b. An even better solution is to use an ORM library, such as EntityFramework, Hibernate, or iBatis.&lt;/li&gt;
&lt;li&gt;Restrict access to database objects and functionality, according to the Principle of Least Privilege.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
The application creates an SQL query using data obtained from a database
      &lt;/h4&gt;&lt;pre&gt;public class SecondOrderSQLInjection
{
        public void foo(SqlConnection connection, SqlDataAdapter DA)
        {
                DataSet DS = new DataSet();
                DA.Fill(ref DS, "UserName"); 
                SqlCommand command = new SqlCommand("SELECT * FROM Customers " + "WHERE UserName = " + DS[0]["UserName"].ToString(), connection);
                command.ExecuteNonQuery();
        }
}&lt;/pre&gt;&lt;h4&gt;
The data obtained from the database is checked for potentially malicious characters
      &lt;/h4&gt;&lt;pre&gt;class SecondOrderSQLInjectionFixed
{
        public void foo(SqlConnection connection, SqlDataAdapter DA)
        {
                DataSet DS = new DataSet();
                DA.Fill(ref DS, "UserName");
                string userName = DS[0]["UserName"].ToString().Replace("'", "");
                SqlCommand command = new SqlCommand("SELECT * FROM Customers " + "WHERE UserName = " + userName, connection);
                command.ExecuteNonQuery();
        }
}&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;The application creates an SQL query using data obtained from a database&lt;/h4&gt;&lt;pre&gt;public class Second_Order_SQL_Injection {
	public static void sql(Connection con, String sqlStm) {
		try {
			Statement stmt = con.createStatement();
			ResultSet rs = stmt.executeQuery(sqlStm);
			String userName = rs.getString("USER_NAME");
			String newSqlStm = "Update USER set PASSWORD = '1234' where userName like " + userName;
			stmt.executeUpdate(newSqlStm);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}&lt;/pre&gt;&lt;h4&gt;The data obtained from the database is checked for potentially malicious characters&lt;/h4&gt;&lt;pre&gt;public class Second_Order_SQL_Injection_Fixed {
	public static void sql(Connection con, String sqlStm) {
		try {
			Statement stmt = con.createStatement();
			ResultSet rs = stmt.executeQuery(sqlStm);
			String userName = rs.getString("USER_NAME");
			userName = userName.replaceAll("'", "");
			String newSqlStm = "Update USER set PASSWORD = '1234' where userName like " + userName;
			stmt.executeUpdate(newSqlStm);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_307</key><name>Insecure_Temporary_File</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Insecure Temporary File&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;377&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_377_Description" id="oc_377_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;Creating and using insecure temporary files can leave
application and system data vulnerable to attack.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_377_Time of Introduction" id="oc_377_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_377_Applicable Platforms" id="oc_377_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_377_Demonstrative Examples" id="oc_377_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code uses a temporary file for storing intermediate
data gathered from the network before it is processed.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;if (tmpnam_r(filename)) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;FILE* tmp = fopen(filename,"wb+");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;while((recv(sock,recvbuf,DATA_SIZE, 0) &amp;gt;
0)&amp;amp;(amt!=0)) amt = fwrite(recvbuf,1,DATA_SIZE,tmp);
&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;This otherwise unremarkable code is vulnerable to a number of
different attacks because it relies on an insecure method for creating
temporary files. The vulnerabilities introduced by this function and
others are described in the following sections. The most egregious
security problems related to temporary file creation have occurred on
Unix-based operating systems, but Windows applications have parallel
risks. This section includes a discussion of temporary file creation on
both Unix and Windows systems. Methods and behaviors can vary between
systems, but the fundamental risks introduced by each are reasonably
constant.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_377_Other Notes" id="oc_377_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Applications require temporary files so frequently that many different
mechanisms exist for creating them in the C Library and Windows(R) API. Most
of these functions are vulnerable to various forms of attacks.&lt;/p&gt;
&lt;p&gt;The functions designed to aid in the creation of temporary files can be
broken into two groups based whether they simply provide a filename or
actually open a new file. - Group 1: "Unique" Filenames: The first group of
C Library and WinAPI functions designed to help with the process of creating
temporary files do so by generating a unique file name for a new temporary
file, which the program is then supposed to open. This group includes C
Library functions like tmpnam(), tempnam(), mktemp() and their C++
equivalents prefaced with an _ (underscore) as well as the GetTempFileName()
function from the Windows API. This group of functions suffers from an
underlying race condition on the filename chosen. Although the functions
guarantee that the filename is unique at the time it is selected, there is
no mechanism to prevent another process or an attacker from creating a file
with the same name after it is selected but before the application attempts
to open the file. Beyond the risk of a legitimate collision caused by
another call to the same function, there is a high probability that an
attacker will be able to create a malicious collision because the filenames
generated by these functions are not sufficiently randomized to make them
difficult to guess. If a file with the selected name is created, then
depending on how the file is opened the existing contents or access
permissions of the file may remain intact. If the existing contents of the
file are malicious in nature, an attacker may be able to inject dangerous
data into the application when it reads data back from the temporary file.
If an attacker pre-creates the file with relaxed access permissions, then
data stored in the temporary file by the application may be accessed,
modified or corrupted by an attacker. On Unix based systems an even more
insidious attack is possible if the attacker pre-creates the file as a link
to another important file. Then, if the application truncates or writes data
to the file, it may unwittingly perform damaging operations for the
attacker. This is an especially serious threat if the program operates with
elevated permissions. Finally, in the best case the file will be opened with
the a call to open() using the O_CREAT and O_EXCL flags or to CreateFile()
using the CREATE_NEW attribute, which will fail if the file already exists
and therefore prevent the types of attacks described above. However, if an
attacker is able to accurately predict a sequence of temporary file names,
then the application may be prevented from opening necessary temporary
storage causing a denial of service (DoS) attack. This type of attack would
not be difficult to mount given the small amount of randomness used in the
selection of the filenames generated by these functions. - Group 2: "Unique"
Files: The second group of C Library functions attempts to resolve some of
the security problems related to temporary files by not only generating a
unique file name, but also opening the file. This group includes C Library
functions like tmpfile() and its C++ equivalents prefaced with an _
(underscore), as well as the slightly better-behaved C Library function
mkstemp(). The tmpfile() style functions construct a unique filename and
open it in the same way that fopen() would if passed the flags "wb+", that
is, as a binary file in read/write mode. If the file already exists,
tmpfile() will truncate it to size zero, possibly in an attempt to assuage
the security concerns mentioned earlier regarding the race condition that
exists between the selection of a supposedly unique filename and the
subsequent opening of the selected file. However, this behavior clearly does
not solve the function's security problems. First, an attacker can
pre-create the file with relaxed access-permissions that will likely be
retained by the file opened by tmpfile(). Furthermore, on Unix based systems
if the attacker pre-creates the file as a link to another important file,
the application may use its possibly elevated permissions to truncate that
file, thereby doing damage on behalf of the attacker. Finally, if tmpfile()
does create a new file, the access permissions applied to that file will
vary from one operating system to another, which can leave application data
vulnerable even if an attacker is unable to predict the filename to be used
in advance. Finally, mkstemp() is a reasonably safe way create temporary
files. It will attempt to create and open a unique file based on a filename
template provided by the user combined with a series of randomly generated
characters. If it is unable to create such a file, it will fail and return
-1. On modern systems the file is opened using mode 0600, which means the
file will be secure from tampering unless the user explicitly changes its
access permissions. However, mkstemp() still suffers from the use of
predictable file names and can leave an application vulnerable to denial of
service attacks if an attacker causes mkstemp() to fail by predicting and
pre-creating the filenames to be used.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_377_Relationships" id="oc_377_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;361&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=361" target="_blank"&gt;Time and State&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;376&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=376" target="_blank"&gt;Temporary File Issues&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;668&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=668" target="_blank"&gt;Exposure of Resource to Wrong Sphere&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;378&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=378" target="_blank"&gt;Creation of Temporary File With Insecure Permissions&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;379&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=379" target="_blank"&gt;Creation of Temporary File in Directory with Incorrect Permissions&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_377_Taxonomy Mappings" id="oc_377_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Insecure Temporary File&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_377_References" id="oc_377_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-11] M. Howard and
D. LeBlanc. "Writing Secure Code". Chapter 23, "Creating Temporary Files Securely" Page
682. 2nd Edition. Microsoft. 2002. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_377_Content History" id="oc_377_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships, Other Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated References&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_313</key><name>Stored_Blind_SQL_Injections</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could directly access all of the system's data. The attacker would be able to steal any sensitive information stored by the system (such as personal user details or credit cards), and possibly change or erase existing data.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application communicates with its database by sending a textual SQL query. The application creates the query by simply concatenating strings including data obtained from the database. Since that data may have been previously obtained from user input, and is neither checked for data type validity nor subsequently sanitized, the data could contain SQL commands that would be interpreted as such by the database.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Validate all data, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Instead of concatenating strings: a. Use secure database components such as stored procedures, parameterized queries, and object bindings (for commands and parameters). b. An even better solution is to use an ORM library, such as EntityFramework, Hibernate, or iBatis.&lt;/li&gt;
&lt;li&gt;Restrict access to database objects and functionality, according to the Principle of Least Privilege.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
The application creates an SQL query using data obtained from a database
      &lt;/h4&gt;&lt;pre&gt;public class SecondOrderSQLInjection
{
        public void foo(SqlConnection connection, SqlDataAdapter DA)
        {
                DataSet DS = new DataSet();
                DA.Fill(ref DS, "UserName"); 
                SqlCommand command = new SqlCommand("SELECT * FROM Customers " + "WHERE UserName = " + DS[0]["UserName"].ToString(), connection);
                command.ExecuteNonQuery();
        }
}&lt;/pre&gt;&lt;h4&gt;
The data obtained from the database is checked for potentially malicious characters
      &lt;/h4&gt;&lt;pre&gt;class SecondOrderSQLInjectionFixed
{
        public void foo(SqlConnection connection, SqlDataAdapter DA)
        {
                DataSet DS = new DataSet();
                DA.Fill(ref DS, "UserName");
                string userName = DS[0]["UserName"].ToString().Replace("'", "");
                SqlCommand command = new SqlCommand("SELECT * FROM Customers " + "WHERE UserName = " + userName, connection);
                command.ExecuteNonQuery();
        }
}&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;The application creates an SQL query using data obtained from a database&lt;/h4&gt;&lt;pre&gt;public class Second_Order_SQL_Injection {
	public static void sql(Connection con, String sqlStm) {
		try {
			Statement stmt = con.createStatement();
			ResultSet rs = stmt.executeQuery(sqlStm);
			String userName = rs.getString("USER_NAME");
			String newSqlStm = "Update USER set PASSWORD = '1234' where userName like " + userName;
			stmt.executeUpdate(newSqlStm);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}&lt;/pre&gt;&lt;h4&gt;The data obtained from the database is checked for potentially malicious characters&lt;/h4&gt;&lt;pre&gt;public class Second_Order_SQL_Injection_Fixed {
	public static void sql(Connection con, String sqlStm) {
		try {
			Statement stmt = con.createStatement();
			ResultSet rs = stmt.executeQuery(sqlStm);
			String userName = rs.getString("USER_NAME");
			userName = userName.replaceAll("'", "");
			String newSqlStm = "Update USER set PASSWORD = '1234' where userName like " + userName;
			stmt.executeUpdate(newSqlStm);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1865</key><name>R16_09_Using_Function_Identifier_Not_Call_Or_Pointer</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 16-9&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-9&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11053&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Every use of a function identifier shall be as an invokation (succeeded by a
            parenthesised paramater list) or a pointer (preceeded by a &amp;#39;&amp;amp;&amp;#39; operator).&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1871</key><name>R19_06_Use_Of_Undef_Derective</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 19-6&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 19-6&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11059&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
                    Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  The #undef pre-processing directive shall not be used.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;
                    &lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                        http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1880</key><name>R20_10_Using_Atof_Atoi_Atol_Functions_From_Stdlib_H</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 20-10&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 20-10&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11068&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Use of the &amp;#39;atof&amp;#39;, &amp;#39;atoi&amp;#39; and &amp;#39;atol&amp;#39; functions, from the library &amp;lt;stdlib.h&amp;gt;, is
            not allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_330</key><name>Use_After_Free</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Use After Free&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;416&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_416_Description" id="oc_416_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;Referencing memory after it has been freed can cause a program
to crash, use unexpected values, or execute code.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_416_Alternate Terms" id="oc_416_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Use-After-Free&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_416_Time of Introduction" id="oc_416_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_416_Applicable Platforms" id="oc_416_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_416_Common Consequences" id="oc_416_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;The use of previously freed memory may corrupt valid data, if the
memory area in question has been allocated and used properly
elsewhere.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;If chunk consolidation occur after the use of previously freed data,
the process may crash when invalid data is used as chunk
information.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;If malicious data is entered before chunk consolidation can take
place, it may be possible to take advantage of a write-what-where
primitive to execute arbitrary code.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_416_Likelihood of Exploit" id="oc_416_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_416_Demonstrative Examples" id="oc_416_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;#define BUFSIZER1 512&lt;/div&gt;&lt;div style="font-size:90%;"&gt;#define BUFSIZER2 ((BUFSIZER1/2) - 8)&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int main(int argc, char **argv) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char *buf1R1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char *buf2R1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char *buf2R2;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char *buf3R2;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;buf1R1 = (char *) malloc(BUFSIZER1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;buf2R1 = (char *) malloc(BUFSIZER1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;free(buf2R1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;buf2R2 = (char *) malloc(BUFSIZER2);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;buf3R2 = (char *) malloc(BUFSIZER2);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(buf2R1, argv[1], BUFSIZER1-1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;free(buf1R1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;free(buf2R2);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;free(buf3R2);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following code illustrates a use after free error:&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char* ptr = (char*)malloc (SIZE); ...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (err) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;abrt = 1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;free(ptr);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (abrt) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;logError("operation aborted before commit", ptr);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_416_Observed Examples" id="oc_416_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4997" target="_blank"&gt;CVE-2006-4997&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;freed pointer
dereference&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_416_Potential Mitigations" id="oc_416_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Choose a language that provides automatic memory management.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Ensuring that all pointers are set to NULL once they memory they point
to has been freed can be an effective strategy. The utilization of
multiple or complex data structures may lower the usefulness of this
strategy.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Use a static analysis tool to find instances of use after free.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_416_Other Notes" id="oc_416_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;The use of previously freed memory can have any number of adverse
consequences -- ranging from the corruption of valid data to the execution
of arbitrary code, depending on the instantiation and timing of the flaw.
The simplest way data corruption may occur involves the system's reuse of
the freed memory. Like double free errors and memory leaks, use after free
errors have two common and sometimes overlapping causes: - Error conditions
and other exceptional circumstances. - Confusion over which part of the
program is responsible for freeing the memory. In this scenario, the memory
in question is allocated to another pointer validly at some point after it
has been freed. The original pointer to the freed memory is used again and
points to somewhere within the new allocation. As the data is changed, it
corrupts the validly used memory; this induces undefined behavior in the
process. If the newly allocated data chances to hold a class, in C++ for
example, various function pointers may be scattered within the heap data. If
one of these function pointers is overwritten with an address to valid
shellcode, execution of arbitrary code can be achieved.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_416_Relationships" id="oc_416_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;399&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=399" target="_blank"&gt;Resource Management Errors&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;633&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=633" target="_blank"&gt;Weaknesses that Affect Memory&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;672&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=672" target="_blank"&gt;Operation on a Resource after Expiration or Release&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;742&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=742" target="_blank"&gt;CERT C Secure Coding Section 08 - Memory Management (MEM)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;808&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=808" target="_blank"&gt;2010 Top 25 - Weaknesses On the Cusp&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;120&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=120" target="_blank"&gt;Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;123&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=123" target="_blank"&gt;Write-what-where Condition&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;364&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=364" target="_blank"&gt;Signal Handler Race Condition&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;415&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=415" target="_blank"&gt;Double Free&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts&lt;/span&gt;699&lt;/span&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Affected Resources"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Affected Resources&lt;/div&gt;&lt;div name="oc_416_Affected Resources" id="oc_416_Affected Resources" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_416_Taxonomy Mappings" id="oc_416_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Use After Free&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Using freed memory&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM00-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Allocate and free memory in the same module, at the same level
of abstraction&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM01-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Store a new value in pointers immediately after
free()&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM30-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Do not access freed memory&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_416_White Box Definitions" id="oc_416_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. start statement that relinquishes a dynamically allocated memory
resource&lt;/p&gt;
&lt;p&gt;2. end statement that accesses the dynamically allocated memory
resource&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_416_Content History" id="oc_416_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Relationships, Observed Example, Other Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1886</key><name>R00_01_11_Find_Unused_Parameters</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 0-1-11&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 0-1-11&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10778&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Unused paramaters shall not be in non-virtual functions &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1883</key><name>R00_01_03_Find_Unused_Variables</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 0-1-3&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 0-1-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10775&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Unused variables are not allowed &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1859</key><name>R16_03_Function_Prototype_Without_Identifiers</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 16-3&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11047&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Function prototype shall give identifiers for all its paramaters.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1874</key><name>R19_17_Preprocessor_If_And_Else_Operators_Reside_In_Different_Files</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 19-17&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 19-17&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11062&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
                    Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  All &amp;#39;#else&amp;#39;, &amp;#39;#elif&amp;#39; and &amp;#39;#endif&amp;#39; directives shall be in the same file as their
                  corresponding &amp;#39;#if&amp;#39; or &amp;#39;#ifdef&amp;#39; directive.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;
                    &lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                        http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1252</key><name>Freed_Pointer_Not_Set_To_Null</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;NULL Pointer Dereference&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;476&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_476_Description" id="oc_476_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;A NULL pointer dereference occurs when the application
dereferences a pointer that it expects to be valid, but is NULL, typically
causing a crash or exit.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_476_Time of Introduction" id="oc_476_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_476_Applicable Platforms" id="oc_476_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;p&gt;Java&lt;/p&gt;
&lt;p&gt;.NET&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_476_Common Consequences" id="oc_476_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;NULL pointer dereferences usually result in the failure of the process
unless exception handling (on some platforms) is available and
implemented. Even when exception handling is being used, it can still be
very difficult to return the software to a safe state of
operation.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;In very rare circumstances and environments, code execution is
possible.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_476_Likelihood of Exploit" id="oc_476_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Medium&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_476_Demonstrative Examples" id="oc_476_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;NULL pointer dereference issue can occur through a number of flaws,
including race conditions, and simple programming omissions. While there are
no complete fixes aside from conscientious programming, the following steps
will go a long way to ensure that NULL pointer dereferences do not occur.
Before using a pointer, ensure that it is not equal to NULL:&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;if (pointer1 != NULL) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;/* make use of pointer1 */&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/* ... */&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;When freeing pointers, ensure they are not set to NULL, and be sure to
set them to NULL once they are freed:&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;if (pointer1 != NULL) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;free(pointer1);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;pointer1 = NULL;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If you are working with a multi-threaded or otherwise asynchronous
environment, ensure that proper locking APIs are used to lock before the
if statement; and unlock when it has finished.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;This example takes an IP address from a user, verifies that it is
well formed and then looks up the hostname and copies it into a
buffer.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;void host_lookup(char *user_supplied_addr){&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;struct hostent *hp;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;in_addr_t *addr;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char hostname[64];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;in_addr_t inet_addr(const char *cp);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/*routine that ensures user_supplied_addr is in the right
format for conversion */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;validate_addr_form(user_supplied_addr);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;addr = inet_addr(user_supplied_addr);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;hp = gethostbyaddr( addr, sizeof(struct in_addr),
AF_INET);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcpy(hostname, hp-&amp;gt;h_name);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If an attacker provides an address that appears to be well-formed, but
the address does not resolve to a hostname, then the call to
gethostbyaddr() will return NULL. Since the code does not check the
return value from gethostbyaddr (CWE-252), a NULL pointer dereference
would then occur in the call to strcpy(). &lt;/p&gt;&lt;p&gt;Note that this example is also vulnerable to a buffer overflow (see
CWE-119).&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;In the following code, the programmer assumes that the system always
has a property named "cmd" defined. If an attacker can control the program's
environment so that "cmd" is not defined, the program throws a NULL pointer
exception when it attempts to call the trim() method.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;String cmd = System.getProperty("cmd");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;cmd = cmd.trim();&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_476_Observed Examples" id="oc_476_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-3274" target="_blank"&gt;CVE-2005-3274&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;race condition causes a table to be corrupted if a
timer activates while it is being modified, leading to resultant NULL
dereference; also involves locking.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1912" target="_blank"&gt;CVE-2002-1912&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;large number of packets leads to NULL
dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0772" target="_blank"&gt;CVE-2005-0772&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;packet with invalid error status value triggers
NULL dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0079" target="_blank"&gt;CVE-2004-0079&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0365" target="_blank"&gt;CVE-2004-0365&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1013" target="_blank"&gt;CVE-2003-1013&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-1000" target="_blank"&gt;CVE-2003-1000&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0389" target="_blank"&gt;CVE-2004-0389&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0119" target="_blank"&gt;CVE-2004-0119&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0458" target="_blank"&gt;CVE-2004-0458&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0401" target="_blank"&gt;CVE-2002-0401&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_476_Potential Mitigations" id="oc_476_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;If all pointers that could have been modified are sanity-checked
previous to use, nearly all NULL pointer dereferences can be
prevented.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p&gt;The choice could be made to use a language that is not susceptible to
these issues.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Check the results of all functions that return a value and verify that
the value is non-null before acting upon it.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Moderate&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;Checking the return value of the function will typically be
sufficient, however beware of race conditions (CWE-362) in a concurrent
environment.&lt;/p&gt;
&lt;p&gt;This solution does not handle the use of improperly initialized
variables (CWE-665).&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Identify all variables and data stores that receive information from
external sources, and apply input validation to make sure that they are
only initialized to expected values.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Explicitly initialize all your variables and other data stores, either
during declaration or just before the first usage.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Use automated static analysis tools that target this type of weakness.
Many modern techniques use data flow analysis to minimize the number of
false positives. This is not a perfect solution, since 100% accuracy and
coverage are not feasible.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Use dynamic tools and techniques that interact with the software using
large test suites with many diverse inputs, such as fuzz testing
(fuzzing), robustness testing, and fault injection. The software's
operation may slow down, but it should not become unstable, crash, or
generate incorrect results.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Identify error conditions that are not likely to occur during normal
usage and trigger them. For example, run the program under low memory
conditions, run with insufficient privileges or permissions, interrupt a
transaction before it is completed, or disable connectivity to basic
network services such as DNS. Monitor the software for any unexpected
behavior. If you trigger an unhandled exception or similar error that
was discovered and handled by the application's environment, it may
still indicate unexpected conditions that were not handled by the
application itself.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_476_Weakness Ordinalities" id="oc_476_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Resultant&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;NULL pointer dereferences are frequently resultant from rarely
encountered error conditions, since these are most likely to escape
detection during the testing phases.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_476_Relationships" id="oc_476_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Named Chain(s) this relationship pertains
to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;730&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=730" target="_blank"&gt;OWASP Top Ten 2004 Category A9 - Denial of Service&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;737&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=737" target="_blank"&gt;CERT C Secure Coding Section 03 - Expressions (EXP)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;742&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=742" target="_blank"&gt;CERT C Secure Coding Section 08 - Memory Management (MEM)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard&lt;/span&gt;734&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;808&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=808" target="_blank"&gt;2010 Top 25 - Weaknesses On the Cusp&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;373&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=373" target="_blank"&gt;State Synchronization Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;252&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=252" target="_blank"&gt;Unchecked Return Value&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Unchecked Return Value to NULL Pointer Dereference&lt;/span&gt;690&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;789&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=789" target="_blank"&gt;Uncontrolled Memory Allocation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_476_Taxonomy Mappings" id="oc_476_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null Dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null-pointer dereference&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null Dereference (Null Pointer Dereference)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A9&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Denial of Service&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;EXP34-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Ensure a null pointer is not dereferenced&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MEM32-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Detect and handle memory allocation errors&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_476_White Box Definitions" id="oc_476_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. start statement that assigns a null value to the pointer&lt;/p&gt;
&lt;p&gt;2. end statement that dereferences a pointer&lt;/p&gt;
&lt;p&gt;3. the code path does not contain any other statement that assigns
value to the pointer&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_476_Content History" id="oc_476_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Relationships, Other Notes, Taxonomy Mappings,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Demonstrative Examples,
Other Notes, Potential Mitigations,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1855</key><name>R15_03_Non_Default_Final_Clause_In_Switch_Statement</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 15-3&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 15-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11043&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Every &amp;#39;switch&amp;#39; statement shall contain a &amp;#39;default&amp;#39; clause as its final clause.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1858</key><name>R16_02_Recursion_Exists</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 16-2&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11046&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Recursion shall not occur, neither by a function calling itself directly, nor by
            an indirect cycle of calls.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1812</key><name>R02_02_CPP_Comment_Style</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 2-2&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11000&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            The only comments allowed are of the /* ... */ style.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_298</key><name>Blind_SQL_Injections</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could directly access all of the system's data. Using available tools and text editing, the attacker would be able to steal any sensitive information stored by the system (such as personal user details or credit cards), and possibly change or erase existing data.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application communicates with its database by sending a textual SQL query. The application creates the query by simply concatenating strings including the user's input. Since the user input is neither checked for data type validity nor subsequently sanitized, the input could contain SQL commands that would be interpreted as such by the database. Even when application error responses do not contain actual database content, available tools can perform series of boolean tests for errors to gradually obtain database content.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Additionally, escape all user input before including it in the query. Escaping should be done relative to the specific database in use.&lt;/li&gt;
&lt;li&gt;Instead of concatenating strings: a. Use secure database components such as stored procedures, parameterized queries, and object bindings (for commands and parameters). b. An even better solution is to use an ORM library, such as EntityFramework, Hibernate, or iBatis.&lt;/li&gt;
&lt;li&gt;Do not allow the user to dynamically provide the name of the queried table, and if possible completely avoid using dynamic table names. 5. Restrict access to database objects and functionality, according to the Principle of Least Privilege.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
Using Parameterized Queries:

      &lt;/h4&gt;&lt;pre&gt;


String custId = txtCustomerId.Text;
if (!Regex.IsMatch(custId, @"^\d{6}\z"))
throw new ArgumentException("Invalid customer Id.");
String query = "SELECT accountBalance FROM customers WHERE customerId = ?";
OleDbCommand command = new OleDbCommand(query, connection);
command.Parameters.Add(new OleDbParameter("customerName", custId));
OleDbDataReader reader = command.ExecuteReader();



      &lt;/pre&gt;&lt;h4&gt;

Using Stored Procedures:

      &lt;/h4&gt;&lt;pre&gt;


String custId = txtCustomerId.Text;
if (!Regex.IsMatch(custId, "^\d{6}\z"))
throw new ArgumentException("Invalid customer Id.");
try {
SqlCommand command = new SqlCommand("getAccountBalance", conn);
command.CommandType = CommandType.StoredProcedure;
command.Parameters.Add(new SqlParameter("@CustomerName", custId));
SqlDataReader reader = command.ExecuteReader();
}
catch (SqlException se) {
// … logging and error handling
}



      &lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;
Using Parameterized Queries:

      &lt;/h4&gt;&lt;pre&gt;


String custId = request.getParameter("customerId");
Pattern custPattern = Pattern.compile("^\d{6}$");
if ( !custPattern.matcher( custId ).matches() )
throw new ValidationException("Invalid customer Id.");
String query = "SELECT accountBalance FROM customers WHERE customerId = ?";
PreparedStatement pstmt = connection.prepareStatement( query );
pstmt.setString( 1, custId );
ResultSet results = pstmt.executeQuery( );


      &lt;/pre&gt;&lt;h4&gt;

Using Stored Procedures:

      &lt;/h4&gt;&lt;pre&gt;


String custId = request.getParameter("customerId");
Pattern custPattern = Pattern.compile("^\d{6}$");
if ( !custPattern.matcher( custId ).matches() )
throw new ValidationException("Invalid customer Id.");
try {
CallableStatement cs = conn.prepareCall("{call getAccountBalance(?)}");
cs.setString(1, custname);
ResultSet results = cs.executeQuery();
}
catch (SQLException se) {
// … logging and error handling
}


      &lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1842</key><name>R13_01_Assignment_Operators_In_Boolean_Expressions</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 13-1&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 13-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 11030&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Expressions that yield a boolean value shall not contain assignment operators.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1256</key><name>Dead_Code</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Dead Code&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;561&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Variant)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_561_Description" id="oc_561_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software contains dead code, which can never be
executed.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Dead code is source code that can never be executed in a running program.
The surrounding code makes it impossible for a section of code to ever be
executed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_561_Time of Introduction" id="oc_561_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_561_Common Consequences" id="oc_561_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Other&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Dead code can lead to confusion during code maintenance and result in
unrepaired vulnerabilities.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_561_Demonstrative Examples" id="oc_561_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The condition for the second if statement is impossible to satisfy.
It requires that the variables be non-null, while on the only path where s
can be assigned a non-null value there is a return statement.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C++&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;String s = null;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (b) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;s = "Yes";&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (s != null) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;Dead();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;In the following class, two private methods call each other, but
since neither one is ever invoked from anywhere else, they are both dead
code.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;public class DoubleDead {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;private void doTweedledee() {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;doTweedledumb();&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;private void doTweedledumb() {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;doTweedledee();&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;public static void main(String[] args) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;System.out.println("running DoubleDead");&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;(In this case it is a good thing that the methods are dead: invoking
either one would cause an infinite loop.)&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;The field named glue is not used in the following class. The author
of the class has accidentally put quotes around the field name, transforming
it into a string constant.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;public class Dead {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;String glue;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;public String getGlue() {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;return "glue";&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_561_Potential Mitigations" id="oc_561_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Remove dead code before deploying the application.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Use a static analysis tool to spot dead code.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_561_Relationships" id="oc_561_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;747&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=747" target="_blank"&gt;CERT C Secure Coding Section 49 - Miscellaneous (MSC)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;570&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=570" target="_blank"&gt;Expression is Always False&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;571&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=571" target="_blank"&gt;Expression is Always True&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_561_Taxonomy Mappings" id="oc_561_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Anonymous Tool Vendor (under NDA)&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;MSC07-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Detect and remove dead code&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_561_Content History" id="oc_561_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Anonymous Tool Vendor (under NDA)&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description, Relationships, Other Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences,
Other Notes&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_289</key><name>SQL_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could directly access all of the system's data. Using simple tools and text editing, the attacker would be able to steal any sensitive information stored by the system (such as personal user details or credit cards), and possibly change or erase existing data.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application communicates with its database by sending a textual SQL query. The application creates the query by simply concatenating strings including the user's input. Since the user input is neither checked for data type validity nor subsequently sanitized, the input could contain SQL commands that would be interpreted as such by the database.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values.&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Instead of concatenating strings: a. Use secure database components such as stored procedures, parameterized queries, and object bindings (for commands and parameters). b. An even better solution is to use an ORM library, such as EntityFramework, Hibernate, or iBatis.&lt;/li&gt;
&lt;li&gt;Restrict access to database objects and functionality, according to the Principle of Least Privilege.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
The application creates an SQL query using string obtained from the user
      &lt;/h4&gt;&lt;pre&gt;public class SQLInjection
{
        public void foo(TextBox tbUserName, SqliteConnection connection)
        {	
                string user = tbUserName.Text;
                string sql = "insert into users(name) VALUES (user)"
                MySqlCommand cmd = new MySqlCommand(sql, connection);
                connection.Open();
                SqlDataReader reader = cmd.ExecuteReader();
        }
}&lt;/pre&gt;&lt;h4&gt;
The string obtained from the user is checked for potentially malicious characters
      &lt;/h4&gt;&lt;pre&gt;
class SqlInjectionFixed
{
        public void foo(TextBox tbUserName, SqliteConnection connection)
        {
                string user = tbUserName.Text;
                string sql = "insert into users(name) VALUES (@param1)";
                MySqlCommand cmd = new MySqlCommand(sql, connection);
                cmd.Parameters.AddWithValue(@param1, user);
                connection.Open();
                SqlDataReader reader = cmd.ExecuteReader();
        }
}&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;The application creates an SQL query using string obtained from the user&lt;/h4&gt;&lt;pre&gt;public class SQL_Injection {
	public static void getUserId(Connection con) {
		System.out.println("enter user name");
		Scanner in = new Scanner(System.in);
		String user = in.nextLine();
		String query = "select user_id from User where user = " + user;
		Statement stmt = con.createStatement();
		ResultSet rs = stmt.executeQuery(query);
	}
}&lt;/pre&gt;&lt;h4&gt;The string obtained from the user is checked for potentially malicious characters&lt;/h4&gt;&lt;pre&gt;public class SQL_Injection_Fixed {
	public static void getUserId(Connection con) {
		System.out.println("enter user name");
		Scanner in = new Scanner(System.in);
		String user = in.nextLine();
		String query = "select user_id from User where user = ?";
		PreparedStatement stmt = con.createStatement(query);
		stmt.setString(1, user);
		ResultSet rs = stmt.executeQuery(query);
	}
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1857</key><name>R16_01_Function_With_Variable_Number_Of_Arguments</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 16-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11045&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
                    Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Non-main functions shall not be defined to accept a variable number of
                  arguments.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;
                    &lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                        http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3895</key><name>Incorrect_Permission_Assignment_For_Critical_Resources</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Incorrect Permission Assignment for Critical Resource&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;732&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Class)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_732_Description" id="oc_732_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software specifies permissions for a security-critical
resource in a way that allows that resource to be read or modified by unintended
actors.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;When a resource is given a permissions setting that provides access to a
wider range of actors than required, it could lead to the disclosure of
sensitive information, or the modification of that resource by unintended
parties. This is especially dangerous when the resource is related to
program configuration, execution or sensitive user data.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_732_Time of Introduction" id="oc_732_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;

&lt;li&gt;Implementation&lt;/li&gt;
&lt;li&gt;Installation&lt;/li&gt;
&lt;li&gt;Operation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_732_Applicable Platforms" id="oc_732_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Language-independent&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Modes of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Modes of Introduction&lt;/div&gt;&lt;div name="oc_732_Modes of Introduction" id="oc_732_Modes of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;The developer may set loose permissions in order to minimize problems when
the user first runs the program, then create documentation stating that
permissions should be tightened. Since system administrators and users do
not always read the documentation, this can result in insecure permissions
being left unchanged.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;The developer might make certain assumptions about the environment in
which the software runs - e.g., that the software is running on a
single-user system, or the software is only accessible to trusted
administrators. When the software is running in a different environment, the
permissions become a problem.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_732_Common Consequences" id="oc_732_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Confidentiality&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;An attacker may be able to read sensitive information from the
associated resource, such as credentials or configuration information
stored in a file.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;An attacker may be able to modify critical properties of the
associated resource to gain privileges, such as replacing a
world-writable executable with a Trojan horse.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;An attacker may be able to destroy or corrupt critical data in the
associated resource, such as deletion of records from a database.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_732_Likelihood of Exploit" id="oc_732_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Medium to High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Detection Methods"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Detection Methods&lt;/div&gt;&lt;div name="oc_732_Detection Methods" id="oc_732_Detection Methods" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Static Analysis&lt;/p&gt;&lt;p&gt;Automated static analysis may be effective in detecting permission
problems for system resources such as files, directories, shared memory,
device interfaces, etc. Automated techniques may be able to detect the
use of library functions that modify permissions, then analyze function
calls for arguments that contain potentially insecure values.&lt;/p&gt;&lt;p&gt;However, since the software's intended security policy might allow
loose permissions for certain operations (such as publishing a file on a
web server), automated static analysis may produce some false positives
- i.e., warnings that do not have any security consequences or require
any code changes.&lt;/p&gt;&lt;p&gt;When custom permissions models are used - such as defining who can
read messages in a particular forum in a bulletin board system - these
can be difficult to detect using automated static analysis. It may be
possible to define custom signatures that identify any custom functions
that implement the permission checks and assignments.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Dynamic Analysis&lt;/p&gt;&lt;p&gt;Automated dynamic analysis may be effective in detecting permission
problems for system resources such as files, directories, shared memory,
device interfaces, etc.&lt;/p&gt;&lt;p&gt;However, since the software's intended security policy might allow
loose permissions for certain operations (such as publishing a file on a
web server), automated dynamic analysis may produce some false positives
- i.e., warnings that do not have any security consequences or require
any code changes.&lt;/p&gt;&lt;p&gt;When custom permissions models are used - such as defining who can
read messages in a particular forum in a bulletin board system - these
can be difficult to detect using automated dynamic analysis. It may be
possible to define custom signatures that identify any custom functions
that implement the permission checks and assignments.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Manual Static Analysis&lt;/p&gt;&lt;p&gt;Manual static analysis may be effective in detecting the use of custom
permissions models and functions. The code could then be examined to
identifying usage of the related functions. Then the human analyst could
evaluate permission assignments in the context of the intended security
model of the software.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Manual Dynamic Analysis&lt;/p&gt;&lt;p&gt;Manual dynamic analysis may be effective in detecting the use of
custom permissions models and functions. The program could then be
executed with a focus on exercising code paths that are related to the
custom permissions. Then the human analyst could evaluate permission
assignments in the context of the intended security model of the
software.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Fuzzing&lt;/p&gt;&lt;p&gt;Fuzzing is not effective in detecting this weakness.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_732_Demonstrative Examples" id="oc_732_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code sets the umask of the process to 0 before
creating a file and writing "Hello world" into the file.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#define OUTFILE "hello.out" &lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt; umask(0);&lt;/div&gt;&lt;div style="font-size:90%;"&gt; FILE *out;&lt;/div&gt;&lt;div style="font-size:90%;"&gt; /* Ignore CWE-59 (link following) for brevity */&lt;/div&gt;&lt;div style="font-size:90%;"&gt; out = fopen(OUTFILE, "w");&lt;/div&gt;&lt;div style="font-size:90%;"&gt; if (out) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt; fprintf(out, "hello world!\n");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt; fclose(out);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt; }&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;After running this program on a UNIX system, running the "ls -l"
command might return the following output:&lt;/p&gt;&lt;div class="indent Result"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Result)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;-rw-rw-rw- 1 username 13 Nov 24 17:58 hello.out &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The "rw-rw-rw-" string indicates that the owner, group, and world (all
users) can read the file and write to it.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following code snippet might be used as a monitor to
periodically record whether a web site is alive. To ensure that the file can
always be modified, the code uses chmod() to make the file
world-writable.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Perl&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;$fileName = "secretFile.out";&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (-e $fileName) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt; chmod 0777, $fileName;&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;my $outFH;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (! open($outFH, "&amp;gt;&amp;gt;$fileName")) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt; ExitError("Couldn't append to $fileName: $!");&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;my $dateString = FormatCurrentTime();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;my $status = IsHostAlive("cwe.mitre.org");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;print $outFH "$dateString cwe status: $status!\n";&lt;/div&gt;&lt;div style="font-size:90%;"&gt;close($outFH);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The first time the program runs, it might create a new file that
inherits the permissions from its environment. A file listing might look
like:&lt;/p&gt;&lt;div class="indent Result"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Result)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;-rw-r--r-- 1 username 13 Nov 24 17:58 secretFile.out &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;This listing might occur when the user has a default umask of 022,
which is a common setting. Depending on the nature of the file, the user
might not have intended to make it readable by everyone on the
system.&lt;/p&gt;&lt;p&gt;The next time the program runs, however - and all subsequent
executions - the chmod will set the file's permissions so that the
owner, group, and world (all users) can read the file and write to
it:&lt;/p&gt;&lt;div class="indent Result"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Result)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;-rw-rw-rw- 1 username 13 Nov 24 17:58 secretFile.out &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Perhaps the programmer tried to do this because a different process
uses different permissions that might prevent the file from being
updated.&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;The following command recursively sets world-readable permissions
for a directory and all of its children:&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Shell&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;chmod -R ugo+r DIRNAME&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If this command is run from a program, the person calling the program
might not expect that all the files under the directory will be
world-readable. If the directory is expected to contain private data,
this could become a security problem. &lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_732_Observed Examples" id="oc_732_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3482" target="_blank"&gt;CVE-2009-3482&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Anti-virus product sets insecure "Everyone: Full
Control" permissions for files under the "Program Files" folder, allowing
attackers to replace executables with Trojan
horses.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3897" target="_blank"&gt;CVE-2009-3897&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Product creates directories with 0777 permissions
at installation, allowing users to gain privileges and access a socket used
for authentication.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3489" target="_blank"&gt;CVE-2009-3489&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Photo editor installs a service with an insecure
security descriptor, allowing users to stop or start the service, or execute
commands as SYSTEM.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3289" target="_blank"&gt;CVE-2009-3289&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Library function copies a file to a new target and
uses the source file's permissions for the target, which is incorrect when
the source file is a symbolic link, which typically has 0777 permissions.
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0115" target="_blank"&gt;CVE-2009-0115&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Device driver uses world-writable permissions for
a socket file, allowing attackers to inject arbitrary
commands.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1073" target="_blank"&gt;CVE-2009-1073&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;LDAP server stores a cleartext password in a
world-readable file.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0141" target="_blank"&gt;CVE-2009-0141&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Terminal emulator creates TTY devices with
world-writable permissions, allowing an attacker to write to the terminals
of other users.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0662" target="_blank"&gt;CVE-2008-0662&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;VPN product stores user credentials in a registry
key with "Everyone: Full Control" permissions, allowing attackers to steal
the credentials.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0322" target="_blank"&gt;CVE-2008-0322&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Driver installs its device interface with
"Everyone: Write" permissions.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3939" target="_blank"&gt;CVE-2009-3939&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Driver installs a file with world-writable
permissions.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-3611" target="_blank"&gt;CVE-2009-3611&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Product changes permissions to 0777 before
deleting a backup; the permissions stay insecure for subsequent
backups.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6033" target="_blank"&gt;CVE-2007-6033&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Product creates a share with "Everyone: Full
Control" permissions, allowing arbitrary program
execution.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-5544" target="_blank"&gt;CVE-2007-5544&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Product uses "Everyone: Full Control" permissions
for memory-mapped files (shared memory) in inter-process communication,
allowing attackers to tamper with a session.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-4868" target="_blank"&gt;CVE-2005-4868&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Database product uses read/write permissions for
everyone for its shared memory, allowing theft of credentials.
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1714" target="_blank"&gt;CVE-2004-1714&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Security product uses "Everyone: Full Control"
permissions for its configuration files.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0006" target="_blank"&gt;CVE-2001-0006&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;"Everyone: Full Control" permissions assigned to a
mutex allows users to disable network
connectivity.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0969" target="_blank"&gt;CVE-2002-0969&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: database product contains buffer overflow
that is only reachable through a .ini configuration file - which has
"Everyone: Full Control" permissions.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_732_Potential Mitigations" id="oc_732_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;When using a critical resource such as a configuration file, check to
see if the resource has insecure permissions (such as being modifiable
by any regular user), and generate an error or even exit the software if
there is a possibility that the resource could have been modified by an
unauthorized party.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Divide your application into anonymous, normal, privileged, and
administrative areas. Reduce the attack surface by carefully defining
distinct user groups, privileges, and/or roles. Map these against data,
functionality, and the related resources. Then set the permissions
accordingly. This will allow you to maintain more fine-grained control
over your resources.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phases:  Implementation; Installation&lt;/p&gt;&lt;p&gt;During program startup, explicitly set the default permissions or
umask to the most restrictive setting possible. Also set the appropriate
permissions during program installation. This will prevent you from
inheriting insecure permissions from any user who installs or runs the
program.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  System Configuration&lt;/p&gt;&lt;p&gt;For all configuration files, executables, and libraries, make sure
that they are only readable and writable by the software's
administrator.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Documentation&lt;/p&gt;&lt;p&gt;Do not suggest insecure configuration changes in your documentation,
especially if those configurations can extend to resources and other
software that are outside the scope of your own software.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Installation&lt;/p&gt;&lt;p&gt;Do not assume that the system administrator will manually change the
configuration to the settings that you recommend in the manual.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Use tools and techniques that require manual (human) analysis, such as
penetration testing, threat modeling, and interactive tools that allow
the tester to record and modify an active session. These may be more
effective than strictly automated techniques. This is especially the
case with weaknesses that are related to design and business
rules.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Testing&lt;/p&gt;&lt;p&gt;Use monitoring tools that examine the software's process as it
interacts with the operating system and the network. This technique is
useful in cases when source code is unavailable, if the software was not
developed by you, or if you want to verify that the build phase did not
introduce any new weaknesses. Examples include debuggers that directly
attach to the running process; system-call tracing utilities such as
truss (Solaris) and strace (Linux); system activity monitors such as
FileMon, RegMon, Process Monitor, and other Sysinternals utilities
(Windows); and sniffers and protocol analyzers that monitor network
traffic.&lt;/p&gt;&lt;p&gt;Attach the monitor to the process and watch for library functions or
system calls on OS resources such as files, directories, and shared
memory. Examine the arguments to these calls to infer which permissions
are being used.&lt;/p&gt;&lt;p&gt;Note that this technique is only useful for permissions issues related
to system resources. It is not likely to detect application-level
business rules that are related to permissions, such as if a user of a
blog system marks a post as "private," but the blog system inadvertently
marks it as "public."&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phases:  Testing; System Configuration&lt;/p&gt;&lt;p&gt;Ensure that your software runs properly under the Federal Desktop Core
Configuration (FDCC) or an equivalent hardening configuration guide,
which many organizations use to limit the attack surface and potential
risk of deployed software.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_732_Relationships" id="oc_732_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;275&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=275" target="_blank"&gt;Permission Issues&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;668&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=668" target="_blank"&gt;Exposure of Resource to Wrong Sphere&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;753&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=753" target="_blank"&gt;2009 Top 25 - Porous Defenses&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2009 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;750&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;803&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=803" target="_blank"&gt;2010 Top 25 - Porous Defenses&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;RequiredBy&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Compound Element: Composite&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;689&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=689" target="_blank"&gt;Permission Race Condition During Resource Copy&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;276&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=276" target="_blank"&gt;Incorrect Default Permissions&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;277&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=277" target="_blank"&gt;Insecure Inherited Permissions&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;278&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=278" target="_blank"&gt;Insecure Preserved Inherited Permissions&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;279&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=279" target="_blank"&gt;Incorrect Execution-Assigned Permissions&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;281&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=281" target="_blank"&gt;Improper Preservation of Permissions&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_732_Related Attack Patterns" id="oc_732_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org232.html" target="_blank"&gt;232&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Exploitation of Privilege/Trust&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org1.html" target="_blank"&gt;1&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Accessing Functionality Not Properly Constrained by ACLs&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org17.html" target="_blank"&gt;17&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Accessing, Modifying or Executing Executable Files&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org60.html" target="_blank"&gt;60&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Reusing Session IDs (aka Session Replay)&lt;/td&gt;&lt;/tr&gt;

&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org61.html" target="_blank"&gt;61&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Session Fixation&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org62.html" target="_blank"&gt;62&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Cross Site Request Forgery (aka Session Riding)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org122.html" target="_blank"&gt;122&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Exploitation of Authorization&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org180.html" target="_blank"&gt;180&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Exploiting Incorrectly Configured Access Control Security Levels&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org234.html" target="_blank"&gt;234&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Hijacking a privileged process&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_732_References" id="oc_732_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Mark Dowd, John McDonald
and Justin Schuh. "The Art of Software Security Assessment". Chapter 9, "File Permissions." Page 495.. 1st Edition. Addison Wesley. 2006. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;John Viega and
Gary McGraw. "Building Secure Software". Chapter 8, "Access Control." Page 194.. 1st Edition. Addison-Wesley. 2002. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Maintenance Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Maintenance Notes&lt;/div&gt;&lt;div name="oc_732_Maintenance Notes" id="oc_732_Maintenance Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;The relationships between privileges, permissions, and actors (e.g. users
and groups) need further refinement within the Research view. One
complication is that these concepts apply to two different pillars, related
to control of resources (CWE-664) and protection mechanism failures
(CWE-396).&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_732_Content History" id="oc_732_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal CWE Team&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;new weakness-focused entry for Research
view.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description, Likelihood of Exploit, Name,
Potential Mitigations, Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Related Attack Patterns&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Name&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Demonstrative Examples, Detection Factors, Modes of Introduction,
Observed Examples, Potential Mitigations, References&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-04-05&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations, Related Attack Patterns&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Insecure Permission
Assignment for Resource&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Insecure Permission
Assignment for Critical Resource&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1867</key><name>R19_01_Non_Prepocessor_Command_Before_Include_In_File</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 19-1&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 19-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11055&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            In every file, every #include statement should only be preceeded by comments or
            pre-processing directives.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1830</key><name>R08_03_Identical_Function_Decl_Def</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 8-3&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 8-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11018&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Function prototypes and definitions shall be identical with respect to paramater
            types and return type.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3889</key><name>Reliance_On_Untrusted_Inputs_In_Security_Decision</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Reliance on Untrusted Inputs in a Security Decision&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;807&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_807_Description" id="oc_807_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The application uses a protection mechanism that relies on the
existence or values of an input, but the input can be modified by an untrusted
actor in a way that bypasses the protection mechanism.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt; Developers may assume that inputs such as cookies, environment variables,
and hidden form fields cannot be modified. However, an attacker could change
these inputs using customized clients or other attacks. This change might
not be detected. When security decisions such as authentication and
authorization are made based on the values of these inputs, attackers can
bypass the security of the software.&lt;/p&gt;
&lt;p&gt;Without sufficient encryption, integrity checking, or other mechanism, any
input that originates from an outsider cannot be trusted.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_807_Time of Introduction" id="oc_807_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_807_Applicable Platforms" id="oc_807_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Language-independent&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_807_Common Consequences" id="oc_807_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Confidentiality&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p class="smaller" style="font-weight:normal"&gt;&lt;span class="subheading"&gt;Technical Impact:&lt;/span&gt;&lt;i&gt; Bypass security; Gain privileges&lt;/i&gt;&lt;/p&gt;&lt;div style="padding-top:5px"&gt;&lt;p&gt;Attackers can bypass the security decision to access whatever is being
protected. The consequences will depend on the associated functionality,
but they can range from granting additional privileges to untrusted
users to bypassing important security checks. Ultimately, this weakness
may lead to exposure or modification of sensitive data, system crash, or
execution of arbitrary code.&lt;/p&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_807_Likelihood of Exploit" id="oc_807_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Medium to High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Detection Methods"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Detection Methods&lt;/div&gt;&lt;div name="oc_807_Detection Methods" id="oc_807_Detection Methods" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Manual Static Analysis&lt;/p&gt;&lt;p&gt;Since this weakness does not typically appear frequently within a
single software package, manual white box techniques may be able to
provide sufficient code coverage and reduction of false positives if all
potentially-vulnerable operations can be assessed within limited time
constraints.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: High&lt;/i&gt;&lt;/p&gt;&lt;div class="indent smaller"&gt;
&lt;p&gt;The effectiveness and speed of manual analysis will be reduced if the
there is not a centralized security mechanism, and the security logic is
widely distributed throughout the software.&lt;/p&gt;
&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_807_Demonstrative Examples" id="oc_807_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code excerpt reads a value from a browser cookie to
determine the role of the user.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;Cookie[] cookies = request.getCookies();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for (int i =0; i&amp;lt; cookies.length; i++) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;Cookie c = cookies[i];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (c.getName().equals("role")) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;userRole = c.getValue();&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following code could be for a medical records application. It
performs authentication by checking if a cookie has been set.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;PHP&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;$auth = $_COOKIES['authenticated'];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if (! $auth) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;if (AuthenticateUser($_POST['user'], $_POST['password']) ==
"success") {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;// save the cookie to send out in future responses&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;setcookie("authenticated", "1", time()+60*60*2);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;else {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ShowLoginScreen();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;die("\n");&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;DisplayMedicalHistory($_POST['patient_ID']);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The programmer expects that the AuthenticateUser() check will always
be applied, and the "authenticated" cookie will only be set when
authentication succeeds. The programmer even diligently specifies a
2-hour expiration for the cookie.&lt;/p&gt;&lt;p&gt;However, the attacker can set the "authenticated" cookie to a non-zero
value such as 1. As a result, the $auth variable is 1, and the
AuthenticateUser() check is not even performed. The attacker has
bypassed the authentication.&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;In the following example, an authentication flag is read from a
browser cookie, thus allowing for external control of user state
data.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;Cookie[] cookies = request.getCookies();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for (int i =0; i&amp;lt; cookies.length; i++) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;Cookie c = cookies[i];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (c.getName().equals("authenticated") &amp;amp;&amp;amp;
Boolean.TRUE.equals(c.getValue())) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;authenticated = true;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_807_Observed Examples" id="oc_807_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1549" target="_blank"&gt;CVE-2009-1549&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Attacker can bypass authentication by setting a
cookie to a specific value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1619" target="_blank"&gt;CVE-2009-1619&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Attacker can bypass authentication and gain admin
privileges by setting an "admin" cookie to 1.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0864" target="_blank"&gt;CVE-2009-0864&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Content management system allows admin privileges
by setting a "login" cookie to "OK."&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-5784" target="_blank"&gt;CVE-2008-5784&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;e-dating application allows admin privileges by
setting the admin cookie to 1. &lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-6291" target="_blank"&gt;CVE-2008-6291&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Web-based email list manager allows attackers to
gain admin privileges by setting a login cookie to "admin."
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_807_Potential Mitigations" id="oc_807_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Do not keep state information on the client without using encryption
and integrity checking, or otherwise having a mechanism on the server
side to catch state tampering. Use a message authentication code (MAC)
algorithm, such as Hash Message Authentication Code (HMAC). Apply this
against the state data that you have to expose, which can guarantee the
integrity of the data - i.e., that the data has not been modified.
Ensure that you use an algorithm with a strong hash function
(CWE-328).&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Store state information on the server side only. Ensure that the
system definitively and unambiguously keeps track of its own state and
user state and has rules defined for legitimate state transitions. Do
not allow any application user to affect state directly in any way other
than through legitimate actions leading to state transitions.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to
occur or provides constructs that make this weakness easier to
avoid.&lt;/p&gt;&lt;p&gt;With a stateless protocol such as HTTP, use a framework that maintains
the state for you.&lt;/p&gt;&lt;p&gt;Examples include ASP.NET View State and the OWASP ESAPI Session
Management feature.&lt;/p&gt;&lt;p&gt;Be careful of language features that provide state support, since
these might be provided as a convenience to the programmer and may not
be considering security.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;For any security checks that are performed on the client side, ensure
that these checks are duplicated on the server side, in order to avoid
CWE-602. Attackers can bypass the client-side checks by modifying values
after the checks have been performed, or by changing the client to
remove the client-side checks entirely. Then, these modified values
would be submitted to the server.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phases:  Operation; Implementation&lt;/p&gt;&lt;p&gt;If you are using PHP, configure your application so that it does not
use register_globals. During implementation, develop your application so
that it does not rely on this feature, but be wary of implementing a
register_globals emulation that is subject to weaknesses such as CWE-95,
CWE-621, and similar issues.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phases:  Architecture and Design; Implementation&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Identify and Reduce Attack Surface&lt;/p&gt;&lt;p&gt;Understand all the potential areas where untrusted inputs can enter
your software: parameters or arguments, cookies, anything read from the
network, environment variables, reverse DNS lookups, query results,
request headers, URL components, e-mail, files, databases, and any
external systems that provide data to the application. Remember that
such inputs may be obtained indirectly through API calls.&lt;/p&gt;&lt;p&gt;Identify all inputs that are used for security decisions and determine
if you can modify the design so that you do not have to rely on
submitted inputs at all. For example, you may be able to keep critical
information about the user's session on the server side instead of
recording it within external data.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_807_Relationships" id="oc_807_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;254&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=254" target="_blank"&gt;Security Features&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;693&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=693" target="_blank"&gt;Protection Mechanism Failure&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;803&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=803" target="_blank"&gt;2010 Top 25 - Porous Defenses&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;247&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=247" target="_blank"&gt;Reliance on DNS Lookups in a Security Decision&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;302&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=302" target="_blank"&gt;Authentication Bypass by Assumed-Immutable Data&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;784&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=784" target="_blank"&gt;Reliance on Cookies without Validation and Integrity Checking in a Security Decision&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_807_Related Attack Patterns" id="oc_807_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org232.html" target="_blank"&gt;232&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Exploitation of Privilege/Trust&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_807_Content History" id="oc_807_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-01-18&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal CWE Team&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_286</key><name>Connection_String_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could manipulate the application&amp;#8217;s connection string to its database or other server.Using simple tools and text editing, the attacker might be able do any of the following:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Damage application performance (by increasing the MIN POOL SIZE)&lt;/li&gt;
&lt;li&gt;Tamper with the network connection (for example, via TRUSTED CONNECTION)&lt;/li&gt;
&lt;li&gt;Direct the application to the attacker&amp;#8217;s bogus database&lt;/li&gt;
&lt;li&gt;Discover the password to the system account on the database (by a brute-force attack)&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;To communicate with its database or with another server (for example, Active Directory), the application dynamically constructs a connection string. This connection string includes concatenated user input. Since the user input is neither checked for data type validity nor subsequently sanitized, the input could be used to maliciously manipulate the connection string.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Ideally, avoid dynamically building connection strings. If it is necessary to dynamically build a connection string, try not to include user input. In any case use platform-provided utlities, such as .NET&amp;#8217;s SqlConnectionStringBuilder, or at least encode the validated input as appropriate for your platform.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
The application constructs a connection string using input from the user
      &lt;/h4&gt;&lt;pre&gt;

 class ConnectionStringInjection
{
        static void foo(Textbox textbox1, SqlConnectionStringBuilder bldr)
        {
                bldr.UserID = textbox1.Text;
                myConnection = new SqlConnection(bldr.ToString());
        }
}



      &lt;/pre&gt;&lt;h4&gt;
The user input is first checked for malicious characters before adding to the connection string
      &lt;/h4&gt;&lt;pre&gt;

 class ConnectionStringInjectionFixed
{
        static void foo(Textbox textbox, SqlConnectionStringBuilder bldr)
        {
                bldr.UserID = textbox.Text.Replace("'", "");
                myConnection = new SqlConnection(bldr.ToString());
        }
}



      &lt;/pre&gt;&lt;h3&gt;Python&lt;/h3&gt;&lt;h4&gt;The application constructs a connection string using input from the user&lt;/h4&gt;&lt;pre&gt;from sys import stdin
import cx_Oracle
print 'Insert your ID: '
userInput = stdin.readline()
connection = cx_Oracle.connect(userInput + '/password@99.999.9.99:PORT/SID')&lt;/pre&gt;&lt;h4&gt;The user inputed file number is turned to a string of that number before use&lt;/h4&gt;&lt;pre&gt;from sys import stdin
import cx_Oracle
print 'Insert your ID: '
userInput = stdin.readline()
connection = cx_Oracle.connect(str(int(userInput)) + '/password@99.999.9.99:PORT/SID')&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;The application constructs a connection string using input from the user&lt;/h4&gt;&lt;pre&gt;public class ConnectionStringInjection {
	public static void main(String[] args) throws SQLException {
		Scanner userInputScanner = new Scanner(System.in);
		System.out.print("\nEnter url name: ");
		String connURL = userInputScanner.nextLine();
		Connection con = DriverManager.getConnection(connURL, "username", "password");
	}
}&lt;/pre&gt;&lt;h4&gt;The user input is translated to a predefined connection string&lt;/h4&gt;&lt;pre&gt;public class ConnectionStringInjectionFixed {
	public static void main(String[] args) throws SQLException {
		HashMap&lt;String, String&gt; sanitize = new HashMap&lt;String, String&gt;();
		sanitize.put("DB_url_1", "DB_url_1");
		sanitize.put("DB_url_2", "DB_url_2");
		sanitize.put("DB_url_3", "DB_url_3");
		Scanner userInputScanner = new Scanner(System.in);
		System.out.print("\nEnter url name: ");
		String connURL = userInputScanner.nextLine();
		Connection con = DriverManager.getConnection(sanitize.get(connURL), "username", "password");
	}
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_226</key><name>String_Termination_Error</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Improper Null Termination&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;170&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_170_Description" id="oc_170_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software does not terminate or incorrectly terminates a
string or array with a null character or equivalent
terminator.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Null termination errors frequently occur in two different ways. An
off-by-one error could cause a null to be written out of bounds, leading to
an overflow. Or, a program could use a strncpy() function call incorrectly,
which prevents a null terminator from being added at all. Other scenarios
are possible.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_170_Time of Introduction" id="oc_170_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_170_Applicable Platforms" id="oc_170_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;/div&gt;
&lt;p class="subheading"&gt;Platform Notes&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Conceptually, this does not just apply to the C language; any language or
representation that involves a terminator could have this type of
problem.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_170_Common Consequences" id="oc_170_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Confidentiality&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;The case of an omitted null character is the most dangerous of the
possible issues. This will almost certainly result in information
disclosure, and possibly a buffer overflow condition, which may be
exploited to execute arbitrary code. &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Confidentiality&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;If a null character is omitted from a string, then most string-copying
functions will read data until they locate a null character, even
outside of the intended boundaries of the string. This could:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;cause a crash due to a segmentation fault&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;cause sensitive adjacent memory to be copied and sent to an
outsider&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;trigger a buffer overflow when the copy is bering written to a
fixed-size buffer&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Misplaced null characters may result in any number of security
problems. The biggest issue is a subset of buffer overflow, and
write-what-where conditions, where data corruption occurs from the
writing of a null character over valid data, or even instructions. A
randomly placed null character may put the system into an undefined
state, and therefore make it prone to crashing. A misplaced null
character may corrupt other data in memory&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Access Control&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Should the null character corrupt the process flow, or affect a flag
controlling access, it may lead to logical errors which allow for the
execution of arbitrary code.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_170_Likelihood of Exploit" id="oc_170_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Medium&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_170_Demonstrative Examples" id="oc_170_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code reads from cfgfile and copies the input into
inputbuf using strcpy(). The code mistakenly assumes that inputbuf will
always contain a NULL terminator.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#define MAXLEN 1024&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char *pathbuf[MAXLEN];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;read(cfgfile,inputbuf,MAXLEN); //does not null terminate&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strcpy(pathbuf,input_buf); //requires null terminated input&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The code above will behave correctly if the data read from cfgfile is
null terminated on disk as expected. But if an attacker is able to
modify this input so that it does not contain the expected NULL
character, the call to strcpy() will continue copying from memory until
it encounters an arbitrary NULL character. This will likely overflow the
destination buffer and, if the attacker can control the contents of
memory immediately following inputbuf, can leave the application
susceptible to a buffer overflow attack.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;In the following code, readlink() expands the name of a symbolic
link stored in the buffer path so that the buffer filename contains the
absolute path of the file referenced by the symbolic link. The length of the
resulting value is then calculated using strlen().&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char buf[MAXPATH];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;readlink(path, buf, MAXPATH);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int length = strlen(filename);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The code above will not behave correctly because the value read into
buf by readlink() will not be null terminated. In testing,
vulnerabilities like this one might not be caught because the unused
contents of buf and the memory immediately following it may be NULL,
thereby causing strlen() to appear as if it is behaving correctly.
However, in the wild strlen() will continue traversing memory until it
encounters an arbitrary NULL character on the stack, which results in a
value of length that is much larger than the size of buf and may cause a
buffer overflow in subsequent uses of this value. Buffer overflows
aside, whenever a single call to readlink() returns the same value that
has been passed to its third argument, it is impossible to know whether
the name is precisely that many bytes long, or whether readlink() has
truncated the name to avoid overrunning the buffer. Traditionally,
strings are represented as a region of memory containing data terminated
with a NULL character. Older string-handling methods frequently rely on
this NULL character to determine the length of the string. If a buffer
that does not contain a NULL terminator is passed to one of these
functions, the function will read past the end of the buffer. Malicious
users typically exploit this type of vulnerability by injecting data
with unexpected size or content into the application. They may provide
the malicious input either directly as input to the program or
indirectly by modifying application resources, such as configuration
files. In the event that an attacker causes the application to read
beyond the bounds of a buffer, the attacker may be able use a resulting
buffer overflow to inject and execute arbitrary code on the system.
&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;While the following example is not exploitable, it provides a good
example of how nulls can be omitted or misplaced, even when "safe" functions
are used:&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;string.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int main() {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char longString[] = "String signifying nothing";&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char shortString[16];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(shortString, longString, 16);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("The last character in shortString is: %c %1$x\n",
shortString[15]);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return (0);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The above code gives the following output: The last character in
shortString is: l 6c So, the shortString array does not end in a NULL
character, even though the "safe" string function strncpy() was
used.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_170_Observed Examples" id="oc_170_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2000-0312" target="_blank"&gt;CVE-2000-0312&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Attacker does not null-terminate argv[] when
invoking another program.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0777" target="_blank"&gt;CVE-2003-0777&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Interrupted step causes resultant lack of null
termination.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-1072" target="_blank"&gt;CVE-2004-1072&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Fault causes resultant lack of null termination,
leading to buffer expansion.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1389" target="_blank"&gt;CVE-2001-1389&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Multiple vulnerabilities related to improper null
termination.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0143" target="_blank"&gt;CVE-2003-0143&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Product does not null terminate a message buffer
after snprintf-like call, leading to
overflow.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_170_Potential Mitigations" id="oc_170_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p&gt;Use a language that is not susceptible to these issues. However, be
careful of null byte interaction errors (CWE-626) with lower-level
constructs that may be written in a language that is susceptible.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Ensure that all string functions used are understood fully as to how
they append null characters. Also, be wary of off-by-one errors when
appending nulls to the end of strings.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;If performance constraints permit, special code can be added that
validates null-termination of string buffers, this is a rather naive and
error-prone solution.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Switch to bounded string manipulation functions. Inspect buffer
lengths involved in the buffer overrun trace reported with the
defect.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Add code that fills buffers with nulls (however, the length of buffers
still needs to be inspected, to ensure that the non null-terminated
string is not written at the physical end of the buffer).&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_170_Weakness Ordinalities" id="oc_170_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Resultant&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness is typically related to the presence of some other
weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_170_Relationships" id="oc_170_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;169&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=169" target="_blank"&gt;Technology-Specific Special Elements&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;707&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=707" target="_blank"&gt;Improper Enforcement of Message or Data Structure&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;730&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=730" target="_blank"&gt;OWASP Top Ten 2004 Category A9 - Denial of Service&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;741&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=741" target="_blank"&gt;CERT C Secure Coding Section 07 - Characters and Strings (STR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;748&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=748" target="_blank"&gt;CERT C Secure Coding Section 50 - POSIX (POS)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard&lt;/span&gt;734&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;120&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=120" target="_blank"&gt;Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;126&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=126" target="_blank"&gt;Buffer Over-read&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;463&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=463" target="_blank"&gt;Deletion of Data Structure Sentinel&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;464&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=464" target="_blank"&gt;Addition of Data Structure Sentinel&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanAlsoBe&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;147&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=147" target="_blank"&gt;Improper Neutralization of Input Terminators&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;193&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=193" target="_blank"&gt;Off-by-one Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;CanFollow&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;682&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=682" target="_blank"&gt;Incorrect Calculation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_170_Relationship Notes" id="oc_170_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Factors: this is usually resultant from other weaknesses such as
off-by-one errors, but it can be primary to boundary condition violations
such as buffer overflows. In buffer overflows, it can act as an expander for
assumed-immutable data.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Overlaps missing input terminator.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Causal Nature"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt;&lt;a href="javascript:toggleblocksOC('170_Causal Nature');"&gt;f&lt;/a&gt; &lt;/span&gt;Causal Nature&lt;/div&gt;&lt;div name="oc_170_Causal Nature" id="oc_170_Causal Nature" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Explicit&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_170_Taxonomy Mappings" id="oc_170_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Improper Null Termination&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;String Termination Error&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Miscalculated null termination&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A9&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Denial of Service&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;POS30-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Use the readlink() function properly&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR03-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Do not inadvertently truncate a null-terminated byte
string&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR32-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Null-terminate byte strings as required&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_170_White Box Definitions" id="oc_170_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. end statement that passes a data item to a null-terminated string
function&lt;/p&gt;
&lt;p&gt;2. start statement that produces the improper null-terminated data
item &lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Where "produces" is defined through the following scenarios:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. data item never ended with null-terminator&lt;/p&gt;
&lt;p&gt;2. null-terminator is re-written&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Maintenance Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Maintenance Notes&lt;/div&gt;&lt;div name="oc_170_Maintenance Notes" id="oc_170_Maintenance Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;As currently described, this entry is more like a category than a
weakness.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_170_Content History" id="oc_170_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Causal Nature,
Common Consequences, Description, Likelihood of Exploit, Maintenance Notes,
Relationships, Other Notes, Relationship Notes, Taxonomy Mappings,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-17&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Improved the White Box Definition&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Other Notes,
Potential Mitigations, White Box Definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>CRITICAL</severity><tag>checkmarx-high</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1818</key><name>R05_01_Identifiers_Length_Violation</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 5-1&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11006&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Non equal identifiers shall differ in their first 31 characters.&lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1813</key><name>R02_03_Nested_Comments</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 2-3&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11001&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Nested comments of the style /* ... /* ... */ are not to allowed.&lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1877</key><name>R20_07_Using_Setjmp_Longjmp_Macros_From_Setjmp_H</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 20-7&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 20-7&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11065&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Use of the &amp;#39;setjmp&amp;#39; or &amp;#39;longjmp&amp;#39; macros is not allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1854</key><name>R15_02_Non_Empty_Switch_Clause_Without_Break</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 15-2&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 15-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11042&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Every &amp;#39;case&amp;#39; clause shall be terminated by a non conditional break statement.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1845</key><name>R13_06_Loop_Iterator_Modified_In_Loop_Body</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 13-6&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 13-6&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11033&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
                    Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Objects of numeric type used to count iterations of a &amp;#39;foor&amp;#39; loop shall not be
                  modified within its body.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;
                    &lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                        http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1837</key><name>R12_07_Bitwise_Operator_On_Signed_Type</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 12-7&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 12-7&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11025&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Objects with an underlying signed type shall not be passed as operands to
                  bitwise operators.&lt;br&gt;
                    &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;
                    &lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                        http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_318</key><name>DoS_by_Sleep</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could provide a very high sleep value, effectively causing a denial of service for a long period of time.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application uses a user-provided value to set its sleep period, without enforcing a limited range for this value.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;ol&gt;
&lt;li&gt;Ideally, the sleep command&amp;#8217;s duration should not be be according to user input at all. It should be either hardcoded, defined in a configuration file, or dynamically calculated at runtime.&lt;/li&gt;
&lt;li&gt;If it is necessary to allow the user to define the sleep duration, this value MUST be checked and enforced to be within a predefined range of valid values.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
The application receives a timeout int from the user to be used as argument for Sleep(). This int could be a very big number.
      &lt;/h4&gt;&lt;pre&gt;

public class DosbySleep
{
        public void foo()
        {
                int sleep = int.Parse(HttpContext.Request.QueryString["timeout"]);
                Thread.Sleep(sleep);
        }
}



      &lt;/pre&gt;&lt;h4&gt;
The int received is varified to be in an acceptable range.
      &lt;/h4&gt;&lt;pre&gt;

public class DosbySleep
{
        public void foo()
        {
                int sleep = int.Parse(HttpContext.Request.QueryString["timeout"]);
                if (sleep &gt; 1000)
		{
			sleep = 1000;
		}
		else if (sleep &lt;= 10)
                {
                        sleep = 10;
                }
                Thread.Sleep(sleep);
        }
}



      &lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1866</key><name>R18_04_Use_Of_Union</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 18-4&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 18-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11054&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Use of the &amp;#39;union&amp;#39; structure type is not allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1844</key><name>R13_04_Floating_Points_Objects_In_For_Control</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 13-4&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 13-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11032&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            No objects of floating point type shall be contained in the controlling
            expressions of a &amp;#39;for&amp;#39; loop&lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1819</key><name>R05_02_Identifiers_Hiding_Outer_Scope_Identifiers</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 5-2&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11007&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            An Identifiers in a scope shall not have the same name as an identifier in an
            outer, encompassing scope.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;&lt;title&gt;MISRA RULE 5-2&lt;/title&gt;

              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1881</key><name>R20_11_Using_Abort_Exit_Getenv_System_Functions_From_Stdlib_H</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 20-11&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 20-11&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11069&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
                    Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Use of the &amp;#39;abort&amp;#39;, &amp;#39;exit&amp;#39;, &amp;#39;getenv&amp;#39; and &amp;#39;system&amp;#39; functions, from the library
                  &amp;lt;stdlib.h&amp;gt;, is not allowed.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;
                    &lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                        http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1828</key><name>R06_05_Bit_Fields_Length</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 6-5&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11016&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Bit fields that are of the type signed int shall be at least 2 bits long&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_221</key><name>MultiByte_String_Length</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Incorrect Calculation of Multi-Byte String Length&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;135&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_135_Description" id="oc_135_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software does not correctly calculate the length of strings
that can contain wide or multi-byte characters.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_135_Time of Introduction" id="oc_135_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_135_Applicable Platforms" id="oc_135_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_135_Demonstrative Examples" id="oc_135_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following example would be exploitable if any of the commented
incorrect malloc calls were used.&lt;/p&gt;&lt;div class="indent "&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;strings.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;wchar.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int main() {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;wchar_t wideString[] = L"The spazzy orange tiger jumped "
\&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;"over the tawny jaguar.";&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;wchar_t *newString;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("Strlen() output: %d\nWcslen() output: %d\n",&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strlen(wideString), wcslen(wideString));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/* Very wrong for obvious reasons //&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;newString = (wchar_t *) malloc(strlen(wideString));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;*/&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/* Wrong because wide characters aren't 1 byte long! //&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;newString = (wchar_t *) malloc(wcslen(wideString));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;*/&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/* Wrong because wcslen does not include the terminating null
*/&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;newString = (wchar_t *) malloc(wcslen(wideString) *
sizeof(wchar_t));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/* correct! */&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;newString = (wchar_t *) malloc((wcslen(wideString) + 1) *
sizeof(wchar_t));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/* ... */&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The output from the printf() statement would be: Strlen() output: 0
Wcslen() output: 53&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_135_Potential Mitigations" id="oc_135_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Always verify the length of the string unit character.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Use length computing functions (e.g. strlen, wcslen, etc.)
appropriately with their equivalent type (e.g.: byte, wchar_t,
etc.)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_135_Other Notes" id="oc_135_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;There are several ways in which improper string length checking may result
in an exploitable condition. All of these, however, involve the introduction
of buffer overflow conditions in order to reach an exploitable state. The
first of these issues takes place when the output of a wide or multi-byte
character string, string-length function is used as a size for the
allocation of memory. While this will result in an output of the number of
characters in the string, note that the characters are most likely not a
single byte, as they are with standard character strings. So, using the size
returned as the size sent to new or malloc and copying the string to this
newly allocated memory will result in a buffer overflow. Another common way
these strings are misused involves the mixing of standard string and wide or
multi-byte string functions on a single string. Invariably, this mismatched
information will result in the creation of a possibly exploitable buffer
overflow condition. Again, if a language subject to these flaws must be
used, the most effective mitigation technique is to pay careful attention to
the code at implementation time and ensure that these flaws do not
occur.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_135_Relationships" id="oc_135_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;133&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=133" target="_blank"&gt;String Errors&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;682&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=682" target="_blank"&gt;Incorrect Calculation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;741&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=741" target="_blank"&gt;CERT C Secure Coding Section 07 - Characters and Strings (STR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_135_Taxonomy Mappings" id="oc_135_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Improper string length checking&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR33-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Size wide character strings correctly&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_135_References" id="oc_135_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-11] M. Howard and
D. LeBlanc. "Writing Secure Code". Chapter 5, "Unicode and ANSI Buffer Size Mismatches" Page
153. 2nd Edition. Microsoft. 2002. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_135_Content History" id="oc_135_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Contributions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Contribution Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Contributor&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-01-11&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Gregory Padgett&lt;/td&gt;&lt;td valign="top"&gt;Unitrends&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Feedback&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;correction to Demonstrative Example&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Relationships, Other Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples,
References&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Improper String Length
Checking&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1870</key><name>R19_05_Using_Define_Or_Undef_Directive_In_Block</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 19-5&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 19-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11058&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
                    Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Macros shall only be #defined or #undefined at file scope.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;
                    &lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                        http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_332</key><name>Use_of_Uninitialized_Variable</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Use of Uninitialized Variable&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;457&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Variant)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_457_Description" id="oc_457_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The code uses a variable that has not been initialized, leading
to unpredictable or unintended results.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;In some languages, such as C, an uninitialized variable contains contents
of previously-used memory. An attacker can sometimes control or read these
contents.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_457_Time of Introduction" id="oc_457_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_457_Applicable Platforms" id="oc_457_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C: &lt;span class="smaller" style="font-style:italic"&gt;(Sometimes)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;C++: &lt;span class="smaller" style="font-style:italic"&gt;(Sometimes)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Perl: &lt;span class="smaller" style="font-style:italic"&gt;(Often)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_457_Common Consequences" id="oc_457_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Availability&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Initial variables usually contain junk, which can not be trusted for
consistency. This can lead to denial of service conditions, or modify
control flow in unexpected ways. In some cases, an attacker can
"pre-initialize" the variable using previous actions, which might enable
code execution. This can cause a race condition if a lock variable check
passes when it should not.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Authorization&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Strings that are not initialized are especially dangerous, since many
functions expect a null at the end -- and only at the end -- of a
string.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_457_Likelihood of Exploit" id="oc_457_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_457_Demonstrative Examples" id="oc_457_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following switch statement is intended to set the values of the
variables aN and bN, but in the default case, the programmer has
accidentally set the value of aN twice. As a result, bN will have an
undefined value.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;switch (ctl) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;case -1:&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;aN = 0;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;bN = 0;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;case 0:&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;aN = i;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;bN = -i;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;case 1:&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;aN = i + NEXT_SZ;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;bN = i - NEXT_SZ;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;default:&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;aN = -1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;aN = -1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;break;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;repaint(aN, bN);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Most uninitialized variable issues result in general software
reliability problems, but if attackers can intentionally trigger the use
of an uninitialized variable, they might be able to launch a denial of
service attack by crashing the program. Under the right circumstances,
an attacker may be able to control the value of an uninitialized
variable by affecting the values on the stack prior to the invocation of
the function.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;&lt;div class="indent "&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example Languages: &lt;/span&gt;C++ and Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int foo;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;void bar() {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;if (foo==0)&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/.../&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/../&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_457_Observed Examples" id="oc_457_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-0081" target="_blank"&gt;CVE-2008-0081&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Uninitialized variable leads to code execution in
popular desktop application.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-4682" target="_blank"&gt;CVE-2007-4682&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Crafted input triggers dereference of an
uninitialized object pointer.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-3468" target="_blank"&gt;CVE-2007-3468&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Crafted audio file triggers crash when an
uninitialized variable is used.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-2728" target="_blank"&gt;CVE-2007-2728&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Uninitialized random seed variable
used.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_457_Potential Mitigations" id="oc_457_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Assign all variables to an initial value.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Build and Compilation&lt;/p&gt;&lt;p&gt;Most compilers will complain about the use of uninitialized variables
if warnings are turned on.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p&gt;The choice could be made to use a language that is not susceptible to
these issues.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;Mitigating technologies such as safe string libraries and container
abstractions could be introduced.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_457_Other Notes" id="oc_457_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Before variables are initialized, they generally contain junk data of what
was left in the memory that the variable takes up. This data is very rarely
useful, and it is generally advised to pre-initialize variables or set them
to their first values early. If one forgets -- in the C language -- to
initialize, for example a char *, many of the simple string libraries may
often return incorrect results as they expect the null termination to be at
the end of a string.&lt;/p&gt;
&lt;p&gt;Stack variables in C and C++ are not initialized by default. Their initial
values are determined by whatever happens to be in their location on the
stack at the time the function is invoked. Programs should never use the
value of an uninitialized variable. It is not uncommon for programmers to
use an uninitialized variable in code that handles errors or other rare and
exceptional circumstances. Uninitialized variable warnings can sometimes
indicate the presence of a typographic error in the code.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_457_Relationships" id="oc_457_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;398&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=398" target="_blank"&gt;Indicator of Poor Code Quality&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;456&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=456" target="_blank"&gt;Missing Initialization&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_457_Taxonomy Mappings" id="oc_457_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Uninitialized variable&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Uninitialized Variable&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_457_White Box Definitions" id="oc_457_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. start statement that defines variable&lt;/p&gt;
&lt;p&gt;2. end statement that accesses the variable&lt;/p&gt;
&lt;p&gt;3. the code path does not contain a statement that assigns value to
the variable&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_457_References" id="oc_457_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;mercy. "Exploiting Uninitialized Data". Jan 2006. &amp;lt;&lt;a href="%0A%09%09%09%09%09%09http://www.felinemenace.org/~mercy/papers/UBehavior/UBehavior.zip" target="_blank"&gt;
http://www.felinemenace.org/~mercy/papers/UBehavior/UBehavior.zip&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Microsoft Security Vulnerability Research &amp;amp;
Defense. "MS08-014 : The Case of the Uninitialized Stack Variable
Vulnerability". 2008-03-11. &amp;lt;&lt;a href="http://blogs.technet.com/swi/archive/2008/03/11/the-case-of-the-uninitialized-stack-variable-vulnerability.aspx" target="_blank"&gt;http://blogs.technet.com/swi/archive/2008/03/11/the-case-of-the-uninitialized-stack-variable-vulnerability.aspx&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_457_Content History" id="oc_457_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Description, Relationships, Observed Example, Other Notes, References,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-01-12&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Demonstrative Examples,
Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Uninitialized
Variable&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1879</key><name>R20_09_Using_Input_Output_From_Stdio_H</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 20-9&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 20-9&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11067&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Use of the input and output library &amp;lt;stdio.h&amp;gt; is not allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_206</key><name>Declaration_Of_Catch_For_Generic_Exception</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Declaration of Catch for Generic Exception&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;396&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_396_Description" id="oc_396_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;Catching overly broad exceptions promotes complex error
handling code that is more likely to contain security
vulnerabilities.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Multiple catch blocks can get ugly and repetitive, but "condensing" catch
blocks by catching a high-level class like Exception can obscure exceptions
that deserve special treatment or that should not be caught at this point in
the program. Catching an overly broad exception essentially defeats the
purpose of Java's typed exceptions, and can become particularly dangerous if
the program grows and begins to throw new types of exceptions. The new
exception types will not receive any attention.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_396_Time of Introduction" id="oc_396_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_396_Applicable Platforms" id="oc_396_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;p&gt;Java&lt;/p&gt;
&lt;p&gt;.NET&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_396_Demonstrative Examples" id="oc_396_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code excerpt handles three types of exceptions in an
identical fashion.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;try {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;doExchange();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;catch (IOException e) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;logger.error("doExchange failed", e);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;catch (InvocationTargetException e) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;logger.error("doExchange failed", e);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;catch (SQLException e) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;logger.error("doExchange failed", e);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;At first blush, it may seem preferable to deal with these exceptions
in a single catch block, as follows:&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;try {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;doExchange();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;catch (Exception e) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;logger.error("doExchange failed", e);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, if doExchange() is modified to throw a new type of exception
that should be handled in some different kind of way, the broad catch
block will prevent the compiler from pointing out the situation.
Further, the new catch block will now also handle exceptions derived
from RuntimeException such as ClassCastException, and
NullPointerException, which is not the programmer's intent.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_396_Relationships" id="oc_396_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;221&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=221" target="_blank"&gt;Information Loss or Omission&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;388&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=388" target="_blank"&gt;Error Handling&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;389&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=389" target="_blank"&gt;Error Conditions, Return Values, Status Codes&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;705&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=705" target="_blank"&gt;Incorrect Control Flow Scoping&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;755&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=755" target="_blank"&gt;Improper Handling of Exceptional Conditions&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_396_Taxonomy Mappings" id="oc_396_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Overly-Broad Catch Block&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_396_Content History" id="oc_396_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Relationships, Other Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Removed C from Applicable Platforms&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-10-14&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description, Other Notes&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Overly-Broad Catch
Block&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1847</key><name>R14_05_Use_Of_Continue</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 14-5&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 14-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11035&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Use of the &amp;#39;continue&amp;#39; statement is not allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1825</key><name>R06_02_Not_Plain_Char_Type_Usage</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11013&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
                    Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Char types with the signed/unsigned modifiers shall only be used with numeric
                  values.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;
                    &lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                        http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                                            C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1824</key><name>R06_01_Plain_Char_Type_Usage</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 6-1&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11012&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Char types without the signed/unsigned modifiers shall only be used with
            character values.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1848</key><name>R14_06_Multiple_Breaks_In_Iteration_Statement</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 14-6&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 14-6&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
        Weakness ID: 11036&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            No Iteration statment shall contain more than a single break statement for loop
            termination.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_312</key><name>Sizeof_Pointer_Argument</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Use of sizeof() on a Pointer Type&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;467&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Variant)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_467_Description" id="oc_467_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The code calls sizeof() on a malloced pointer type, which
always returns the wordsize/8. This can produce an unexpected result if the
programmer intended to determine how much memory has been
allocated.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_467_Time of Introduction" id="oc_467_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_467_Applicable Platforms" id="oc_467_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C&lt;/p&gt;
&lt;p&gt;C++&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_467_Common Consequences" id="oc_467_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;This error can often cause one to allocate a buffer that is much
smaller than what is needed, leading to resultant weaknesses such as
buffer overflows.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_467_Likelihood of Exploit" id="oc_467_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_467_Demonstrative Examples" id="oc_467_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;Care should be taken to ensure sizeof returns the size of the data
structure itself, and not the size of the pointer to the data
structure.&lt;/p&gt;&lt;p&gt;In this example, sizeof(foo) returns the size of the pointer.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example Languages: &lt;/span&gt;C and C++&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;double *foo;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;foo = (double *)malloc(sizeof(foo));&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;In this example, sizeof(*foo) returns the size of the data structure
and not the size of the pointer.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example Languages: &lt;/span&gt;C and C++&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;double *foo;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;foo = (double *)malloc(sizeof(*foo));&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;This example defines a fixed username and password. The
AuthenticateUser() function is intended to accept a username and a password
from an untrusted user, and check to ensure that it matches the username and
password. If the username and password match, AuthenticateUser() is intended
to indicate that authentication succeeded.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;/* Ignore CWE-259 (hard-coded password) and CWE-309 (use of
password system for authentication) for this example. */&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char *username = "admin";&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char *pass = "password";&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int AuthenticateUser(char *inUser, char *inPass) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;printf("Sizeof username = %d\n", sizeof(username));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("Sizeof pass = %d\n", sizeof(pass));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (strncmp(username, inUser, sizeof(username))) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;printf("Auth failure of username using sizeof\n");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return(AUTH_FAIL);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;/* Because of CWE-467, the sizeof returns 4 on many platforms
and architectures. */&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (! strncmp(pass, inPass, sizeof(pass))) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;printf("Auth success of password using sizeof\n");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return(AUTH_SUCCESS);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;else {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;printf("Auth fail of password using sizeof\n");&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return(AUTH_FAIL);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int main (int argc, char **argv)&lt;/div&gt;&lt;div style="font-size:90%;"&gt;{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;int authResult;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt; if (argc &amp;lt; 3) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ExitError("Usage: Provide a username and
password");&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;authResult = AuthenticateUser(argv[1], argv[2]);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (authResult != AUTH_SUCCESS) {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ExitError("Authentication failed");&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;else {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;DoAuthenticatedTask(argv[1]);&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;In AuthenticateUser(), because sizeof() is applied to a parameter with
an array type, the sizeof() call might return 4 on many modern
architectures. As a result, the strncmp() call only checks the first
four characters of the input password, resulting in a partial comparison
(CWE-187), leading to improper authentication (CWE-287).&lt;/p&gt;&lt;p&gt;Because of the partial comparison, any of these passwords would still
cause authentication to succeed for the "admin" user:&lt;/p&gt;&lt;div class="indent Attack"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Attack)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;pass5&lt;/div&gt;&lt;div style="font-size:90%;"&gt;passABCDEFGH&lt;/div&gt;&lt;div style="font-size:90%;"&gt;passWORD&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Because only 4 characters are checked, this significantly reduces the
search space for an attacker, making brute force attacks more
feasible.&lt;/p&gt;&lt;p&gt;The same problem also applies to the username, so values such as
"adminXYZ" and "administrator" will succeed for the username.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_467_Potential Mitigations" id="oc_467_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Use expressions such as "sizeof(*pointer)" instead of
"sizeof(pointer)", unless you intend to run sizeof() on a pointer type
to gain some platform independence or if you are allocating a variable
on the stack.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_467_Other Notes" id="oc_467_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;The use of sizeof() on a pointer can sometimes generate useful
information. An obvious case is to find out the wordsize on a platform. More
often than not, the appearance of sizeof(pointer) indicates a bug.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_467_Weakness Ordinalities" id="oc_467_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Primary&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness exists independent of other weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_467_Relationships" id="oc_467_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;465&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=465" target="_blank"&gt;Pointer Issues&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;682&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=682" target="_blank"&gt;Incorrect Calculation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;737&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=737" target="_blank"&gt;CERT C Secure Coding Section 03 - Expressions (EXP)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;740&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=740" target="_blank"&gt;CERT C Secure Coding Section 06 - Arrays (ARR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard&lt;/span&gt;734&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;131&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=131" target="_blank"&gt;Incorrect Calculation of Buffer Size&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_467_Taxonomy Mappings" id="oc_467_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Use of sizeof() on a pointer type&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;ARR01-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Do not apply the sizeof operator to a pointer when taking the
size of an array&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;EXP01-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Do not take the size of a pointer to determine the size of the
pointed-to type&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_467_White Box Definitions" id="oc_467_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. end statement that passes an identity of a dynamically allocated
memory resource to a sizeof operator&lt;/p&gt;
&lt;p&gt;2. start statement that allocates the dynamically allocated memory
resource&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_467_References" id="oc_467_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Robert Seacord. "EXP01-A. Do not take the sizeof a pointer to determine the size
of a type". &amp;lt;&lt;a href="https://www.securecoding.cert.org/confluence/display/seccode/EXP01-A.+Do+not+take+the+sizeof+a+pointer+to+determine+the+size+of+a+type" target="_blank"&gt;https://www.securecoding.cert.org/confluence/display/seccode/EXP01-A.+Do+not+take+the+sizeof+a+pointer+to+determine+the+size+of+a+type&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_467_Content History" id="oc_467_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Relationships, Other Notes, Taxonomy Mappings,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1862</key><name>R16_06_Function_Invoke_Arg_Number_Not_Match_Function_Def_Number</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 16-6&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-6&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11050&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Every call to a function shall match the declaration and definition in numbers
            of arguments passed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1564</key><name>Inadequate_Pointer_Validation</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Weaknesses that Affect Memory&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Category ID: &lt;/b&gt;633&lt;span style="font-style:italic; font-size:80%"&gt; (Category)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_633_Description" id="oc_633_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;Weaknesses in this category affect memory
resources.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_633_Relationships" id="oc_633_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;

&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;14&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=14" target="_blank"&gt;Compiler Removal of Code to Clear Buffers&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;120&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=120" target="_blank"&gt;Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;122&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=122" target="_blank"&gt;Heap-based Buffer Overflow&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;129&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=129" target="_blank"&gt;Improper Validation of Array Index&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;134&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=134" target="_blank"&gt;Uncontrolled Format String&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;226&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=226" target="_blank"&gt;Sensitive Information Uncleared Before Release&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;244&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=244" target="_blank"&gt;Failure to Clear Heap Memory Before Release ('Heap Inspection')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;251&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=251" target="_blank"&gt;Often Misused: String Management&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;316&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=316" target="_blank"&gt;Plaintext Storage in Memory&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;401&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=401" target="_blank"&gt;Failure to Release Memory Before Removing Last Reference ('Memory Leak')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;415&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=415" target="_blank"&gt;Double Free&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;416&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=416" target="_blank"&gt;Use After Free&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;591&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=591" target="_blank"&gt;Sensitive Data Storage in Improperly Locked Memory&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;763&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=763" target="_blank"&gt;Release of Invalid Pointer or Reference&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;785&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=785" target="_blank"&gt;Use of Path Manipulation Function without Maximum-sized Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses&lt;/span&gt;631&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;631&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=631" target="_blank"&gt;Resource-specific Weaknesses&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_633_Content History" id="oc_633_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2083</key><name>Empty_Methods</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Indicator of Poor Code Quality&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;398&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Class)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_398_Description" id="oc_398_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The code has features that do not directly introduce a weakness
or vulnerability, but indicate that the product has not been carefully developed
or maintained.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;Programs are more likely to be secure when good development practices are
followed. If a program is complex, difficult to maintain, not portable, or
shows evidence of neglect, then there is a higher likelihood that weaknesses
are buried in the code.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_398_Time of Introduction" id="oc_398_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_398_Relationships" id="oc_398_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;18&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=18" target="_blank"&gt;Source Code&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;710&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=710" target="_blank"&gt;Coding Standards Violation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;107&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=107" target="_blank"&gt;Struts: Unused Validation Form&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;110&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=110" target="_blank"&gt;Struts: Validator Without Form Field&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;399&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=399" target="_blank"&gt;Resource Management Errors&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;401&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=401" target="_blank"&gt;Failure to Release Memory Before Removing Last Reference ('Memory Leak')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;404&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=404" target="_blank"&gt;Improper Resource Shutdown or Release&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts&lt;/span&gt;699&lt;/span&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;415&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=415" target="_blank"&gt;Double Free&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;416&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=416" target="_blank"&gt;Use After Free&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;457&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=457" target="_blank"&gt;Use of Uninitialized Variable&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;474&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=474" target="_blank"&gt;Use of Function with Inconsistent Implementations&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;475&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=475" target="_blank"&gt;Undefined Behavior for Input to API&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;476&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=476" target="_blank"&gt;NULL Pointer Dereference&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;477&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=477" target="_blank"&gt;Use of Obsolete Functions&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;478&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=478" target="_blank"&gt;Missing Default Case in Switch Statement&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;479&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=479" target="_blank"&gt;Unsafe Function Call from a Signal Handler&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;483&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=483" target="_blank"&gt;Incorrect Block Delimitation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;484&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=484" target="_blank"&gt;Omitted Break Statement in Switch&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;546&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=546" target="_blank"&gt;Suspicious Comment&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;547&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=547" target="_blank"&gt;Use of Hard-coded, Security-relevant Constants&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;561&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=561" target="_blank"&gt;Dead Code&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;562&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=562" target="_blank"&gt;Return of Stack Variable Address&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;563&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=563" target="_blank"&gt;Unused Variable&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;569&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=569" target="_blank"&gt;Expression Issues&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;585&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=585" target="_blank"&gt;Empty Synchronized Block&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;586&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=586" target="_blank"&gt;Explicit Call to Finalize()&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;617&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=617" target="_blank"&gt;Reachable Assertion&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;676&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=676" target="_blank"&gt;Use of Potentially Dangerous Function&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;700&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=700" target="_blank"&gt;Seven Pernicious Kingdoms&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_398_Taxonomy Mappings" id="oc_398_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Code Quality&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_398_Content History" id="oc_398_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description, Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Code
Quality&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1823</key><name>R05_07_Identifier_Name_Reused</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;title&gt;MISRA RULE 5-7&lt;/title&gt;
  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-7&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          11011&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
            Any and all identifier names should be unique&lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1393</key><name>Buffer_Overflow_Loops_Old</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Off-by-one Error&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;193&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_193_Description" id="oc_193_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;A product calculates or uses an incorrect maximum or minimum
value that is 1 more, or 1 less, than the correct value.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Alternate Terms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Alternate Terms&lt;/div&gt;&lt;div name="oc_193_Alternate Terms" id="oc_193_Alternate Terms" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;off-by-five:&lt;/th&gt;&lt;td valign="top" width="100%"&gt;

&lt;p&gt;An "off-by-five" error was reported for sudo in 2002 (CVE-2002-0184),
but that is more like a "length calculation" error.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_193_Time of Introduction" id="oc_193_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_193_Applicable Platforms" id="oc_193_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_193_Demonstrative Examples" id="oc_193_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following code allocates memory for a maximum number of widgets.
It then gets a user-specified number of widgets, making sure that the user
does not request too many. It then initializes the elements of the array
using InitializeWidget(). Because the number of widgets can vary for each
request, the code inserts a NULL pointer to signify the location of the last
widget.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int i;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;unsigned int numWidgets;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Widget **WidgetList;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;numWidgets = GetUntrustedSizeValue();&lt;/div&gt;&lt;div style="font-size:90%;"&gt;if ((numWidgets == 0) || (numWidgets &amp;gt; MAX_NUM_WIDGETS))
{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;ExitError("Incorrect number of widgets requested!");&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;WidgetList = (Widget **)malloc(numWidgets * sizeof(Widget
*));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;printf("WidgetList ptr=%p\n", WidgetList);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;numWidgets; i++) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;WidgetList[i] = InitializeWidget();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;WidgetList[numWidgets] = NULL;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;showWidgets(WidgetList);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, this code contains an off-by-one calculation error. It
allocates exactly enough space to contain the specified number of
widgets, but it does not include the space for the NULL pointer. As a
result, the allocated buffer is smaller than it is supposed to be
(CWE-131). So if the user ever requests MAX_NUM_WIDGETS, there is an
off-by-one buffer overflow when the NULL is assigned. Depending on the
environment and compilation settings, this could cause memory
corruption.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following C/C++ example demonstrates the Off-by-one error in the
main method of a pattern matching utility that looks for a specific pattern
within a specific file. The main method uses the string copy method,
strncpy, to copy the command line user input file name and pattern to the
Filename and Pattern character arrays respectively. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int main(int argc, char **argv)&lt;/div&gt;&lt;div style="font-size:90%;"&gt;{&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char Filename[256];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char Pattern[32];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* Validate number of parameters and ensure valid content
*/&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy filename parameter to variable, may cause
off-by-one overflow */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(Filename, argv[1], sizeof(Filename));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy pattern parameter to variable, may cause off-by-one
overflow */&lt;/i&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(Pattern, argv[2], sizeof(Pattern));&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf("Searching file: %s for the pattern: %s\n", Filename,
Pattern);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;Scan_File(Filename, Pattern);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, the calls to strncpy use the sizeof method call for the size
parameter that does not take into account that the strncpy will add a
null terminator to each character array. Therefore if a user enters a
filename or pattern that are the same size as (or larger than) their
respective character arrays a null terminator will be added beyond the
end of the buffer for the character arrays creating an off-by-one buffer
overflow. In addition to creating a buffer overflow that may cause a
memory address to be overwritten, if the character arrays are output to
the user through the printf method the memory addresses at the overflow
location may be output to the user.&lt;/p&gt;&lt;p&gt;To fix this problem, be sure to subtract 1 from the sizeof() call to
allow room for the null byte to be added.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy filename parameter to variable, no off-by-one overflow
*/&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncpy(Filename, argv[2], sizeof(Filename)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;i&gt;/* copy pattern parameter to variable, no off-by-one overflow
*/&lt;/i&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncpy(Pattern, argv[3], sizeof(Pattern)-1);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;Similarly, this example uses the strncat and snprintf functions
incorrectly, failing to account for the null character function will
add.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char lastname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char firstname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char name[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char fullname[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, firstname, sizeof(name));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, lastname, sizeof(name));&lt;/div&gt;&lt;div style="font-size:90%;"&gt;snprintf(fullname, sizeof(fullname), "%s", name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;By leaving a free byte at the end of the buffers for a null character
to be added, the off-by-one weakness is avoided.&lt;/p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;char lastname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char firstname[20];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char name[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char fullname[40];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, firstname, sizeof(name)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;strncat(name, lastname, sizeof(name)-1);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;snprintf(fullname, sizeof(fullname)-1), "%s", name);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 4&lt;/p&gt;&lt;p&gt;The Off-by-one error can also be manifested when reading characters
of a character array using a for loop that has the incorrect size as a
continuation condition and attempts to read beyond the end of the buffer for
the character array as shown in the following example. &lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#define PATH_SIZE 60&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;char filename[PATH_SIZE];&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;=PATH_SIZE; i++) {&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char c = getc();&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;if (c == 'EOF') {&lt;/div&gt;
&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;filename[i] = '\0';&lt;/div&gt;
&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;filename[i] = getc();&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;&lt;div class="indent Good_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Good Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;for(i=0; i&amp;lt;PATH_SIZE; i++) {&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 5&lt;/p&gt;&lt;p&gt;As another example the Off-by-one error can occur when using the
sprintf library function to copy a string variable to a formatted string
variable and the original string variable comes from an untrusted source. As
in the following example where a local function, setFilename is used to
store the value of a filename to a database but first uses sprintf to format
the filename. The setFilename function includes an input parameter with the
name of the file that is used as the copy source in the sprintf function.
The sprintf function will copy the file name to a char array of size 20 and
specifies the format of the new variable as 16 characters followed by the
file extension .dat.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int setFilename(char *filename) { &lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char name[20]; &lt;/div&gt;
&lt;div style="font-size:90%;"&gt;sprintf(name, "%16s.dat", filename);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;int success = saveFormattedFilenameToDB(name);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt; return success; &lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;} &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However this will cause an Off-by-one error if the original filename
is exactly 16 characters or larger because the format of 16 characters
with the file extension is exactly 20 characters and does not take into
account the required null terminator that will be placed at the end of
the string.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_193_Observed Examples" id="oc_193_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0252" target="_blank"&gt;CVE-2003-0252&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1391" target="_blank"&gt;CVE-2001-1391&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0083" target="_blank"&gt;CVE-2002-0083&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0653" target="_blank"&gt;CVE-2002-0653&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0844" target="_blank"&gt;CVE-2002-0844&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-1999-1568" target="_blank"&gt;CVE-1999-1568&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0346" target="_blank"&gt;CVE-2004-0346&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0005" target="_blank"&gt;CVE-2004-0005&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0356" target="_blank"&gt;CVE-2003-0356&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-1496" target="_blank"&gt;CVE-2001-1496&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2004-0342" target="_blank"&gt;CVE-2004-0342&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;This is an interesting example that might not be
an off-by-one.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0609" target="_blank"&gt;CVE-2001-0609&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;An off-by-one enables a terminating null to be
overwritten, which causes 2 strings to be merged and enable a format
string.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1745" target="_blank"&gt;CVE-2002-1745&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error allows source code disclosure of
files with 4 letter extensions that match an accepted 3-letter
extension.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1816" target="_blank"&gt;CVE-2002-1816&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one buffer
overflow.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1721" target="_blank"&gt;CVE-2002-1721&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error causes an snprintf call to
overwrite a critical internal variable with a null
value.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0466" target="_blank"&gt;CVE-2003-0466&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error in function used in many products
leads to a buffer overflow during pathname management, as demonstrated using
multiple commands in an FTP server.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2003-0625" target="_blank"&gt;CVE-2003-0625&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one error allows read of sensitive memory
via a malformed request.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2006-4574" target="_blank"&gt;CVE-2006-4574&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: security monitoring product has an
off-by-one error that leads to unexpected length values, triggering an
assertion.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_193_Potential Mitigations" id="oc_193_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt; When copying character arrays or using character manipulation
methods, the correct size parameter must be used to account for the null
terminator that needs to be added at the end of the array. Some examples
of functions susceptible to this weakness in C include strcpy(),
strncpy(), strcat(), strncat(), printf(), sprintf(), scanf() and
sscanf(). &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_193_Relationships" id="oc_193_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;682&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=682" target="_blank"&gt;Incorrect Calculation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;741&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=741" target="_blank"&gt;CERT C Secure Coding Section 07 - Characters and Strings (STR)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;119&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=119" target="_blank"&gt;Failure to Constrain Operations within the Bounds of a Memory Buffer&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;170&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=170" target="_blank"&gt;Improper Null Termination&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanPrecede&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;617&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=617" target="_blank"&gt;Reachable Assertion&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;

&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationship Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationship Notes&lt;/div&gt;&lt;div name="oc_193_Relationship Notes" id="oc_193_Relationship Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;This is not always a buffer overflow. For example, an off-by-one error
could be a factor in a partial comparison, a read from the wrong memory
location, an incorrect conditional, etc.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Research Gaps"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Research Gaps&lt;/div&gt;&lt;div name="oc_193_Research Gaps" id="oc_193_Research Gaps" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Under-studied. It requires careful code analysis or black box testing,
where inputs of excessive length might not cause an error. Off-by-ones are
likely triggered by extensive fuzzing, with the attendant diagnostic
problems.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_193_Taxonomy Mappings" id="oc_193_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Off-by-one Error&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;STR31-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Guarantee that storage for strings has sufficient space for
character data and the null terminator&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_193_References" id="oc_193_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Halvar Flake. "Third Generation Exploits". presentation at Black Hat Europe
2001. &amp;lt;&lt;a href="http://www.blackhat.com/presentations/bh-europe-01/halvar-flake/bh-europe-01-halvarflake.ppt" target="_blank"&gt;http://www.blackhat.com/presentations/bh-europe-01/halvar-flake/bh-europe-01-halvarflake.ppt&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Steve Christey. "Off-by-one errors: a brief explanation". Secprog and SC-L mailing list
posts. 2004-05-05. &amp;lt;&lt;a href="http://marc.theaimsgroup.com/?l=secprog&amp;amp;m=108379742110553&amp;amp;w=2" target="_blank"&gt;http://marc.theaimsgroup.com/?l=secprog&amp;amp;m=108379742110553&amp;amp;w=2&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;klog. "The Frame Pointer Overwrite". Phrack Issue 55, Chapter 8. 1999-09-09. &amp;lt;&lt;a href="http://kaizo.org/mirrors/phrack/phrack55/P55-08" target="_blank"&gt;http://kaizo.org/mirrors/phrack/phrack55/P55-08&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;G. Hoglund and
G. McGraw. "Exploiting Software: How to Break Code (The buffer overflow
chapter)". Addison-Wesley. February 2004. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_193_Content History" id="oc_193_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Alternate Terms, Common Consequences,
Relationships, Observed Example, Relationship Notes,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-12-28&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples,
Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_249</key><name>Find_Methods_With_Return_Value</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_337</key><name>Stored_Buffer_Overflow_cpycat</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_339</key><name>Stored_Buffer_Overflow_fscanf</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_338</key><name>Stored_Buffer_Overflow_fgets</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_336</key><name>Stored_Buffer_Overflow_boundcpy</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer overflow attacks, in their various forms, could allow an attacker to control certain areas of memory. Typically, this is used to overwrite data on the stack necessary for the program to function properly, such as code and memory&amp;#160;addresses, though other forms of this attack exist. Exploiting this vulnerability can generally lead to system crashes, infinite loops, or even execution of arbitrary code.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Buffer Overflows can manifest in numerous different variations. In it's most basic form, the attack controls a buffer, which is then copied to a smaller buffer without size verification. Because the attacker's source buffer is larger than the program's target buffer, the attacker's data overwrites whatever is next on the stack, allowing the attacker to control program structures.&lt;/div&gt;
&lt;div&gt;Alternatively, the vulnerability could be the result of improper bounds checking; exposing internal memory addresses outside of their valid scope; allowing the attacker to control the size of the target buffer; or various other forms.&amp;#160;&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Always perform proper bounds checking before copying buffers or strings.&amp;#160;&lt;/li&gt;
&lt;li&gt;Prefer to use safer functions and structures, e.g. safe string classes over &lt;code&gt;char*&lt;/code&gt;, &lt;code&gt;strncpy&lt;/code&gt; over &lt;code&gt;strcpy&lt;/code&gt;, and so on.&amp;#160;&lt;/li&gt;
&lt;li&gt;Consistently apply tests for the size of buffers.&amp;#160;&lt;/li&gt;
&lt;li&gt;Do not return variable&amp;#160;addresses outside the scope of their variables.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Overflowing Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    strcpy(buffer, inputString);
}
&lt;/pre&gt;&lt;h4&gt;Checked Buffers&lt;/h4&gt;&lt;pre&gt;const int BUFFER_SIZE = 10;
const int MAX_INPUT_SIZE = 256;
char buffer[BUFFER_SIZE];

void copyStringToBuffer(char* inputString)
{
    if (strnlen(inputString, MAX_INPUT_SIZE) &lt; sizeof(buffer))
    {
        strncpy(buffer, inputString, sizeof(buffer));
    }
}
&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_349</key><name>Stored_Process_Control</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Change the command that the program executes or change the environment in which the command executes.&amp;#160;&lt;/li&gt;
&lt;li&gt;Execute code contained in the native libraries, which often contain calls that are susceptible to other security problems, such as buffer overflows or command injection.&lt;/li&gt;
&lt;li&gt;Affect program parameters, which are part of execution environment, and/or affect the execution flow&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Please note that if the application runs with elevated privileges, the content of the attacker's library will now be run with elevated privileges, possibly giving them complete control of the system.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Process control vulnerabilities occur when data enters the application from an untrusted source and is later used as, or as part of, a string representing a command that is executed in the application, using the Load-Library method. By controlling the name or path of the loaded library, an attacker&amp;#160;can load and execute a malicious library instead of the intended one. This may lead to executing malicious commands (and payloads) on behalf of an attacker.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Libraries that are loaded should come from a trusted source.&amp;#160;If the library does not come from a trusted source, review its&amp;#160;source code.&lt;/li&gt;
&lt;li&gt;All native libraries should be validated to determine if the application requires the use of the library.&lt;/li&gt;
&lt;li&gt;Run the application with the least-privilege principle in order to reduce the impact in case of a successful attack.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;div&gt;&lt;strong&gt;Secure-Code Approach&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Sanitize all inputs which influence the library calls in order to avoid malicious content.&lt;/li&gt;
&lt;li&gt;Use absolute path when calling the&amp;#160;library in order to avoid calls to unwanted libraries.&lt;/li&gt;
&lt;li&gt;Validate all inputs&amp;#160;to native calls in order to avoid buffer overflows.&lt;/li&gt;
&lt;li&gt;Use System.load, instead of System.loadLibrary, which is more secured.&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;Using the application configuration property to load a native library, allowing an attacker to load a library or an executable and potentially execute arbitrary code:&lt;/h4&gt;&lt;pre&gt;string lib = ConfigurationManager.AppSettings["APPHOME"];
Environment.ExitCode = AppDomain.CurrentDomain.ExecuteAssembly(lib);&lt;/pre&gt;&lt;h4&gt;Validating the configuration property before loading a native library:&lt;/h4&gt;&lt;pre&gt;string lib = ConfigurationManager.AppSettings["APPHOME"];
if ( isValidHomePath(lib) )
{
    Environment.ExitCode = AppDomain.CurrentDomain.ExecuteAssembly(lib);
} 
else
{ 
    Console.WriteLine("Action denied.");
}&lt;/pre&gt;&lt;h3&gt;CPP&lt;/h3&gt;&lt;h4&gt;Using an invalidated registry entry to determine the directory in which it is installed and loads a library file, allowing an attacker to load an arbitrary library:&lt;/h4&gt;&lt;pre&gt;RegQueryValueEx(hkey, "APPHOME", 0, 0, (BYTE*)home, &amp;size);
char* lib=(char*)malloc(strlen(home)+strlen(INITLIB));
if (lib) {
    strcpy(lib,home);
    strcat(lib,INITCMD);
    LoadLibrary(lib);
}&lt;/pre&gt;&lt;h4&gt;Loading the library from its absolute path:&lt;/h4&gt;&lt;pre&gt;std::string apphome = 
"HKEY_LOCAL_MACHINE\\SOFTWARE\MICROSOFT\\WINDOWS NT\\CurrentVersion\\ProfileList\\Default\\";
RegQueryValueEx(hkey, apphone, 0, 0, (BYTE*)home, &amp;size);
char* lib=(char*)malloc(strlen(home)+strlen(INITLIB));
if (lib) {
    strcpy(lib,home);
    strcat(lib,INITCMD);
    LoadLibrary(lib);
}&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Loading a library from the default Java library path, without validating it:&lt;/h4&gt;&lt;pre&gt;System.loadLibrary("crypto.so");&lt;/pre&gt;&lt;h4&gt;Using an invalidated system property to determine the directory in which it is installed and loads a library file, allowing an attacker to load an arbitrary library:&lt;/h4&gt;&lt;pre&gt;String property = System.getProperty("java.library.path");
System.loadLibrary(property);&lt;/pre&gt;&lt;h4&gt;Loading the library from its absolute path using System.load:&lt;/h4&gt;&lt;pre&gt;String path = "/path/to/lib/";
String lib = "crypto.so";
System.load(path + lib);&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_342</key><name>Stored_DB_Parameter_Tampering</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;A malicious user could access other users&amp;#8217; personal information, by simply altering the reference parameter sent to the server. Thus, the malicious user could bypass access controls and access unauthorized records, such as other users accounts,&amp;#160;stealing confidential or restricted information.&amp;#160;&lt;/div&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;The application accesses&amp;#160;user information without filtering by user ID. For example, it may provide information solely by a submitted account ID. The application uses the user input to filter specific records from database tables, which contain sensitive personal information (e.g. user accounts or payment details). Since the application does not filter the records according to any user identifier, nor&amp;#160;constrain it to a pre-computed list of acceptable values, a malicious user can easily modify the submitted reference identifier, and thus access unauthorized records.&amp;#160;&lt;/div&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&amp;#160;&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Enforce authorization checks before providing any access to sensitive data, including the specific object reference.&amp;#160;&lt;/li&gt;
&lt;li&gt;Explicitly block access to any unauthorized data, especially to other users&amp;#8217; data.&lt;/li&gt;
&lt;li&gt;If possible, avoid allowing the user to request arbitrary data by simply sending a record ID. For example, instead of having the user send an account ID, the application should look up the account ID for the current authenticated user session.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Mitigation:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Filter the database query according to&amp;#160;a user-specific identifier, such as the customer number.&amp;#160;&lt;/li&gt;
&lt;li&gt;Map the user input to an indirect reference, e.g. via a prepared list of allowable values.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Unfiltered Direct Object Reference&lt;/h4&gt;&lt;pre&gt;public ResultSet getAccountInfo(request req){
    int accountId = Integer.parseInt(req.getParameter("accountId"));    
    PreparedStatement stmt = connection.PreparedStatement("SELECT * from Accounts where AccountId = ?");
    
    stmt.setInt(1, accountId);   
    ResultSet accountRS = stmt.executeQuery();                 
    
    return accountRS;
}&lt;/pre&gt;&lt;h4&gt;Record References are Now Filtered and Indirect&lt;/h4&gt;&lt;pre&gt;    public ResultSet getAccountInfo(request req){
    int accountIndex = Integer.parseInt(req.getParameter("accountId"));
    int realAccountId = userAccountList.get(accountIndex);
    int userId = req.getSession().getAttribute("userId"); 
    PreparedStatement stmt = connection.PreparedStatement("SELECT * from Accounts where AccountId = ? AND UserId = ?");
    
    stmt.setInt(1, realAccountId);   
    stmt.setInt(2, userId);
    ResultSet accountRS = stmt.executeQuery();                 
    
    return accountRS;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_348</key><name>Stored_Parameter_Tampering</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;A malicious user could access other users&amp;#8217; information. By requesting information directly, such as by an account number, authorization may be bypassed and the attacker could steal confidential or restricted information (for example, a bank account balance), using a direct object reference.&amp;#160;&lt;/div&gt;
&lt;/div&gt;            
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;
&lt;div&gt;The application provides user information without filtering by user ID. For example, it may provide information solely by a submitted account ID. The application concatenates the user input directly into the SQL query string, without any additional filtering. The application also does not perform any validation on the input, nor constrain it to a pre-computed list of acceptable values.&amp;#160;&lt;/div&gt;
&lt;/div&gt;            
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;div&gt;Generic Guidance:&amp;#160;&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Enforce authorization checks before providing any access to sensitive data, including the specific object reference.&amp;#160;&lt;/li&gt;
&lt;li&gt;Explicitly block access to any unauthorized data, especially to other users&amp;#8217; data.&lt;/li&gt;
&lt;li&gt;If possible, avoid allowing the user to request arbitrary data by simply sending a record ID. For example, instead of having the user send an account ID, the application should look up the account ID for the current authenticated user session.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;Specific Mitigation:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Do not concatenate user input directly into SQL queries.&amp;#160;&lt;/li&gt;
&lt;li&gt;Include a user-specific identifier as a filter in the WHERE clause of the SQL query.&amp;#160;&lt;/li&gt;
&lt;li&gt;Map the user input to an indirect reference, e.g. via a prepared list of allowable values.&amp;#160;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;            
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Unfiltered Direct Object Reference&lt;/h4&gt;&lt;pre&gt;public ResultSet getAccountInfo(request req)  {
    int accountId = Integer.parseInt(req.getParameter("accountId"));
    
    string sql = "select * from [Accounts] where [AccountId] = " 
                        + accountId.toString();
                        
    Statement stmt = conn.createStatement();
    ResultSet accountRS = stmt.executeQuery(sql); 
    
    return accountRS;
}&lt;/pre&gt;&lt;h4&gt;Record References are Now Filtered and Indirect&lt;/h4&gt;&lt;pre&gt;public ResultSet getAccountInfo(request req)  {
    int accountIndex = Integer.parseInt(req.getParameter("accountIndex"));
    int realAccountId = userAccountList.get(accountIndex);
    
    int userId = req.getSession().getAttribute("userId"); 
    
    string sql = "select * from [Accounts] where [AccountId] = " 
                        + realAccountId.toString() 
                        + " and [UserId] = " + userId.toString();
                        
    Statement stmt = conn.createStatement();
    ResultSet accountRS = stmt.executeQuery(sql); 
    
    return accountRS;
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4517</key><name>Find_Inputs_Sockets_Sanitize</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2237</key><name>R05_00_10_Bitwise_Operator_On_Unsigned_Char_Short_Types</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 5-0-10&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-0-10&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11113&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Bitwise operators which are applied on unsigned type operand, should be casted
                  directly to the type of the operand.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2240</key><name>R05_00_21_Bitwise_Operator_On_Signed_Type</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 5-0-21&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-0-21&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11116&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Objects with an underlying signed type shall not be passed as operands to
                  bitwise operators.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4057</key><name>Find_Right_Assignment</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2245</key><name>R06_03_01_Not_Compound_Switch_Or_Iteration_Statement</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-3-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-3-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11122&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Every &amp;#39;switch&amp;#39; or iteration statement shall have a compound { ... } body.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_231</key><name>Find_Char_Pointers</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_242</key><name>Find_Integers</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4419</key><name>Find_ESQL_Integers</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4023</key><name>Find_LDAP_Outputs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4029</key><name>Find_Decrypt</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4028</key><name>Find_DB_Connection_Passwords</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2276</key><name>Find_Use_Of_Uninitialized_Var</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1948</key><name>R16_00_08_Sharp_Before_Preprocessing_Token</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 16-0-8&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-0-8&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10773&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  If the # token is the first element in a line, a preprocessing directive must
                  directly follow this token.&lt;br&gt;
                  &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2246</key><name>R06_04_01_Not_Compound_If_Or_Else</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-4-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-4-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11123&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Every &amp;#39;if&amp;#39; statement shall have a compound { ... } body. Every &amp;#39;else statement
                  shall have a compound body or an &amp;#39;if&amp;#39; statement as its body.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3091</key><name>Find_Conditions</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4123</key><name>Find_Aliases</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_233</key><name>Find_DB</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4141</key><name>Find_All_References_After_In_Method</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2767</key><name>Find_All_Passwords</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4421</key><name>Find_ESQL_Char</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4024</key><name>Find_LDAP_Sanitize</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2352</key><name>Find_Log_Outputs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_246</key><name>Find_Memory_Allocation</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4420</key><name>Find_ESQL_DB</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_252</key><name>Find_Outputs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4056</key><name>Find_Outputs_Right_Side</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_255</key><name>Find_Personal_Info</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_261</key><name>Find_Unbounded_Inputs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3883</key><name>Find_Weak_Encryption</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_4027</key><name>Find_Unprotected_Socket_Usage</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1912</key><name>R10_03_02_Find_Override_Without_Virtual</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 10-3-2&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 10-3-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10796&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          A virtual overriding function shall have the virtual keyword &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2232</key><name>R02_10_04_Class_Enum_Union_Names_Reused</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 2-10-4&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-10-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11106&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Identifiers that are &amp;#39;class&amp;#39;, &amp;#39;enum&amp;#39; or &amp;#39;union&amp;#39; name shall not be reused as
                  identifiers.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1893</key><name>R04_10_01_NULL_As_An_Integer_Value</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 4-10-1&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 4-10-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10800&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          NULL shall not be used as an integer value. &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1937</key><name>R15_00_02_Throw_Pointers</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 15-0-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 15-0-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10762&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Throwing an exception object of pointer type is not allowed&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2249</key><name>R06_06_05_Single_Point_Exit_At_Function_End</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-6-5&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-6-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11126&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  The only point of exit for every function shall be at the end of its code.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2243</key><name>R05_03_02_Unary_Minus_Operator_On_Unsigned_Type</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 5-3-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-3-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11121&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Objects with an underlying unsigned type shall not be passed as operands to the
                  unary minus operator.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_341</key><name>Stored_Connection_String_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could manipulate the application&amp;#8217;s connection string to its database or other server.Using simple tools and text editing, the attacker might be able do any of the following:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;ul&gt;
&lt;li&gt;Damage application performance (by increasing the MIN POOL SIZE)&lt;/li&gt;
&lt;li&gt;Tamper with the network connection (for example, via TRUSTED CONNECTION)&lt;/li&gt;
&lt;li&gt;Direct the application to the attacker&amp;#8217;s bogus database&lt;/li&gt;
&lt;li&gt;Discover the password to the system account on the database (by a brute-force attack)&lt;/li&gt;
&lt;/ul&gt;
&lt;/ul&gt;
&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;To communicate with its database or with another server (for example, Active Directory), the application dynamically constructs a connection string. This connection string includes concatenated user input. Since the user input is neither checked for data type validity nor subsequently sanitized, the input could be used to maliciously manipulate the connection string.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Ideally, avoid dynamically building connection strings. If it is necessary to dynamically build a connection string, try not to include user input. In any case use platform-provided utlities, such as .NET&amp;#8217;s SqlConnectionStringBuilder, or at least encode the validated input as appropriate for your platform.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
The application constructs a connection string using input from the user
      &lt;/h4&gt;&lt;pre&gt;

 class ConnectionStringInjection
{
        static void foo(Textbox textbox1, SqlConnectionStringBuilder bldr)
        {
                bldr.UserID = textbox1.Text;
                myConnection = new SqlConnection(bldr.ToString());
        }
}



      &lt;/pre&gt;&lt;h4&gt;
The user input is first checked for malicious characters before adding to the connection string
      &lt;/h4&gt;&lt;pre&gt;

 class ConnectionStringInjectionFixed
{
        static void foo(Textbox textbox, SqlConnectionStringBuilder bldr)
        {
                bldr.UserID = textbox.Text.Replace("'", "");
                myConnection = new SqlConnection(bldr.ToString());
        }
}



      &lt;/pre&gt;&lt;h3&gt;Python&lt;/h3&gt;&lt;h4&gt;The application constructs a connection string using input from the user&lt;/h4&gt;&lt;pre&gt;from sys import stdin
import cx_Oracle
print 'Insert your ID: '
userInput = stdin.readline()
connection = cx_Oracle.connect(userInput + '/password@99.999.9.99:PORT/SID')&lt;/pre&gt;&lt;h4&gt;The user inputed file number is turned to a string of that number before use&lt;/h4&gt;&lt;pre&gt;from sys import stdin
import cx_Oracle
print 'Insert your ID: '
userInput = stdin.readline()
connection = cx_Oracle.connect(str(int(userInput)) + '/password@99.999.9.99:PORT/SID')&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;The application constructs a connection string using input from the user&lt;/h4&gt;&lt;pre&gt;public class ConnectionStringInjection {
	public static void main(String[] args) throws SQLException {
		Scanner userInputScanner = new Scanner(System.in);
		System.out.print("\nEnter url name: ");
		String connURL = userInputScanner.nextLine();
		Connection con = DriverManager.getConnection(connURL, "username", "password");
	}
}&lt;/pre&gt;&lt;h4&gt;The user input is translated to a predefined connection string&lt;/h4&gt;&lt;pre&gt;public class ConnectionStringInjectionFixed {
	public static void main(String[] args) throws SQLException {
		HashMap&lt;String, String&gt; sanitize = new HashMap&lt;String, String&gt;();
		sanitize.put("DB_url_1", "DB_url_1");
		sanitize.put("DB_url_2", "DB_url_2");
		sanitize.put("DB_url_3", "DB_url_3");
		Scanner userInputScanner = new Scanner(System.in);
		System.out.print("\nEnter url name: ");
		String connURL = userInputScanner.nextLine();
		Connection con = DriverManager.getConnection(sanitize.get(connURL), "username", "password");
	}
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2230</key><name>R02_10_02_Identifiers_Hide_Outer_Scope_Identifiers</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 2-10-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-10-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11104&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  An Identifiers in a scope shall not have the same name as an identifier in an
                  outer, encompassing scope.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_257</key><name>Find_Read</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2231</key><name>R02_10_03_Typedef_Name_Reused</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 2-10-3&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-10-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11105&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Identifiers that are &amp;#39;typedef&amp;#39; name shall not be reused as identifiers.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_243</key><name>Find_Interactive_Inputs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3420</key><name>Find_Inputs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1891</key><name>R03_02_01_Identical_Function_and_Object_Decl_Def</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 3-2-1&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 3-2-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10814&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Declaration/definitions of objects or functions which differ in the return type or paramater types shall not be.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_346</key><name>Stored_Format_String_Attack</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Uncontrolled Format String&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;134&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_134_Description" id="oc_134_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software uses externally-controlled format strings in
printf-style functions, which can lead to buffer overflows or data
representation problems.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_134_Time of Introduction" id="oc_134_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_134_Applicable Platforms" id="oc_134_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;C: &lt;span class="smaller" style="font-style:italic"&gt;(Often)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;C++: &lt;span class="smaller" style="font-style:italic"&gt;(Often)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Perl: &lt;span class="smaller" style="font-style:italic"&gt;(Rarely)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Languages that support format strings&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Modes of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Modes of Introduction&lt;/div&gt;&lt;div name="oc_134_Modes of Introduction" id="oc_134_Modes of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;The programmer rarely intends for a format string to be user-controlled at
all. This weakness is frequently introduced in code that constructs log
messsages, where a constant format string is omitted.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;In cases such as localization and internationalization, the
language-specific message repositories could be an avenue for exploitation,
but the format string issue would be resultant, since attacker control of
those repositories would also allow modification of message length, format,
and content.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_134_Common Consequences" id="oc_134_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Confidentiality&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Format string problems allow for information disclosure which can
severely simplify exploitation of the program.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Access Control&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Format string problems can result in the execution of arbitrary
code.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_134_Likelihood of Exploit" id="oc_134_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Very High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Detection Methods"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Detection Methods&lt;/div&gt;&lt;div name="oc_134_Detection Methods" id="oc_134_Detection Methods" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Automated Static Analysis&lt;/p&gt;&lt;p&gt;This weakness can often be detected using automated static analysis
tools. Many modern tools use data flow analysis or constraint-based
techniques to minimize the number of false positives.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt; Black Box&lt;/p&gt;&lt;p&gt;Since format strings often occur in rarely-occurring erroneous
conditions (e.g. for error message logging), they can be difficult to
detect using black box methods. It is highly likely that many latent
issues exist in executables that do not have associated source code (or
equivalent source.&lt;/p&gt;&lt;p class="optheading"&gt;&lt;i&gt;Effectiveness: Limited&lt;/i&gt;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_134_Demonstrative Examples" id="oc_134_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following example is exploitable, due to the printf() call in
the printWrapper() function. Note: The stack buffer was added to make
exploitation more simple.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;void printWrapper(char *string) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printf(string);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int main(int argc, char **argv) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char buf[5012];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;memcpy(buf, argv[1], 5012);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;printWrapper(argv[1]);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return (0);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following code copies a command line argument into a buffer
using snprintf().&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int main(int argc, char **argv){&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char buf[128];&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;snprintf(buf,128,argv[1]);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;This code allows an attacker to view the contents of the stack and
write to the stack using a command line argument containing a sequence
of formatting directives. The attacker can read from the stack by
providing more formatting directives, such as %x, than the function
takes as arguments to be formatted. (In this example, the function takes
no arguments to be formatted.) By using the %n formatting directive, the
attacker can write to the stack, causing snprintf() to write the number
of bytes output thus far to the specified argument (rather than reading
a value from the argument, which is the intended behavior). A
sophisticated version of this attack will use four staggered writes to
completely control the value of a pointer on the stack.&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;Certain implementations make more advanced attacks even easier by
providing format directives that control the location in memory to read from
or write to. An example of these directives is shown in the following code,
written for glibc:&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;printf("%d %d %1$d %1$d\n", 5, 9);&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;This code produces the following output: 5 9 5 5 It is also possible
to use half-writes (%hn) to accurately control arbitrary DWORDS in
memory, which greatly reduces the complexity needed to execute an attack
that would otherwise require four staggered writes, such as the one
mentioned in the first example.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Observed Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Observed Examples&lt;/div&gt;&lt;div name="oc_134_Observed Examples" id="oc_134_Observed Examples" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Reference&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1825" target="_blank"&gt;CVE-2002-1825&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;format string in Perl
program&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2001-0717" target="_blank"&gt;CVE-2001-0717&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;format string in bad call to syslog
function&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-0573" target="_blank"&gt;CVE-2002-0573&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;format string in bad call to syslog
function&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2002-1788" target="_blank"&gt;CVE-2002-1788&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;format strings in NNTP server
responses&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-2027" target="_blank"&gt;CVE-2007-2027&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Chain: untrusted search path enabling resultant
format string by loading malicious internationalization
messages&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_134_Potential Mitigations" id="oc_134_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Requirements&lt;/p&gt;&lt;p&gt;Choose a language that is not subject to this flaw.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;Ensure that all format string functions are passed a static string
which cannot be controlled by the user and that the proper number of
arguments are always sent to that function as well. If at all possible,
use functions that do not support the %n operator in format
strings.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Build: Heed the warnings of compilers and linkers, since they may
alert you to improper usage.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_134_Other Notes" id="oc_134_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;While Format String vulnerabilities typically fall under the Buffer
Overflow category, technically they are not overflowed buffers. The Format
String vulnerability is fairly new (circa 1999) and stems from the fact that
there is no realistic way for a function that takes a variable number of
arguments to determine just how many arguments were passed in. The most
common functions that take a variable number of arguments, including
C-runtime functions, are the printf() family of calls. The Format String
problem appears in a number of ways. A *printf() call without a format
specifier is dangerous and can be exploited. For example, printf(input); is
exploitable, while printf(y, input); is not exploitable in that context. The
result of the first call, used incorrectly, allows for an attacker to be
able to peek at stack memory since the input string will be used as the
format specifier. The attacker can stuff the input string with format
specifiers and begin reading stack values, since the remaining parameters
will be pulled from the stack. Worst case, this improper use may give away
enough control to allow an arbitrary value (or values in the case of an
exploit program) to be written into the memory of the running
program.&lt;/p&gt;
&lt;p&gt;Frequently targeted entities are file names, process names,
identifiers.&lt;/p&gt;
&lt;p&gt;Format string problems are a classic C/C++ issue that are now rare due to
the ease of discovery. One main reason format string vulnerabilities can be
exploited is due to the %n operator. The %n operator will write the number
of characters, which have been printed by the format string therefore far,
to the memory pointed to by its argument. Through skilled creation of a
format string, a malicious user may use values on the stack to create a
write-what-where condition. Once this is achieved, he can execute arbitrary
code. Other operators can be used as well; for example, a %9999s operator
could also trigger a buffer overflow, or when used in file-formatting
functions like fprintf, it can generate a much larger output than
intended.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_134_Weakness Ordinalities" id="oc_134_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Primary&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness exists independent of other weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_134_Relationships" id="oc_134_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;74&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=74" target="_blank"&gt;Failure to Sanitize Data into a Different Plane ('Injection')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;133&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=133" target="_blank"&gt;String Errors&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts&lt;/span&gt;699&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;633&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=633" target="_blank"&gt;Weaknesses that Affect Memory&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Resource-specific Weaknesses &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;631&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;726&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=726" target="_blank"&gt;OWASP Top Ten 2004 Category A5 - Buffer Overflows&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;743&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=743" target="_blank"&gt;CERT C Secure Coding Section 09 - Input Output (FIO)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Addressed by the CERT C Secure Coding Standard &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;734&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;808&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=808" target="_blank"&gt;2010 Top 25 - Weaknesses On the Cusp&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in the 2010 CWE/SANS Top 25 Most Dangerous Programming Errors &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;800&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;123&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=123" target="_blank"&gt;Write-what-where Condition&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;635&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=635" target="_blank"&gt;Weaknesses Used by NVD&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Used by NVD &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;635&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Research Gaps"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Research Gaps&lt;/div&gt;&lt;div name="oc_134_Research Gaps" id="oc_134_Research Gaps" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Format string issues are under-studied for languages other than C. Memory
or disk consumption, control flow or variable alteration, and data
corruption may result from format string exploitation in applications
written in other languages such as Perl, PHP, Python, etc.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Affected Resources"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Affected Resources&lt;/div&gt;&lt;div name="oc_134_Affected Resources" id="oc_134_Affected Resources" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Memory&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Functional Areas"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Functional Areas&lt;/div&gt;&lt;div name="oc_134_Functional Areas" id="oc_134_Functional Areas" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;logging&lt;/li&gt;
&lt;li&gt;errors&lt;/li&gt;
&lt;li&gt;general output&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Causal Nature"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt;&lt;a href="javascript:toggleblocksOC('134_Causal Nature');"&gt;f&lt;/a&gt; &lt;/span&gt;Causal Nature&lt;/div&gt;&lt;div name="oc_134_Causal Nature" id="oc_134_Causal Nature" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Implicit&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_134_Taxonomy Mappings" id="oc_134_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Format string vulnerability&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Format String&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Format string problem&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;FIO30-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Exact&lt;/td&gt;&lt;td valign="top"&gt;Exclude user input from format strings&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A1&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Unvalidated Input&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CERT C Secure Coding&lt;/td&gt;&lt;td valign="top"&gt;FIO30-C&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Exclude user input from format strings&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;WASC&lt;/td&gt;&lt;td valign="top"&gt;6&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Format String &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_134_Related Attack Patterns" id="oc_134_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org67.html" target="_blank"&gt;67&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;String Format Overflow in syslog()&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_134_White Box Definitions" id="oc_134_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. start statement that accepts input&lt;/p&gt;
&lt;p&gt;2. end statement that passes a format string to format string function
where&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;a. the input data is part of the format string and&lt;/p&gt;
&lt;p&gt;b. the format string is undesirable&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Where "undesirable" is defined through the following scenarios:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. not validated&lt;/p&gt;
&lt;p&gt;2. incorrectly validated&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_134_References" id="oc_134_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Steve Christey. "Format String Vulnerabilities in Perl
Programs". &amp;lt;&lt;a href="http://www.securityfocus.com/archive/1/418460/30/0/threaded" target="_blank"&gt;http://www.securityfocus.com/archive/1/418460/30/0/threaded&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Hal Burch and
Robert C. Seacord. "Programming Language Format String
Vulnerabilities". &amp;lt;&lt;a href="http://www.ddj.com/dept/security/197002914" target="_blank"&gt;http://www.ddj.com/dept/security/197002914&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;Tim Newsham. "Format String Attacks". Guardent. September 2000. &amp;lt;&lt;a href="http://www.lava.net/~newsham/format-string-attacks.pdf" target="_blank"&gt;http://www.lava.net/~newsham/format-string-attacks.pdf&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;[REF-11] M. Howard and
D. LeBlanc. "Writing Secure Code". Chapter 5, "Format String Bugs" Page 147. 2nd Edition. Microsoft. 2002. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_134_Content History" id="oc_134_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;PLOVER&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Applicable Platforms, Common Consequences,
Detection Factors, Modes of Introduction, Relationships, Other Notes,
Research Gaps, Taxonomy Mappings,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-11-24&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-03-10&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-17&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Improved the White Box Definition&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated White Box Definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Detection Factors, References, Relationships,
Taxonomy Mappings&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1941</key><name>R15_03_02_Catch_All_In_Main</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 15-3-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 15-3-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10766&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          All unhandled exceptions must have at least one excpetion handler to handle
          them.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1896</key><name>R06_04_05_Non_Empty_Switch_Clause_Without_Break_or_Throw</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 6-4-5&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-4-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10816&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Non empty switch clauses cases will contain a break or throw statement. &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2254</key><name>R16_00_03_Use_Of_Undef_Directive</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 16-0-3&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-0-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11100&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  The #undef pre-processing directive shall not be used.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1915</key><name>R16_00_07_Undefined_Macro_Identifiers</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 16-0-7&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-0-7&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10799&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Identifiers in #if or #elif lines shall be defined before, unless they are in a 'defined' clause &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2229</key><name>R02_07_03_Code_CPP_Commented_Out</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 2-7-3&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-7-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11111&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  C style comments should not be used to comment out sections of code.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2256</key><name>R16_02_06_Include_Directive_In_Wrong_Format</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 16-2-6&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-2-6&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11102&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  The &amp;#39;#include&amp;#39; pre-processing directive shall be followed by a header file name
                  surrounded by &amp;quot; ... &amp;quot; or &amp;lt; ... &amp;gt;.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2255</key><name>R16_01_02_Preprocessor_If_And_Else_Operators_Reside_In_Different_Files</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 16-1-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-1-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11101&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  All &amp;#39;#else&amp;#39;, &amp;#39;#elif&amp;#39; and &amp;#39;#endif&amp;#39; directives shall be in the same file as their
                  corresponding &amp;#39;#if&amp;#39; or &amp;#39;#ifdef&amp;#39;directive&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1933</key><name>R08_04_03_Explicit_Return_Throw</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 8-4-3&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 8-4-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10808&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  There must be an explicit return statement&amp;nbsp; for all exit paths from a
                  function that has a non void return type.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_235</key><name>Find_DB_Heuristic</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1942</key><name>R15_03_03_Accessing_Non_Static_Mem_In_Ctr_Dtr</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 15-3-3&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 15-3-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10767&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Access or use of non- static members inside the catch statement in the
          constructor or the destructor is not allowed.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1206</key><name>Find_All_snprintf</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_265</key><name>Get_boundedCpy_Param2</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3881</key><name>Find_Encrypt</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1918</key><name>R17_00_03_Standard_Library_Functions_Override</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 17-0-3&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 17-0-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10804&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          The names of standard library functions shall not be overridden &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1907</key><name>R07_03_06_Find_Using_in_Headers</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 7-3-6&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 7-3-6&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10791&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          No using-declarations or using-directives will be in header files &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1899</key><name>R06_06_02_Backward_Use_Of_Goto</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 6-6-2&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-6-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10818&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          A project shall not have backward uses of the goto command &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1934</key><name>R08_05_01_Uninitialized_Variable_Use</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 8-5-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 8-5-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10761&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          A variable that does not have a defined value must not be used.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3887</key><name>Find_Sanitizer_For_Relience_On_Untusted_Input</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_263</key><name>Find_Uninitialized_Pointer_Decl</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1900</key><name>R07_01_01_Declare_Const_if_not_Modified</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 7-1-1&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 7-1-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10784&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Unchanged variables shall have the const keyword &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1945</key><name>R16_00_02_Define_Only_in_Global_Namespace</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 16-0-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-0-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10770&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  The #define and #undef macros should be used only in the global namespace&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1905</key><name>R07_03_04_Find_Using_Directives</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 7-3-4&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 7-3-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10789&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          A project will not have using-directives (using namespace X) &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1931</key><name>R06_06_03_Continue_In_Legal_For</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-6-3&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-6-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10760&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          The continue statement should only appear in a for loop that is compliant
          according to the MISRA 6-5-1 to 6-5-6 rules.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1889</key><name>R02_13_04_Literal_Suffix_Uppercase</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 2-13-4&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-13-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10780&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Use upper case in suffixes &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1946</key><name>R16_00_04_Function_Like_Macros_Shall_Not_Be_Defined</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 16-0-4&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-0-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10771&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  #define should not be used to define function-like macros&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2730</key><name>Find_Precision_Problem</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1938</key><name>R15_00_03_Goto_Label_Inside_TryCatch</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 15-0-3&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 15-0-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10763&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          &amp;nbsp;The goto label must not appear inside a try-catch statement&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1964</key><name>R06_05_01_Single_Non_Float_LC</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-5-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-5-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10819&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  In for loops, there must be one loop counter and it must not be of type float&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1894</key><name>R04_10_02_Literal_Zero_As_Null_Pointer_Constant</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 4-10-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 4-10-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10801&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Literal zero 0 shall not be used as null-pointer-constant. &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1916</key><name>R17_00_01_Standard_Library_Redefined_Or_Undefined</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 17-0-1&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 17-0-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10802&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Reserved identifiers, macros and functions in the standard library shall not be defined, redefined  or undefined. &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_250</key><name>Find_not_Null_Termination_String</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_237</key><name>Find_Empty_Methods</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_267</key><name>Get_Format_Parameter</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1811</key><name>Find_Identifiers</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1944</key><name>R15_05_01_Statements_Outside_TryCatch_Dtr</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 15-5-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 15-5-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10769&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  All possible destructor exceptions must be caught.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1908</key><name>R07_05_02_Address_Assignment_out_of_Scope</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 7-5-2&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 7-5-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10792&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Automatic storage objects shall not be assigned to another object if that object can exist after the first expires &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_864</key><name>CxDefaultQuery</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_259</key><name>Find_Sanitize</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1207</key><name>Find_All_Strlen</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2742</key><name>Find_Environment_Inputs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1928</key><name>R06_05_04_Incremental_Modified</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-5-4&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-5-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10757&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          In the for loop, the modification of the loop counter can be only of type
          +=n,-=n, ++,--;&amp;nbsp; n should remain constant for the loop duration.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_253</key><name>Find_Password_Strings</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_347</key><name>Stored_Log_Forging</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could engineer audit logs of security-sensitive actions and lay a false audit trail, potentially implicating an innocent user or hiding an incident.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application writes audit logs upon security-sensitive actions. Since the audit log includes user input that is neither checked for data type validity nor subsequently sanitized, the input could contain false information made to look like legitimate audit log data,&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Validation is not a replacement for encoding. Fully encode all dynamic data, regardless of source, before embedding it in logs.&lt;/li&gt;
&lt;li&gt;Use a secure logging mechanism.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;Swift&lt;/h3&gt;&lt;h4&gt;Ensure you encode any special delimiter characters before writing to a log file.&lt;/h4&gt;&lt;pre&gt;


print(logDetails.stringByReplacingOccurrencesOfString("\n", withString: "\\n"))


&lt;/pre&gt;&lt;h3&gt;Objc&lt;/h3&gt;&lt;h4&gt;Ensure you encode any special delimiter characters before writing to a log file.&lt;/h4&gt;&lt;pre&gt;


NSLog(@"%@", [logDetails stringByReplacingOccurrencesOfString:@"\n" withString:@"\\n"]);


&lt;/pre&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
Ensure you encode any special delimiter characters before writing to a log file.

      &lt;/h4&gt;&lt;pre&gt;


Log.Write( logDetails.Replace(CRLF, @"\CRLF"));



      &lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;
Ensure you encode any special delimiter characters before writing to a log file.

      &lt;/h4&gt;&lt;pre&gt;


Log.Write( logDetails.Replace(CRLF, @"\CRLF"));


      &lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_264</key><name>Find_Write</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_251</key><name>Find_Open_Files_Methods</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3902</key><name>Find_Hash_Without_Salt_CryptoPP</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1924</key><name>R06_02_01_Assignment_in_Sub_Expr</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-2-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-2-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10754&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
                    Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  &lt;span lang="en-us"&gt;
                  &lt;span style="WIDOWS: 2; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT: small 'Times New Roman'; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"&gt;
                  The use of assignement operators in sub-expressions is not allowed.&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;
                    &lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                        http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1911</key><name>R10_01_01_Find_Virtual_Base_Classes</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 10-1-1&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 10-1-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10795&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Classes derived from virtual classes shall not exist &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_241</key><name>Find_Inputs_Sockets</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1923</key><name>R05_03_03_Overloading_Reference_Oper</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 5-3-3&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-3-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10753&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
                    Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  The overloading of the operator &amp;amp; is not allowed.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;
                    &lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                        http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3886</key><name>Find_Source_Of_Security_Decision</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1950</key><name>R18_00_04_Ctime</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 18-0-4&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 18-0-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10811&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  The use of functions of the &amp;lt;ctime&amp;gt; library is not allowed.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3882</key><name>Find_Passwords_Unsafe</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2251</key><name>R08_04_01_Function_With_Variable_Number_Of_Arguments</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 8-4-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 8-4-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11128&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Non-main functions shall not be defined to accept a variable number of
                  arguments.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2242</key><name>R05_02_10_Using_Of_Incremental_And_Decrimental_Operators</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 5-2-10&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-2-10&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11120&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  In an expression, there should not be mix of the ++ or -- operators with other
                  operators.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1921</key><name>R02_05_01_Digraphs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 2-5-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-5-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID:
          10750&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          &lt;a href="http://en.wikipedia.org/wiki/Digraph_(computing)"&gt;Digraphs&lt;/a&gt; are not
          allowed.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1936</key><name>R09_06_03_Enum_Bit_Fields</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 9-6-3&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 9-6-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10810&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Bit fields of&amp;nbsp; enum type are not allowed&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_344</key><name>Stored_Environment_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Improper Sanitization of Special Elements used in a Command ('Command Injection')&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;77&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Class)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_77_Description" id="oc_77_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software constructs all or part of a command using
externally-influenced input from an upstream component, but it does not sanitize
or incorrectly sanitizes special elements that could modify the intended command
when it is sent to a downstream component.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt; Command injection vulnerabilities typically occur when:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. Data enters the application from an untrusted source.&lt;/p&gt;
&lt;p&gt;2. The data is part of a string that is executed as a command by the
application.&lt;/p&gt;
&lt;p&gt;3. By executing the command, the application gives an attacker a
privilege or capability that the attacker would not otherwise
have.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_77_Time of Introduction" id="oc_77_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_77_Applicable Platforms" id="oc_77_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Common Consequences"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Common Consequences&lt;/div&gt;&lt;div name="oc_77_Common Consequences" id="oc_77_Common Consequences" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Scope&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Effect&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Access Control&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt;Command injection allows for the execution of arbitrary commands and
code by the attacker.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Integrity&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;p&gt; If a malicious user injects a character (such as a semi-colon) that
delimits the end of one command and the beginning of another, it may be
possible to then insert an entirely new and unrelated command that was
not intended to be executed. &lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_77_Likelihood of Exploit" id="oc_77_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Very High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_77_Demonstrative Examples" id="oc_77_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following simple program accepts a filename as a command line
argument and displays the contents of the file back to the user. The program
is installed setuid root because it is intended for use as a learning tool
to allow system administrators in-training to inspect privileged system
files without giving them the ability to modify them or damage the
system.&lt;/p&gt;&lt;div class="indent "&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;int main(char* argc, char** argv) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;char cmd[CMD_MAX] = "/usr/bin/cat ";&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strcat(cmd, argv[1]);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;system(cmd);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Because the program runs with root privileges, the call to system()
also executes with root privileges. If a user specifies a standard
filename, the call works as expected. However, if an attacker passes a
string of the form ";rm -rf /", then the call to system() fails to
execute cat due to a lack of arguments and then plows on to recursively
delete the contents of the root partition.&lt;/p&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following code is from an administrative web application
designed to allow users to kick off a backup of an Oracle database using a
batch-file wrapper around the rman utility and then run a cleanup.bat script
to delete some temporary files. The script rmanDB.bat accepts a single
command line parameter, which specifies what type of backup to perform.
Because access to the database is restricted, the application runs the
backup as a privileged user.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;String btype = request.getParameter("backuptype");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;String cmd = new String("cmd.exe /K \"&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;c:\\util\\rmanDB.bat "&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;+btype+&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;"&amp;amp;&amp;amp;c:\\utl\\cleanup.bat\"")&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;System.Runtime.getRuntime().exec(cmd);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The problem here is that the program does not do any validation on the
backuptype parameter read from the user. Typically the Runtime.exec()
function will not execute multiple commands, but in this case the
program first runs the cmd.exe shell in order to run multiple commands
with a single call to Runtime.exec(). Once the shell is invoked, it will
happily execute multiple commands separated by two ampersands. If an
attacker passes a string of the form "&amp;amp; del c:\\dbms\\*.*", then
the application will execute this command along with the others
specified by the program. Because of the nature of the application, it
runs with the privileges necessary to interact with the database, which
means whatever command the attacker injects will run with those
privileges as well.&lt;/p&gt;&lt;p class="subheading"&gt;Example 3&lt;/p&gt;&lt;p&gt;The following code from a system utility uses the system property
APPHOME to determine the directory in which it is installed and then
executes an initialization script based on a relative path from the
specified directory.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;String home = System.getProperty("APPHOME");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;String cmd = home + INITCMD;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;java.lang.Runtime.getRuntime().exec(cmd);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The code above allows an attacker to execute arbitrary commands with
the elevated privilege of the application by modifying the system
property APPHOME to point to a different path containing a malicious
version of INITCMD. Because the program does not validate the value read
from the environment, if an attacker can control the value of the system
property APPHOME, then they can fool the application into running
malicious code and take control of the system.&lt;/p&gt;&lt;p class="subheading"&gt;Example 4&lt;/p&gt;&lt;p&gt;The following code is from a web application that allows users
access to an interface through which they can update their password on the
system. Part of the process for updating passwords in certain network
environments is to run a make command in the /var/yp directory, the code for
which is shown below.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;System.Runtime.getRuntime().exec("make");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The problem here is that the program does not specify an absolute path
for make and fails to clean its environment prior to executing the call
to Runtime.exec(). If an attacker can modify the $PATH variable to point
to a malicious binary called make and cause the program to be executed
in their environment, then the malicious binary will be loaded instead
of the one intended. Because of the nature of the application, it runs
with the privileges necessary to perform system operations, which means
the attacker's make will now be run with these privileges, possibly
giving the attacker complete control of the system.&lt;/p&gt;&lt;p class="subheading"&gt;Example 5&lt;/p&gt;&lt;p&gt;The following code is a wrapper around the UNIX command cat which
prints the contents of a file to standard out. It is also
injectable:&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;#include &amp;lt;unistd.h&amp;gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;int main(int argc, char **argv) {&lt;/div&gt;&lt;div class="indent "&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char cat[] = "cat ";&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;char *command;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;size_t commandLength;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;commandLength = strlen(cat) + strlen(argv[1]) + 1;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;command = (char *) malloc(commandLength);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncpy(command, cat, commandLength);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;strncat(command, argv[1], (commandLength - strlen(cat))
);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;&lt;br&gt;&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;system(command);&lt;/div&gt;
&lt;div style="font-size:90%;"&gt;return (0);&lt;/div&gt;
&lt;/div&gt;&lt;div style="font-size:90%;"&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;Used normally, the output is simply the contents of the file
requested:&lt;/p&gt;&lt;div class="indent "&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;$ ./catWrapper Story.txt&lt;/div&gt;&lt;div style="font-size:90%;"&gt;When last we left our heroes...&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;However, if we add a semicolon and another command to the end of this
line, the command is executed by catWrapper with no complaint:&lt;/p&gt;&lt;div class="indent Attack"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Attack)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;&lt;/span&gt;&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;$ ./catWrapper Story.txt; ls&lt;/div&gt;&lt;div style="font-size:90%;"&gt;When last we left our heroes...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;Story.txt&lt;/div&gt;&lt;div style="font-size:90%;"&gt;SensitiveFile.txt&lt;/div&gt;&lt;div style="font-size:90%;"&gt;PrivateData.db&lt;/div&gt;&lt;div style="font-size:90%;"&gt;a.out*&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;If catWrapper had been set to have a higher privilege level than the
standard user, arbitrary commands could be executed with that higher
privilege.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_77_Potential Mitigations" id="oc_77_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Architecture and Design&lt;/p&gt;&lt;p&gt;If at all possible, use library calls rather than external processes
to recreate the desired functionality&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p&gt;If possible, ensure that all external commands called from the program
are statically created.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p class="subheading"&gt;Phase:  Implementation&lt;/p&gt;&lt;p class="optheading"&gt;Strategy:  Input Validation&lt;/p&gt;&lt;p&gt;Assume all input is malicious. Use an "accept known good" input
validation strategy, i.e., use a whitelist of acceptable inputs that
strictly conform to specifications. Reject any input that does not
strictly conform to specifications, or transform it into something that
does. Do not rely exclusively on looking for malicious or malformed
inputs (i.e., do not rely on a blacklist). However, blacklists can be
useful for detecting potential attacks or determining which inputs are
so malformed that they should be rejected outright.&lt;/p&gt;&lt;p&gt;When performing input validation, consider all potentially relevant
properties, including length, type of input, the full range of
acceptable values, missing or extra inputs, syntax, consistency across
related fields, and conformance to business rules. As an example of
business rule logic, "boat" may be syntactically valid because it only
contains alphanumeric characters, but it is not valid if you are
expecting colors such as "red" or "blue."&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Run time: Run time policy enforcement may be used in a white-list
fashion to prevent use of any non-sanctioned commands.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Assign permissions to the software system that prevents the user from
accessing/opening privileged files.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_77_Other Notes" id="oc_77_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;Command injection is a common problem with wrapper programs.&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_77_Weakness Ordinalities" id="oc_77_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Primary&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness exists independent of other weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_77_Relationships" id="oc_77_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;74&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=74" target="_blank"&gt;Failure to Sanitize Data into a Different Plane ('Injection')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;713&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=713" target="_blank"&gt;OWASP Top Ten 2007 Category A2 - Injection Flaws&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2007) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;629&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;722&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=722" target="_blank"&gt;OWASP Top Ten 2004 Category A1 - Unvalidated Input&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004)&lt;/span&gt;711&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Category&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;727&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=727" target="_blank"&gt;OWASP Top Ten 2004 Category A6 - Injection Flaws&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;78&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=78" target="_blank"&gt;Improper Sanitization of Special Elements used in an OS Command ('OS Command Injection')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;88&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=88" target="_blank"&gt;Argument Injection or Modification&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;89&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=89" target="_blank"&gt;Improper Sanitization of Special Elements used in an SQL Command ('SQL Injection')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;90&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=90" target="_blank"&gt;Failure to Sanitize Data into LDAP Queries ('LDAP Injection')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;624&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=624" target="_blank"&gt;Executable Regular Expression Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Causal Nature"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt;&lt;a href="javascript:toggleblocksOC('77_Causal Nature');"&gt;f&lt;/a&gt; &lt;/span&gt;Causal Nature&lt;/div&gt;&lt;div name="oc_77_Causal Nature" id="oc_77_Causal Nature" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Explicit&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_77_Taxonomy Mappings" id="oc_77_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Command Injection&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;CLASP&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Command injection&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2007&lt;/td&gt;&lt;td valign="top"&gt;A2&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Injection Flaws&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A1&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Unvalidated Input&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP Top Ten 2004&lt;/td&gt;&lt;td valign="top"&gt;A6&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE More Specific&lt;/td&gt;&lt;td valign="top"&gt;Injection Flaws&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_77_Related Attack Patterns" id="oc_77_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org15.html" target="_blank"&gt;15&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Command Delimiters&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org23.html" target="_blank"&gt;23&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;File System Function Injection, Content Based&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org43.html" target="_blank"&gt;43&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Exploiting Multiple Input Interpretation Layers&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org75.html" target="_blank"&gt;75&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Manipulating Writeable Configuration Files&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org6.html" target="_blank"&gt;6&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Argument Injection&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org11.html" target="_blank"&gt;11&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Cause Web Server Misclassification&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org76.html" target="_blank"&gt;76&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Manipulating Input to File System Calls&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_77_References" id="oc_77_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;G. Hoglund and
G. McGraw. "Exploiting Software: How to Break Code". Addison-Wesley. February 2004. &lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_77_Content History" id="oc_77_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-15&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Veracode&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Suggested OWASP Top Ten 2004
mapping&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Relationships, Other Notes,
Taxonomy Mappings, Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples,
Name&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Demonstrative Examples, Description,
Name&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-10-29&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Common Consequences, Description, Other Notes,
Potential Mitigations&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2010-02-16&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Potential Mitigations,
Relationships&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Command
Injection&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Failure to Sanitize Data into
a Control Plane (aka 'Command Injection')&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Failure to Sanitize Data into
a Control Plane ('Command Injection')&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2257</key><name>R16_03_02_Pound_Preprocessor_Operator_Is_Used</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 16-3-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-3-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11103&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Use of the &amp;#39;#&amp;#39; or &amp;#39;##&amp;#39; operators is not allowed.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1920</key><name>R18_04_01_Dynamic_Heap_Memory_Allocation</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 18-4-1&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 18-4-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10806&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Dynamic heap memory allocation shall not be used. &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2239</key><name>R05_00_12_Not_Plain_Char_Type_Usage</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 5-0-12&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-0-12&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11115&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Char types with the signed/unsigned modifiers shall only be used with numeric
                  values.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_247</key><name>Find_Memory_Deallocation</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1951</key><name>R18_07_01_Csignal</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 18-7-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 18-7-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10812&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  The use of functions and facilities of the &amp;lt;csignal&amp;gt; library is not allowed.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3636</key><name>Find_Unknown_References</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3646</key><name>Find_Array_Size_Literals</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1914</key><name>R12_01_03_Find_non_Explicit_Constructor</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 12-1-3&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 12-1-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10798&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          A constructor with only one parameter which is fundamental shall be explicit &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_245</key><name>Find_LoadLibrary</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_345</key><name>Stored_Path_Traversal</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could define any arbitrary file path for the application to use, potentially leading to:&lt;/div&gt;
&lt;ol&gt;
&lt;ul&gt;
&lt;li&gt;Stealing sensitive files, such as configuration or system files&lt;/li&gt;
&lt;li&gt;Overwriting files such as program binaries, configuration files, or system files&lt;/li&gt;
&lt;li&gt;Deleting critical files, causing a denial of service (DoS).&lt;/li&gt;
&lt;/ul&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application uses user input in the file path for accessing files on the application server&amp;#8217;s local disk. This enables an attacker to arbitrarily determine the file path.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Ideally, avoid depending on user input for file selection.&lt;/li&gt;
&lt;li&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Accept user input only for the filename, not for the path and folders.&lt;/li&gt;
&lt;li&gt;Ensure that file path is fully canonicalized.&lt;/li&gt;
&lt;li&gt;Explicitly limit the application to using a designated folder that separate from the applications binary folder.&lt;/li&gt;
&lt;li&gt;Restrict the privileges of the application&amp;#8217;s OS user to necessary files and folders. The application should not be able to write to the application binary folder, and should not read anything outside of the application folder and data folder.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;Using unvalidated user input as the file name may enable the user to access arbitrary files on the server local disk&lt;/h4&gt;&lt;pre&gt;public class PathTraversal
{
        private void foo(TextBox textbox1)
        {
                string fileNum = textbox1.Text;
                string path = "c:\files\file" + fileNum;
                FileStream f = new FileStream(path, FileMode.Open);
                byte[] output = new byte[10];
                f.Read(output,0, 10);
        }
}&lt;/pre&gt;&lt;h4&gt;
Potentially hazardous characters are removed from the user input before use
      &lt;/h4&gt;&lt;pre&gt;public class PathTraversalFixed
{
        private void foo(TextBox textbox1)
        {
                string fileNum = textbox1.Text.Replace("\", "").Replace("..", "");
                string path = "c:\files\file" + fileNum;
                FileStream f = new FileStream(path, FileMode.Open);
                byte[] output = new byte[10];
                f.Read(output,0, 10);
        }
}&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;Using unvalidated user input as the file name may enable the user to access arbitrary files on the server local disk&lt;/h4&gt;&lt;pre&gt;public class Absolute_Path_Traversal {
    public static void main(String[] args) {
        Scanner userInputScanner = new Scanner(System.in);
        System.out.print("\nEnter file name: ");
        String name = userInputScanner.nextLine();
        String path = "c:\files\file" + name;
        try {
            BufferedReader reader = new BufferedReader(new FileReader(path));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}&lt;/pre&gt;&lt;h4&gt;Potentially hazardous characters are removed from the user input before use&lt;/h4&gt;&lt;pre&gt;public class Absolute_Path_Traversal_Fixed {
    public static void main(String[] args) {
        Scanner userInputScanner = new Scanner(System.in);
        System.out.print("\nEnter file name: ");
        String name = userInputScanner.nextLine();
        name = name.replace("/", "").replace("..", "");
        String path = "c:\files\file" + name;
        try {
            BufferedReader reader = new BufferedReader(new FileReader(path));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2253</key><name>R09_06_04_Bit_Fields_Length</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 9-6-4&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 9-6-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11130&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Bit fields that are of the type signed int shall be at least 2 bits long.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1940</key><name>R15_01_03_Empty_Throw_Outside_Catch</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 15-1-3&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 15-1-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10765&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          An empty throw statement can only appear in the catch statement.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1939</key><name>R15_01_02_No_Explicit_Null_Throw</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 15-1-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 15-1-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10764&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          An explicit throw of NULL is not allowed&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_262</key><name>Find_Uninitialized_Decl</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2729</key><name>Find_All_Declarators</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_236</key><name>Find_DB_Methods</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_229</key><name>Find_Builtin_Types</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2238</key><name>R05_00_11_Plain_Char_Type_Usage</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 5-0-11&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-0-11&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11114&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Char types without the signed/unsigned modifiers shall only be used with
                  character values.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1209</key><name>Find_All_strncpy</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1903</key><name>R07_03_02_Find_non_Global_Mains</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 7-3-2&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 7-3-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10787&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Only the global main shall be called "main" &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1909</key><name>R07_05_03_Return_Parameter_Passed_by_Ref</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 7-5-3&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 7-5-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10793&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          A function will not return a parameter that was passed by reference or const reference &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1897</key><name>R06_04_06_Non_Default_Final_Clause_In_Switch_Statement</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 6-4-6&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-4-6&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10817&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Switches will have final case as "default". If enum types were called as cases, they can also call all enum members as cases. &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_228</key><name>Find_Bounded_Methods</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_234</key><name>Find_DB_Connection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3888</key><name>Find_Sink_Of_Security_Decision</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1205</key><name>CGI</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_268</key><name>Get_Format_Parameter_Input</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_335</key><name>Second_Order_SQL_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could directly access all of the system's data. The attacker would be able to steal any sensitive information stored by the system (such as personal user details or credit cards), and possibly change or erase existing data.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application communicates with its database by sending a textual SQL query. The application creates the query by simply concatenating strings including data obtained from the database. Since that data may have been previously obtained from user input, and is neither checked for data type validity nor subsequently sanitized, the data could contain SQL commands that would be interpreted as such by the database.&lt;/div&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ol&gt;
&lt;li&gt;Validate all data, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified structure, rather than reject bad patterns. Check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;Instead of concatenating strings: a. Use secure database components such as stored procedures, parameterized queries, and object bindings (for commands and parameters). b. An even better solution is to use an ORM library, such as EntityFramework, Hibernate, or iBatis.&lt;/li&gt;
&lt;li&gt;Restrict access to database objects and functionality, according to the Principle of Least Privilege.&lt;/li&gt;
&lt;/ol&gt;      
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Source Code Examples&lt;/h2&gt;&lt;h3&gt;CSharp&lt;/h3&gt;&lt;h4&gt;
The application creates an SQL query using data obtained from a database
      &lt;/h4&gt;&lt;pre&gt;public class SecondOrderSQLInjection
{
        public void foo(SqlConnection connection, SqlDataAdapter DA)
        {
                DataSet DS = new DataSet();
                DA.Fill(ref DS, "UserName"); 
                SqlCommand command = new SqlCommand("SELECT * FROM Customers " + "WHERE UserName = " + DS[0]["UserName"].ToString(), connection);
                command.ExecuteNonQuery();
        }
}&lt;/pre&gt;&lt;h4&gt;
The data obtained from the database is checked for potentially malicious characters
      &lt;/h4&gt;&lt;pre&gt;class SecondOrderSQLInjectionFixed
{
        public void foo(SqlConnection connection, SqlDataAdapter DA)
        {
                DataSet DS = new DataSet();
                DA.Fill(ref DS, "UserName");
                string userName = DS[0]["UserName"].ToString().Replace("'", "");
                SqlCommand command = new SqlCommand("SELECT * FROM Customers " + "WHERE UserName = " + userName, connection);
                command.ExecuteNonQuery();
        }
}&lt;/pre&gt;&lt;h3&gt;Java&lt;/h3&gt;&lt;h4&gt;The application creates an SQL query using data obtained from a database&lt;/h4&gt;&lt;pre&gt;public class Second_Order_SQL_Injection {
	public static void sql(Connection con, String sqlStm) {
		try {
			Statement stmt = con.createStatement();
			ResultSet rs = stmt.executeQuery(sqlStm);
			String userName = rs.getString("USER_NAME");
			String newSqlStm = "Update USER set PASSWORD = '1234' where userName like " + userName;
			stmt.executeUpdate(newSqlStm);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}&lt;/pre&gt;&lt;h4&gt;The data obtained from the database is checked for potentially malicious characters&lt;/h4&gt;&lt;pre&gt;public class Second_Order_SQL_Injection_Fixed {
	public static void sql(Connection con, String sqlStm) {
		try {
			Statement stmt = con.createStatement();
			ResultSet rs = stmt.executeQuery(sqlStm);
			String userName = rs.getString("USER_NAME");
			userName = userName.replaceAll("'", "");
			String newSqlStm = "Update USER set PASSWORD = '1234' where userName like " + userName;
			stmt.executeUpdate(newSqlStm);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}&lt;/pre&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1887</key><name>R00_01_12_Find_Virtual_Unused_Parameters</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 0-1-12&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 0-1-12&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10779&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Unused paramaters shall not be in virtual functions and all their overriding functions &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_260</key><name>Find_Strings</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2241</key><name>R05_02_01_AND_OR_Operands_Not_As_Postfix_Expressions</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 5-2-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-2-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11119&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  The operands of the &amp;#39;&amp;amp;&amp;amp;&amp;#39; and &amp;#39;||&amp;#39; operators shall be postfix expressions.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2252</key><name>R09_05_01_Use_Of_Union</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 9-5-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 9-5-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11129&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Use of the &amp;#39;union&amp;#39; structure type is not allowed.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2236</key><name>R05_00_07_Improper_Explicit_Floating_Integral_Conversion_Of_Expression</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 5-0-7&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-0-7&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11117&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Explicit floating-integral cast of a cvalue expression is discouraged.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2233</key><name>R02_13_02_Non_Zero_Octal_Constant</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 2-13-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-13-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11107&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  No octal constants or escape sequences are allowed.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2248</key><name>R06_04_04_Case_Not_Enclosed_By_Compound_Switch</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-4-4&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-4-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11125&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  A &amp;#39;case&amp;#39; label shall be directly encompassed by the compound body of its parent
                  &amp;#39;switch&amp;#39; statement.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1901</key><name>R07_01_02_Declare_Ref_Const_if_not_Modified</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 7-1-2&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 7-1-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10785&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Unchanged references and pointers to unchanged variables shall have the const keyword &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_256</key><name>Find_Pointer_Decl</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_239</key><name>Find_Initialized_Decl</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1949</key><name>R16_01_01_Defined_Standart_Forms</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 16-1-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-1-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10774&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  There are only two standard forms to be used with the defined preprocessor :&amp;nbsp;
                  defined (identifier) ,defined identifier.&lt;br&gt;
                  &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1892</key><name>R03_04_01_Obj_Defined_Outside_Minimal_Scope</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 3-4-1&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 3-4-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10815&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Declarations of identifiers shall be in their minimal scope. &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_238</key><name>Find_Empty_Strings</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_244</key><name>Find_IO</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_258</key><name>Find_Required_Null_Termination_String</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1888</key><name>R02_13_01_Non_ISO_Escapes</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 2-13-1&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-13-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10813&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Escape sequences not defined in the ISO C++ standard shall not be used.&lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1913</key><name>R10_03_03_Redeclare_Function_as_Pure</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 10-3-3&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 10-3-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10797&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          A virtual function overriding a pure virtual function shall be defined as pure &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2235</key><name>R03_09_02_Non_Typedef_Basic_Types</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 3-9-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 3-9-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11112&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Instead of the basic types, typedefs that indicate type, size and sign should be
                  used.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2244</key><name>R05_18_01_Comma_Operator_Used</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 5-18-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-18-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11118&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  The comma operator shall not be used.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2228</key><name>R02_07_02_Code_Commented_Out</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 2-7-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-7-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11110&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Comments should not be used to comment out sections of code.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1947</key><name>R16_00_05_No_Tokens_In_Func_Like_Macro</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 16-0-5&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 16-0-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10772&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  No preprocessing directives should be used before arguments to a function-like
                  macros.&lt;br&gt;
                  &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1902</key><name>R07_03_01_Definitions_in_Global_Namespace</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 7-3-1&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 7-3-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10786&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Only main, namespaces and extern "C" will be in the global namespace &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2227</key><name>R02_03_01_Trigraphs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 2-3-1&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-3-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11109&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Trigraphs are not allowed.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1910</key><name>R08_00_01_Find_Multiple_Declarators</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 8-0-1&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 8-0-1&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10794&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          There will be only one declaration per line &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2745</key><name>Find_Unbounded_Methods</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_248</key><name>Find_Methods</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1932</key><name>R06_06_04_One_GoTo_Break_In_Iteration</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-6-4&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-6-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10807&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  There should be at most one goto or break statement per iteration statement.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3897</key><name>Find_Checksums</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_230</key><name>Find_C_Files_Contents</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1208</key><name>Find_All_strncat</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1930</key><name>R06_05_06_Bool_Lcv_Change</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-5-6&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-5-6&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10759&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          In&amp;nbsp; the for loop, in statement modification of a loop control varaible that is
          not a loop&amp;nbsp; counter ,is allowed only if it&amp;#39;s of type bool&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_350</key><name>Stored_Resource_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;Improper Control of Resource Identifiers ('Resource Injection')&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: &lt;/b&gt;99&lt;span style="font-style:italic; font-size:80%"&gt; (Weakness Base)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_99_Description" id="oc_99_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;The software receives input from an upstream component, but it
does not restrict or incorrectly restricts the input before it is used as an
identifier for a resource that may be outside the intended sphere of
control.&lt;/div&gt;
&lt;p class="subheading"&gt;Extended Description&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;This may enable an attacker to access or modify otherwise protected system
resources.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Time of Introduction"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Time of Introduction&lt;/div&gt;&lt;div name="oc_99_Time of Introduction" id="oc_99_Time of Introduction" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;ul&gt;
&lt;li&gt;Architecture and Design&lt;/li&gt;
&lt;li&gt;Implementation&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Applicable Platforms&lt;/div&gt;&lt;div name="oc_99_Applicable Platforms" id="oc_99_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Languages&lt;/p&gt;&lt;div class="indent"&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Likelihood of Exploit"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Likelihood of Exploit&lt;/div&gt;&lt;div name="oc_99_Likelihood of Exploit" id="oc_99_Likelihood of Exploit" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;High&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Demonstrative Examples"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Demonstrative Examples&lt;/div&gt;&lt;div name="oc_99_Demonstrative Examples" id="oc_99_Demonstrative Examples" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="subheading"&gt;Example 1&lt;/p&gt;&lt;p&gt;The following Java code uses input from an HTTP request to create a
file name. The programmer has not considered the possibility that an
attacker could provide a file name such as "../../tomcat/conf/server.xml",
which causes the application to delete one of its own configuration
files.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;Java&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;String rName = request.getParameter("reportName");&lt;/div&gt;&lt;div style="font-size:90%;"&gt;File rFile = new File("/usr/local/apfr/reports/" + rName);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;...&lt;/div&gt;&lt;div style="font-size:90%;"&gt;rFile.delete();&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p class="subheading"&gt;Example 2&lt;/p&gt;&lt;p&gt;The following code uses input from the command line to determine
which file to open and echo back to the user. If the program runs with
privileges and malicious users can create soft links to the file, they can
use the program to read the first part of any file on the
system.&lt;/p&gt;&lt;div class="indent Bad_Code"&gt;&lt;div id="ExampleCode" style="clear:both"&gt;&lt;div class="shadow"&gt;&lt;div class="CodeHead"&gt;&lt;div style="float:right; font-style:italic; font-size:10px; color:#98A9B7"&gt;(Bad Code)&lt;/div&gt;&lt;div class="optheading smaller"&gt;&lt;span style="font-weight:normal; font-style:italic"&gt;Example
Language: &lt;/span&gt;C++&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div class="top"&gt;&lt;div style="font-size:90%;"&gt;ifstream ifs(argv[0]);&lt;/div&gt;&lt;div style="font-size:90%;"&gt;string s;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;ifs &amp;gt;&amp;gt; s;&lt;/div&gt;&lt;div style="font-size:90%;"&gt;cout &amp;lt;&amp;lt; s;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;p&gt;The kind of resource the data affects indicates the kind of content
that may be dangerous. For example, data containing special characters
like period, slash, and backslash, are risky when used in methods that
interact with the file system. (Resource injection, when it is related
to file system resources, sometimes goes by the name "path
manipulation.") Similarly, data that contains URLs and URIs is risky for
functions that create remote connections.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Potential Mitigations"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Potential Mitigations&lt;/div&gt;&lt;div name="oc_99_Potential Mitigations" id="oc_99_Potential Mitigations" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;&lt;p&gt;Assume all input is malicious. Use an appropriate combination of black
lists and white lists to ensure only valid and expected input is
processed by the system.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Other Notes"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Other Notes&lt;/div&gt;&lt;div name="oc_99_Other Notes" id="oc_99_Other Notes" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A resource injection issue occurs when the following two conditions are
met: 1. An attacker can specify the identifier used to access a system
resource. For example, an attacker might be able to specify part of the name
of a file to be opened or a port number to be used. 2. By specifying the
resource, the attacker gains a capability that would not otherwise be
permitted. For example, the program may give the attacker the ability to
overwrite the specified file, run with a configuration controlled by the
attacker, or transmit sensitive information to a third-party server. Note:
Resource injection that involves resources stored on the filesystem goes by
the name path manipulation and is reported in separate category. See the
path manipulation description for further details of this vulnerability.
&lt;/p&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Weakness Ordinalities"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Weakness Ordinalities&lt;/div&gt;&lt;div name="oc_99_Weakness Ordinalities" id="oc_99_Weakness Ordinalities" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Ordinality&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Description&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;div style="font-size:90%;"&gt;Primary&lt;/div&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div style="font-size:90%; font-style:italic; padding:5px;"&gt;(where
the weakness exists independent of other weaknesses)&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_99_Relationships" id="oc_99_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;20&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=20" target="_blank"&gt;Improper Input Validation&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Seven Pernicious Kingdoms &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;700&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;ChildOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;74&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=74" target="_blank"&gt;Failure to Sanitize Data into a Different Plane ('Injection')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;706&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=706" target="_blank"&gt;Use of Incorrectly-Resolved Name or Reference&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="primary"&gt;&lt;td valign="top"&gt;CanAlsoBe&lt;/td&gt;&lt;td valign="top" nowrap="" class="right" align="center" style="padding-top:1px"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;73&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=73" target="_blank"&gt;External Control of File Name or Path&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;641&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=641" target="_blank"&gt;Insufficient Filtering of File and Other Resource Names for Executable Content&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Development Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;699&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;1000&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;630&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=630" target="_blank"&gt;Weaknesses Examined by SAMATE&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses Examined by SAMATE &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;630&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;PeerOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;621&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=621" target="_blank"&gt;Variable Extraction Error&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Research Concepts&lt;/span&gt;1000&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Causal Nature"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt;&lt;a href="javascript:toggleblocksOC('99_Causal Nature');"&gt;f&lt;/a&gt; &lt;/span&gt;Causal Nature&lt;/div&gt;&lt;div name="oc_99_Causal Nature" id="oc_99_Causal Nature" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;p class="indent"&gt;Explicit&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Taxonomy Mappings"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Taxonomy Mappings&lt;/div&gt;&lt;div name="oc_99_Taxonomy Mappings" id="oc_99_Taxonomy Mappings" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Mapped Taxonomy Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Node ID&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Fit&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Mapped Node Name&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top"&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Resource Injection&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Related Attack Patterns"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Related Attack Patterns&lt;/div&gt;&lt;div name="oc_99_Related Attack Patterns" id="oc_99_Related Attack Patterns" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;CAPEC-ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Attack Pattern Name&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;&lt;div style="font-weight:normal; font-size:85%; font-style:italic; color:#000000"&gt;(CAPEC Version: 1.5)&lt;/div&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org10.html" target="_blank"&gt;10&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Buffer Overflow via Environment Variables&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;&lt;a href="http://capec.mitre.org75.html" target="_blank"&gt;75&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;Manipulating Writeable Configuration Files&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="White Box Definitions"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;White Box Definitions&lt;/div&gt;&lt;div name="oc_99_White Box Definitions" id="oc_99_White Box Definitions" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td&gt;
&lt;p&gt;A weakness where the code path has:&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;1. start statement that accepts input followed by&lt;/p&gt;
&lt;p&gt;2. a statement that allocates a System Resource using name where the
input is part of the name&lt;/p&gt;
&lt;p&gt;3. end statement that accesses the System Resource where&lt;/p&gt;
&lt;div class="indent "&gt;
&lt;p&gt;a. the name of the System Resource violates protection&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_99_Content History" id="oc_99_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;7 Pernicious Kingdoms&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Externally Mined&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Modifications&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Modification Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Modifier&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-07-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Eric Dalci&lt;/td&gt;&lt;td valign="top"&gt;Cigital&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Time of Introduction&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-01&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;added/updated white box definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-09-08&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Relationships, Other Notes, Taxonomy Mappings,
Weakness Ordinalities&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated Description, Name&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-17&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;KDM Analytics&lt;/td&gt;&lt;td valign="top"&gt;&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Improved the White Box Definition&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2009-07-27&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;CWE Content Team&lt;/td&gt;&lt;td valign="top"&gt;MITRE&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;Internal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;updated White Box Definitions&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Previous Entry Names&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Change Date&lt;/th&gt;&lt;th valign="top" nowrap="" colspan="3"&gt;Previous Entry
Name&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2008-04-11&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Resource
Injection&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap=""&gt;2009-05-27&lt;/td&gt;&lt;td valign="top" colspan="3"&gt;Insufficient Control of
Resource Identifiers (aka 'Resource Injection')&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td style="border-bottom:1px solid #BAC5E3" colspan="4"&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_240</key><name>Find_Inputs_MFC</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3901</key><name>Find_Hash_Without_Salt_UnixCrypt</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1922</key><name>R02_10_05_Non_Member_Static_Name_Reuse</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 2-10-5&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-10-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10751&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
                    Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  There should
                  &lt;span style="color: rgb(0, 0, 0); font-family: 'Times New Roman'; font-size: small; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; display: inline !important; float: none;"&gt;
                  not be reuse of the identifier name of a non member static object or function,
                  across any source files in the project.&lt;/span&gt; &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;
                    &lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                        http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1926</key><name>R06_05_02_Loop_Counter_Modify</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-5-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-5-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10755&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  &lt;span style="LINE-HEIGHT: normal; WIDOWS: 2; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT-FAMILY: 'Times New Roman'; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"&gt;
                  In the for loop, if the modification of the loop counter is not done by ++ and
                  -- ,&lt;br&gt;
                  then in the condition part of the statement ,only the following operands can be
                  used on the loop counter: &amp;lt;= ,&amp;gt;= ,&amp;lt; ,&amp;gt;.&lt;/span&gt;&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2247</key><name>R06_04_02_If_Else_If_Not_Ending_With_Else</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-4-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-4-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11124&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  All &amp;#39;if&amp;#39; ... &amp;#39;else if&amp;#39; ... structures shall be terminated by a non empty else
                  statement.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1357</key><name>Find_Outputs_MFC</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_3900</key><name>Find_Hash_Without_Salt_OpenSSL</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_254</key><name>Find_Passwords</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_232</key><name>Find_Cmd_Execute</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_340</key><name>Stored_Command_Injection</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;h2&gt;Risk&lt;/h2&gt;&lt;h4&gt;What might happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;An attacker could run arbitrary system-level OS commands on the application server host. Depending on the application&amp;rsquo;s OS permissions, these could include:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;File actions (read / create / modify / delete)&lt;/li&gt;
&lt;li&gt;Open a network connection to the attacker&amp;rsquo;s server&lt;/li&gt;
&lt;li&gt;Start and stop system services&lt;/li&gt;
&lt;li&gt;Complete server takeover&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Cause&lt;/h2&gt;&lt;h4&gt;How does it happen&lt;/h4&gt;&lt;p&gt;&lt;div&gt;The application runs an OS system-level command to complete it's task, rather than via application code. The command includes untrusted data, that may be controllable by an attacker. This untrusted string may contain malicious, system-level commands engineered by an attacker, which would be executed as though the attacker were running commands directly on the application server.&lt;/div&gt;
&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;General Recommendations&lt;/h2&gt;&lt;h4&gt;How to avoid it&lt;/h4&gt;&lt;p&gt;&lt;ul&gt;
&lt;li&gt;Refactor the code to avoid any direct shell command execution. Instead, use platform provided APIs or library calls.&lt;/li&gt;
&lt;li&gt;If it is impossible to remove the command execution, execute only static commands that do not include dynamic, user-controlled data.&lt;/li&gt;
&lt;li&gt;Validate all input, regardless of source. Validation should be based on a whitelist: accept only data fitting a specified format, rather than rejecting bad patterns (blacklist). Parameters should be limited to an allowed character set, and non-validated input should be dropped. In addition to characters, check for:&lt;/li&gt;
&lt;ul&gt;
&lt;li&gt;Data type&lt;/li&gt;
&lt;li&gt;Size&lt;/li&gt;
&lt;li&gt;Range&lt;/li&gt;
&lt;li&gt;Format&lt;/li&gt;
&lt;li&gt;Expected values&lt;/li&gt;
&lt;/ul&gt;
&lt;li&gt;In order to minimize damage as a measure of defense in depth, configure the application to run using a restricted user account that has no unnecessary OS privileges.&lt;/li&gt;
&lt;li&gt;If possible, isolate all OS commands to use a separate, dedicated user account that has minimal privileges only for the specific commands and files used by the application, according to the Principle of Least Privilege.&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MAJOR</severity><tag>checkmarx-medium</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1927</key><name>R06_05_03_Change_Lc_In_St_And_Cond</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-5-3&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-5-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10756&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          In the for loop, modification of the loop counter in the condition or the
          statement is not allowed.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_266</key><name>Get_Conditions</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1898</key><name>R06_04_07_Find_Switch_Condition_Bool</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 6-4-7&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-4-7&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10783&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          A switch statement shall not have a bool type &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1904</key><name>R07_03_03_Unnamed_NS_in_Headers</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 7-3-3&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 7-3-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10788&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Header files won't have unnamed namespaces &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2234</key><name>R02_13_03_U_Suffix_Not_Applied_To_Unsigned_Hex_Oct</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 2-13-3&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 2-13-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11108&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  The 'U' or 'u' suffix shall be attached to any octal of hexadecimal literal.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1929</key><name>R06_05_05_Lcv_Change_In_For_Stmt</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-5-5&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-5-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10758&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          In&amp;nbsp; the for loop, modification of a loop control varaible that is not a
          loop counter is not allowed in condition or experssion.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2250</key><name>R07_05_04_Recursion_Exists</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 7-5-4&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 7-5-4&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 11127&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Recursion shall not occur, neither by a function calling itself directly, nor by
                  an indirect cycle of calls.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1943</key><name>R15_03_07_Catch_All_Final</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 15-3-7&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 15-3-7&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10768&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  If there are multiple catch statement for a single try-catch statement,the
                  &lt;a href="http://www.cplusplus.com/doc/tutorial/exceptions/"&gt;catch all&lt;/a&gt;
                  statement should appear last.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1935</key><name>R09_06_02_bool_Unsigned_Signed_Bit_Field</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 9-6-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 9-6-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10809&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
          Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  Only bool type or&amp;nbsp; an explicit signed or unsigned integral type are allowed
                  for bit fileds.&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                      http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1919</key><name>R18_00_05_Unbounded_Functions_Of_Library_CString</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 18-0-5&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 18-0-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10805&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          The unbounded functions of library &lt;cstring&gt; shall not been used. &lt;br&gt;
          &lt;br&gt;
          &lt;/cstring&gt;&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1917</key><name>R17_00_02_Standard_Library_Macros_Reuse</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 17-0-2&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 17-0-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10803&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          The names of standard library macros and objects shall not be reused &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1895</key><name>R05_02_11_Find_Special_Operator_Overloads</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 5-2-11&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 5-2-11&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10782&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Specific operators shall not be overloaded ',' , '||', '&amp;&amp;' &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_2743</key><name>Find_Environment_Outputs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1890</key><name>R03_01_03_Find_Arrays_Without_Size</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 3-1-3&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 3-1-3&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10781&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          Arrays shall always have a size. &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_343</key><name>Stored_DoS_by_Sleep</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
	&lt;link href="main.css" rel="stylesheet" type="text/css"&gt;
&lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;&lt;span style="font-weight:bold;color:white;"&gt;OWASP Top Ten 2004 Category A9 - Denial of Service&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;

&lt;span class="tool"&gt;&lt;/span&gt;

&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Category ID: &lt;/b&gt;730&lt;span style="font-style:italic; font-size:80%"&gt; (Category)&lt;/span&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Incomplete"&gt;Incomplete&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_730_Description" id="oc_730_Description" class="expandblock"&gt;&lt;div class="detail"&gt;
&lt;p class="subheading"&gt;Description Summary&lt;/p&gt;&lt;div class="indent"&gt;Weaknesses in this category are related to the A9 category in
the OWASP Top Ten 2004.&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Relationships"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Relationships&lt;/div&gt;&lt;div name="oc_730_Relationships" id="oc_730_Relationships" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" id="Detail"&gt;&lt;tr&gt;&lt;th valign="top"&gt;Nature&lt;/th&gt;&lt;th valign="top"&gt;Type&lt;/th&gt;&lt;th valign="top"&gt;ID&lt;/th&gt;&lt;th valign="top" width="100%"&gt;Name&lt;/th&gt;&lt;th valign="middle" class="left" style="text-align:center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View(s) this relationship pertains to&lt;/span&gt;&lt;/span&gt;&lt;/th&gt;&lt;/tr&gt;

&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;170&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=170" target="_blank"&gt;Improper Null Termination&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;248&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=248" target="_blank"&gt;Uncaught Exception&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;369&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=369" target="_blank"&gt;Divide By Zero&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Variant&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;382&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=382" target="_blank"&gt;J2EE Bad Practices: Use of System.exit()&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;400&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=400" target="_blank"&gt;Uncontrolled Resource Consumption ('Resource Exhaustion')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;401&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=401" target="_blank"&gt;Failure to Release Memory Before Removing Last Reference ('Memory Leak')&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;404&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=404" target="_blank"&gt;Improper Resource Shutdown or Release&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Class&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;405&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=405" target="_blank"&gt;Asymmetric Resource Consumption (Amplification)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;410&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=410" target="_blank"&gt;Insufficient Resource Pool&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;412&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=412" target="_blank"&gt;Unrestricted Externally Accessible Lock&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;476&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=476" target="_blank"&gt;NULL Pointer Dereference&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;ParentOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weakness Base&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;674&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=674" target="_blank"&gt;Uncontrolled Recursion&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;tbody&gt;&lt;tr class="foreign"&gt;&lt;td valign="top"&gt;MemberOf&lt;/td&gt;&lt;td valign="middle" nowrap="" class="right" align="center"&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;View&lt;/span&gt;&lt;/span&gt;&lt;/td&gt;&lt;td valign="top"&gt;711&lt;/td&gt;&lt;td valign="top"&gt;&lt;a href="cwe.aspx?cweid=711" target="_blank"&gt;Weaknesses in OWASP Top Ten (2004)&lt;/a&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div class="left"&gt;&lt;b&gt;&lt;span class="tool"&gt;&lt;span class="tip"&gt;Weaknesses in OWASP Top Ten (2004) &lt;b&gt;(primary)&lt;/b&gt;&lt;/span&gt;711&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="References"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;References&lt;/div&gt;&lt;div name="oc_730_References" id="oc_730_References" class="expandblock"&gt;&lt;div class="detail"&gt;&lt;div id="Grouped"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;
&lt;tr&gt;&lt;td valign="top"&gt;OWASP. "A9 Denial of Service". 2007. &amp;lt;&lt;a href="http://sourceforge.net/project/showfiles.php?group_id=64424&amp;amp;package_id=70827" target="_blank"&gt;http://sourceforge.net/project/showfiles.php?group_id=64424&amp;amp;package_id=70827&lt;/a&gt;&amp;gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id="Content History"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Content History&lt;/div&gt;&lt;div name="oc_730_Content History" id="oc_730_Content History" class="expandblock"&gt;&lt;div class="tabledetail"&gt;&lt;table width="100%" cellpadding="0" cellspacing="0" border="0" class="Detail"&gt;&lt;tr&gt;&lt;th valign="top" colspan="5" class="title"&gt;Submissions&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th valign="top" nowrap=""&gt;Submission Date&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Submitter&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Organization&lt;/th&gt;&lt;th valign="top" nowrap=""&gt;Source&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" nowrap="" rowspan="2" style="border-bottom:1px solid #BAC5E3"&gt;2008-08-15&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top"&gt;Veracode&lt;/td&gt;&lt;td valign="top" nowrap=""&gt;External Submission&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td valign="top" colspan="3" style="border-bottom:1px solid #BAC5E3; font-size:90%; background-color:#eeeeee"&gt;Suggested creation of view and provided
mappings&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;/html&gt;

&lt;div align="right" style="padding-top:5px; padding-bottom:5px; clear:right" class="noprint"&gt;&lt;a class="backtop" href="#top"&gt;Back to top&lt;/a&gt;&lt;/div&gt;

&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>MINOR</severity><tag>checkmarx-low</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_872</key><name>CxDefaultQuery</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_269</key><name>Sanitize_Integer_Overflow</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1906</key><name>R07_03_05_Multiple_Declarations_After_Using</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;
  &lt;title&gt;MISRA RULE 7-3-5&lt;/title&gt;&lt;/head&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 7-3-5&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;Weakness ID: 10790&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
          A using-declaration for an identifier will not split the identifier's multiple definitions &lt;br&gt;
          &lt;br&gt;
          &lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;&lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
              http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;&amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                  C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_1925</key><name>R06_02_02_FloatingPt_Equality_Inequality_Testing</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;  &lt;html&gt;&lt;head&gt;&lt;meta http-equiv="content-type" content="text-html; charset=utf-8"&gt;&lt;/head&gt;
  &lt;title&gt;MISRA RULE 6-2-2&lt;/title&gt;


&lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;   &lt;link href="main.css" rel="stylesheet" type="text/css"&gt;   &lt;div id="CWEDefinition"&gt;&lt;div class="title"&gt;&lt;table cellpadding="0" cellspacing="0" border="0" width="100%"&gt;&lt;tr&gt;&lt;td valign="top" width="20px"&gt;&lt;/td&gt;&lt;td valign="top"&gt;&lt;div align="center"&gt;
          &lt;span style="font-weight:bold;color:white;"&gt;MISRA RULE 6-2-2&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;&lt;td valign="top" width="20px"&gt;&lt;div class="left noprint"&gt;    &lt;span class="tool"&gt;&lt;/span&gt;    &lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div class="status"&gt;&lt;table width="100%" border="0" cellpadding="0" cellspacing="0"&gt;&lt;tr&gt;&lt;td valign="top" align="left" width="33%" nowrap=""&gt;&lt;b&gt;
          Weakness ID: 10752&lt;/b&gt;&lt;/td&gt;&lt;td valign="top" align="center" nowrap=""&gt;&lt;/td&gt;&lt;td valign="top" align="right" nowrap=""&gt;&lt;b&gt;
                    Status: &lt;/b&gt;&lt;span class="Draft"&gt;Draft&lt;/span&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;div id="Description"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              Description&lt;/div&gt;&lt;div name="oc_90_Description" id="oc_90_Description" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;div class="indent"&gt;
                  &lt;span style="LINE-HEIGHT: normal; WIDOWS: 2; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT-FAMILY: 'Times New Roman'; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(0,0,0); FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"&gt;
                  Testing for equality or inequality of expressions that are of floating point
                  type is not allowed.&lt;/span&gt;&lt;/div&gt;

          &lt;p class="subheading"&gt;
              MISRA Web Page&lt;/p&gt;
                    &lt;div class="indent"&gt;
              &lt;a href="http://www.misra.org.uk/" style="color: rgb(0, 0, 102); font-family: Verdana, Arial, Helvetica, Geneva, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; font-size: small; "&gt;
                        http://www.misra.org.uk/&lt;/a&gt;&lt;br&gt;
              &lt;br&gt;
          &lt;/div&gt;  &lt;/div&gt;
          &lt;/div&gt;
          &lt;/div&gt;
          &lt;div id="Applicable Platforms"&gt;&lt;div class="heading"&gt;&lt;span id="script"&gt; &lt;/span&gt;
              &lt;br&gt;
              Applicable Platforms&lt;/div&gt;&lt;div name="oc_90_Applicable Platforms" id="oc_90_Applicable Platforms" class="expandblock"&gt;&lt;div class="detail"&gt;  &lt;p class="subheading"&gt;
                  &amp;nbsp;Languages&lt;/p&gt;&lt;div class="indent"&gt;  &lt;p&gt;
                      C++&lt;/p&gt;
              &lt;/div&gt;
              &lt;/div&gt;
              &lt;/div&gt;
          &lt;/div&gt;
      &lt;/div&gt;&lt;/html&gt;

  &lt;html xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;&lt;/html&gt;&lt;/html&gt;&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule><rule><key>checkmarx_227</key><name>Find_BO_Funcs</name><description>&lt;div style="display:none"&gt;![CDATA[&lt;/div&gt;No available description for this rule.&lt;div style="display:none"&gt;]]&lt;/div&gt;</description><severity>INFO</severity><tag>checkmarx-info</tag><type>VULNERABILITY</type><remediationFunction>LINEAR</remediationFunction><remediationFunctionGapMultiplier>1min</remediationFunctionGapMultiplier></rule></rules>